configuration file will accept line of unlimited size and
 manage the "\" continuation char at the end of line.
For example:

admin: cyrus\
       admin@example.com\
       admin@example.net

diff -rNu cyrus-imapd-2.3.9.orig/lib/libconfig.c cyrus-imapd-2.3.9/lib/libconfig.c
--- cyrus-imapd-2.3.9.orig/lib/libconfig.c	2007-07-18 20:56:11.000000000 +0200
+++ cyrus-imapd-2.3.9/lib/libconfig.c	2007-11-06 20:43:51.000000000 +0100
@@ -299,41 +299,79 @@
     FILE *infile;
     enum imapopt opt = IMAPOPT_ZERO;
     int lineno = 0;
-    char buf[4096], errbuf[1024];
+    /* buf is dynamic and grow to support the longest line, or to support multiline */
+    char *buf;
+    int sizeofbuf=4096;
+    int bufchunk=4096;
+    int eol, len;
+    char errbuf[1024];
     char *p, *q, *key, *fullkey, *srvkey, *val, *newval;
     int service_specific;
     int idlen = (config_ident ? strlen(config_ident) : 0);
 
+    buf=xmalloc(sizeofbuf);
     /* read in config file */
     infile = fopen(filename, "r");
     if (!infile) {
-	strlcpy(buf, CYRUS_PATH, sizeof(buf));
-	strlcat(buf, filename, sizeof(buf));
+	strlcpy(buf, CYRUS_PATH, sizeofbuf);
+	strlcat(buf, filename, sizeofbuf);
 	infile = fopen(buf, "r");
     }
     if (!infile) {
-	snprintf(buf, sizeof(buf), "can't open configuration file %s: %s",
+	snprintf(buf, sizeofbuf, "can't open configuration file %s: %s",
 		 filename, error_message(errno));
 	fatal(buf, EC_CONFIG);
     }
 
     /* check to see if we've already read this file */
     if (hash_lookup(filename, &includehash)) {
-	snprintf(buf, sizeof(buf), "configuration file %s included twice",
+	snprintf(buf, sizeofbuf, "configuration file %s included twice",
 		 filename);
 	fatal(buf, EC_CONFIG);
+        free(buf);
 	return;
     }
     else {
 	hash_insert(filename, (void*) 0xDEADBEEF, &includehash);
     }
     
-    while (fgets(buf, sizeof(buf), infile)) {
+    while (fgets(buf, sizeofbuf, infile)) {
 	lineno++;
 
 	service_specific = 0;
-	
-	if (buf[0] && buf[strlen(buf)-1] == '\n') buf[strlen(buf)-1] = '\0';
+
+        /* read one line */
+        eol=0;
+        while (!eol) {
+            if (buf[0]) {
+                len=strlen(buf);
+                if (buf[len-1] == '\n') {
+                    buf[--len]='\0';
+                    if (buf[len-1] == '\\') {
+                        /* line continuation char */
+                        len--;
+                        if (len==sizeofbuf-2) {
+                            sizeofbuf+=bufchunk;
+                            buf=xrealloc(buf, sizeofbuf+bufchunk);
+                        }
+                           fgets(buf+len, sizeofbuf-len, infile);
+                           lineno++;
+                    }
+                    else {
+                        eol=1;
+                    }
+                }
+                else {
+                    /* check if the line is longer than the buffer */
+                    if (ungetc(getc(infile), infile)!=EOF) {
+                        sizeofbuf+=bufchunk;
+                        buf=xrealloc(buf, sizeofbuf);
+                        fgets(buf+len, sizeofbuf-len, infile);
+                    }
+                }
+            }
+        }
+
 	for (p = buf; *p && isspace((int) *p); p++);
 	if (!*p || *p == '#') continue;
 
@@ -573,4 +611,5 @@
 	}
     }
     fclose(infile);
+    free(buf);
 }
diff -rNu cyrus-imapd-2.3.9.orig/doc/man/imapd.conf.5.html cyrus-imapd-2.3.9/doc/man/imapd.conf.5.html
--- cyrus-imapd-2.3.9.orig/doc/man/imapd.conf.5.html    2007-08-15 19:23:17.000000000 +0200
+++ cyrus-imapd-2.3.9/doc/man/imapd.conf.5.html 2007-11-08 15:45:44.000000000 +0100
@@ -61,7 +61,12 @@
 configuration option is being set to.</p>
 <!-- INDENTATION -->
 <p>Blank lines and lines beginning with
-&lsquo;&lsquo;#&rsquo;&rsquo; are ignored.</p>
+&lsquo;&lsquo;#&rsquo;&rsquo; are ignored.
+Despite that their is no limitation on the size of a line, you can
+enter a backslash &lsquo;&lsquo;\&rsquo;&rsquo; at the end of the
+line to force the line to continue on the next one. The
+&lsquo;&lsquo;\&rsquo;&rsquo; must be the last character of
+the line. No spaces are inserted between both line.</p>
 <!-- INDENTATION -->
 <p>For boolean and enumerated options, the values
 &lsquo;&lsquo;yes&rsquo;&rsquo;,
diff -rNu cyrus-imapd-2.3.9.orig/man/imapd.conf.5 cyrus-imapd-2.3.9/man/imapd.conf.5
--- cyrus-imapd-2.3.9.orig/man/imapd.conf.5     2007-11-08 15:19:37.000000000 +0100
+++ cyrus-imapd-2.3.9/man/imapd.conf.5  2007-11-08 15:45:04.000000000 +0100
@@ -58,6 +58,10 @@
 set to.
 .PP
 Blank lines and lines beginning with ``#'' are ignored.
+Despite that their is no limitation on the size of a line, you can
+enter a backslash ``\\'' at the end of the line to force the line to
+continue on the next one. The ``\\'' must be the last character of
+the line. No spaces are inserted between both line.
 .PP
 For boolean and enumerated options, the values ``yes'', ``on'', ``t'',
 ``true'' and ``1'' turn the option on, the values ``no'', ``off'',
