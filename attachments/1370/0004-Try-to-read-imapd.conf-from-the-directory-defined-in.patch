From be05688729635b3e70c52bcadec0f8aef8f52814 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D8yvind=20Kolbu?= <oyvind.kolbu@usit.uio.no>
Date: Tue, 29 Mar 2011 07:52:49 +0200
Subject: [PATCH 4/7] Try to read imapd.conf from the directory defined in CYRUS_PATH.

---
 lib/libconfig.c     |   18 ++++++++++++++++--
 master/masterconf.c |   17 ++++++++++++++++-
 2 files changed, 32 insertions(+), 3 deletions(-)

diff --git a/lib/libconfig.c b/lib/libconfig.c
index 640ed4e..352b835 100644
--- a/lib/libconfig.c
+++ b/lib/libconfig.c
@@ -356,6 +356,7 @@ void config_read_file(const char *filename)
     enum imapopt opt = IMAPOPT_ZERO;
     int lineno = 0;
     char *buf, errbuf[1024];
+    char *cyrus_path;
     unsigned bufsize, len;
     char *p, *q, *key, *fullkey, *srvkey, *val, *newval;
     int service_specific;
@@ -364,8 +365,21 @@ void config_read_file(const char *filename)
     bufsize = GROWSIZE;
     buf = xmalloc(bufsize);
 
-    /* read in config file */
-    infile = fopen(filename, "r");
+    /* read in config file
+       Check if we have CYRUS_PATH defined, and then use that config */
+    cyrus_path = getenv("CYRUS_PATH");
+    if (cyrus_path) {
+        if (cyrus_path[0] != '\0') {
+            strlcpy(buf, cyrus_path, bufsize);
+            strlcat(buf, filename, bufsize);
+            infile = fopen(buf, "r");
+        } 
+        //free(cyrus_path);
+    }
+
+    if (!infile)
+        infile = fopen(filename, "r");
+
     if (!infile) {
 	strlcpy(buf, CYRUS_PATH, bufsize);
 	strlcat(buf, filename, bufsize);
diff --git a/master/masterconf.c b/master/masterconf.c
index e03a1ad..396fded 100644
--- a/master/masterconf.c
+++ b/master/masterconf.c
@@ -223,9 +223,24 @@ void masterconf_getsection(const char *section, masterconf_process *f,
     int seclen = strlen(section);
     int level = 0;
     int lineno = 0;
+    char filename[256];
     char buf[4096];
+    char *cyrus_path;
+
+    cyrus_path = getenv("CYRUS_PATH");
+    if (cyrus_path) {
+        if ((strlen(cyrus_path) + 1 +
+          sizeof(MASTER_CONFIG_FILENAME)) < sizeof(filename)) {
+	    strcpy(filename, cyrus_path);
+	    strcat(filename, "/");
+	    strcat(filename, MASTER_CONFIG_FILENAME);
+	    infile = fopen(filename, "r");
+        }
+        //free(cyrus_path);
+    }
+    if (!infile)
+	infile = fopen(MASTER_CONFIG_FILENAME, "r");
 
-    infile = fopen(MASTER_CONFIG_FILENAME, "r");
     if (!infile) {
 	snprintf(buf, sizeof(buf), "can't open configuration file %s: %s",
 		MASTER_CONFIG_FILENAME, strerror(errno));
-- 
1.7.1

