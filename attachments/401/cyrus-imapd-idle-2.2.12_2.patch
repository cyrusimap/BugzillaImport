diff -ur cyrus-imapd-2.2.12.orig/imap/idle.h cyrus-imapd-2.2.12/imap/idle.h
--- cyrus-imapd-2.2.12.orig/imap/idle.h	2003-10-23 00:05:10 +0400
+++ cyrus-imapd-2.2.12/imap/idle.h	2005-12-07 16:30:27 +0300
@@ -64,6 +64,9 @@
  */
 int idle_init(struct mailbox *mailbox, idle_updateproc_t *proc);
 
+/* Can do off-sheduled checking of the mailbox and ALERTs */
+void idle_signal(void);
+
 /* Cleanup when IDLE is completed. */
 void idle_done(struct mailbox *mailbox);
 
diff -ur cyrus-imapd-2.2.12.orig/imap/idle_idled.c cyrus-imapd-2.2.12/imap/idle_idled.c
--- cyrus-imapd-2.2.12.orig/imap/idle_idled.c	2003-10-23 00:05:11 +0400
+++ cyrus-imapd-2.2.12/imap/idle_idled.c	2005-12-07 16:30:28 +0300
@@ -70,6 +70,7 @@
 static int notify_sock = -1;
 static struct sockaddr_un idle_remote;
 static int idle_remote_len = 0;
+static int signal_type;
 
 /* Forward declarations */
 int idle_send_msg(int msg, struct mailbox *mailbox);
@@ -156,7 +157,12 @@
 
     idle_update = proc;
 
+    /* we don't want to "recursive" call idle_update() on receiving
+       different signals in same time */
     sigemptyset(&action.sa_mask);
+    sigaddset(&action.sa_mask, SIGUSR1);
+    sigaddset(&action.sa_mask, SIGUSR2);
+
     action.sa_flags = 0;
 #ifdef SA_RESTART
     action.sa_flags |= SA_RESTART;
@@ -169,8 +175,13 @@
 	if ((sigaction(SIGUSR1, &action, NULL) < 0) ||
 	    (sigaction(SIGUSR2, &action, NULL) < 0)) {
 	    syslog(LOG_ERR, "sigaction: %m");
+
+	    /* cancel receiving signals and tell idled that we're done */
+	    idle_done(mailbox);
+
 	    return 0;
 	}
+	signal_type = 0;
     }
     else { /* otherwise, we'll poll with SIGALRM */
 	if (sigaction(SIGALRM, &action, NULL) < 0) {
@@ -179,6 +190,8 @@
 	}
 
 	alarm(idle_period);
+
+	signal_type = 1;
     }
 
     return 1;
@@ -195,6 +208,16 @@
     signal(SIGALRM, SIG_IGN);
 }
 
+void idle_signal(void)
+{
+    if(!signal_type) {
+	pid_t pid = getpid();
+
+	kill(pid, SIGUSR1);
+	kill(pid, SIGUSR2);
+    }
+}
+
 /*
  * Send a message to idled
  */
diff -ur cyrus-imapd-2.2.12.orig/imap/idle_no.c cyrus-imapd-2.2.12/imap/idle_no.c
--- cyrus-imapd-2.2.12.orig/imap/idle_no.c	2003-10-23 00:05:11 +0400
+++ cyrus-imapd-2.2.12/imap/idle_no.c	2005-12-07 16:30:28 +0300
@@ -58,3 +58,7 @@
 void idle_done(struct mailbox *mailbox)
 {
 }
+
+void idle_signal(void)
+{
+}
diff -ur cyrus-imapd-2.2.12.orig/imap/idle_poll.c cyrus-imapd-2.2.12/imap/idle_poll.c
--- cyrus-imapd-2.2.12.orig/imap/idle_poll.c	2003-10-23 00:05:11 +0400
+++ cyrus-imapd-2.2.12/imap/idle_poll.c	2005-12-07 16:30:28 +0300
@@ -108,3 +108,7 @@
     /* Remove the polling function */
     signal(SIGALRM, SIG_IGN);
 }
+
+void idle_signal(void)
+{
+}
diff -ur cyrus-imapd-2.2.12.orig/imap/imapd.c cyrus-imapd-2.2.12/imap/imapd.c
--- cyrus-imapd-2.2.12.orig/imap/imapd.c	2005-02-14 09:39:55 +0300
+++ cyrus-imapd-2.2.12/imap/imapd.c	2005-12-07 16:30:28 +0300
@@ -118,6 +118,7 @@
 static int imapd_userisproxyadmin = 0;
 static sasl_conn_t *imapd_saslconn; /* the sasl connection context */
 static int imapd_starttls_done = 0; /* have we done a successful starttls? */
+static int idle_update_ignore;
 #ifdef HAVE_SSL
 /* our tls connection, if any */
 static SSL *tls_conn = NULL;
@@ -2180,6 +2181,8 @@
     int c;
     static struct buf arg;
 
+    idle_update_ignore = 1;
+    
     /* Setup for doing mailbox updates */
     if (!idle_init(imapd_mailbox, idle_update)) {
 	prot_printf(imapd_out, 
@@ -2191,8 +2194,15 @@
     prot_printf(imapd_out, "+ idling\r\n");
     prot_flush(imapd_out);
 
+    idle_update_ignore = 0;
+    idle_signal();
+
     /* Get continuation data */
     c = getword(imapd_in, &arg);
+
+    /* Do any necessary cleanup */
+    idle_done(imapd_mailbox);
+
     if (c != EOF) {
 	if (!strcasecmp(arg.s, "Done") &&
 	    (c = (c == '\r') ? prot_getc(imapd_in) : c) == '\n') {
@@ -2207,15 +2217,15 @@
 	}
     }
 
-    /* Do any necessary cleanup */
-    idle_done(imapd_mailbox);
-
     return;
 }
 
 /* Send unsolicited untagged responses to the client */
 void idle_update(idle_flags_t flags)
 {
+    if(idle_update_ignore)
+ 	return;
+
     if ((flags & IDLE_MAILBOX) && imapd_mailbox)
 	index_check(imapd_mailbox, 0, 1);
 
