5064297e conn=1001 op=0 do_bind
ber_scanf fmt ({imt) ber:
ber_scanf fmt ({m) ber:
ber_scanf fmt (m) ber:
ber_scanf fmt (}}) ber:
5064297e >>> dnPrettyNormal: <>
5064297e <<< dnPrettyNormal: <>, <>
5064297e do_bind: dn () SASL mech PLAIN
5064297e slap_sasl_getdn: u:id converted to uid=st999999@ou3.example.org,cn=PLAIN,cn=auth
5064297e >>> dnNormalize: <uid=st999999@ou3.example.org,cn=PLAIN,cn=auth>
5064297e <<< dnNormalize: <uid=st999999@ou3.example.org,cn=plain,cn=auth>
5064297e ==>slap_sasl2dn: converting SASL name uid=st999999@ou3.example.org,cn=plain,cn=auth to a DN
5064297e ==> rewrite_context_apply [depth=1] string='uid=st999999@ou3.example.org,cn=plain,cn=auth'
5064297e ==> rewrite_rule_apply rule='uid=sasl-test-ou1-([^,]*),cn=.*,cn=auth' string='uid=st999999@ou3.example.org,cn=plain,cn=auth' [1 pass(es)]
5064297e ==> rewrite_rule_apply rule='uid=sasl-test-ou2-([^,]*),cn=.*,cn=auth' string='uid=st999999@ou3.example.org,cn=plain,cn=auth' [1 pass(es)]
5064297e ==> rewrite_rule_apply rule='uid=sasl-test-ou3-([^,]*),cn=.*,cn=auth' string='uid=st999999@ou3.example.org,cn=plain,cn=auth' [1 pass(es)]
5064297e ==> rewrite_rule_apply rule='uid=(.*)@proxy.auth,cn=.*,cn=auth' string='uid=st999999@ou3.example.org,cn=plain,cn=auth' [1 pass(es)]
5064297e ==> rewrite_rule_apply rule='uid=([^,]*)@ou3.example.org,cn=plain,cn=auth' string='uid=st999999@ou3.example.org,cn=plain,cn=auth' [1 pass(es)]
5064297e ==> rewrite_context_apply [depth=1] res={0,'ldap:///ou=people,ou=ou3,dc=example,dc=org??sub?(uid=st999999)'}
5064297e slap_parseURI: parsing ldap:///ou=people,ou=ou3,dc=example,dc=org??sub?(uid=st999999)
ldap_url_parse_ext(ldap:///ou=people,ou=ou3,dc=example,dc=org??sub?(uid=st999999))
put_filter: "(uid=st999999)"
put_filter: simple
put_simple_filter: "uid=st999999"
ber_scanf fmt ({mm}) ber:
5064297e >>> dnNormalize: <ou=people,ou=ou3,dc=example,dc=org>
5064297e <<< dnNormalize: <ou=people,ou=ou3,dc=example,dc=org>
5064297e slap_sasl2dn: performing internal search (base=ou=people,ou=ou3,dc=example,dc=org, scope=2)
5064297e => hdb_search
5064297e bdb_dn2entry("ou=people,ou=ou3,dc=example,dc=org")
5064297e => hdb_dn2id("ou=people,ou=ou3,dc=example,dc=org")
5064297e <= hdb_dn2id: got id=0x1e5e
5064297e entry_decode: ""
5064297e <= entry_decode()
5064297e search_candidates: base="ou=people,ou=ou3,dc=example,dc=org" (0x00001e5e) scope=2
5064297e => hdb_dn2idl("ou=people,ou=ou3,dc=example,dc=org")
5064297e => bdb_equality_candidates (objectClass)
5064297e => key_read
5064297e <= bdb_index_read: failed (-30987)
5064297e <= bdb_equality_candidates: id=0, first=0, last=0
5064297e => bdb_equality_candidates (uid)
5064297e => key_read
5064297e <= bdb_index_read 1 candidates
5064297e <= bdb_equality_candidates: id=1, first=9661, last=9661
5064297e bdb_search_candidates: id=1 first=9661 last=9661
5064297e entry_decode: ""
5064297e <= entry_decode()
5064297e send_ldap_result: conn=1001 op=0 p=3
5064297e <==slap_sasl2dn: Converted SASL name to uidNumber=11887,ou=people,ou=ou3,dc=example,dc=org
5064297e slap_sasl_getdn: dn:id converted to uidNumber=11887,ou=people,ou=ou3,dc=example,dc=org
5064297e slap_sasl_getdn: u:id converted to uid=st999999@ou3.example.org,cn=PLAIN,cn=auth
5064297e >>> dnNormalize: <uid=st999999@ou3.example.org,cn=PLAIN,cn=auth>
5064297e <<< dnNormalize: <uid=st999999@ou3.example.org,cn=plain,cn=auth>
5064297e ==>slap_sasl2dn: converting SASL name uid=st999999@ou3.example.org,cn=plain,cn=auth to a DN
5064297e ==> rewrite_context_apply [depth=1] string='uid=st999999@ou3.example.org,cn=plain,cn=auth'
5064297e ==> rewrite_rule_apply rule='uid=sasl-test-ou1-([^,]*),cn=.*,cn=auth' string='uid=st999999@ou3.example.org,cn=plain,cn=auth' [1 pass(es)]
5064297e ==> rewrite_rule_apply rule='uid=sasl-test-ou2-([^,]*),cn=.*,cn=auth' string='uid=st999999@ou3.example.org,cn=plain,cn=auth' [1 pass(es)]
5064297e ==> rewrite_rule_apply rule='uid=sasl-test-ou3-([^,]*),cn=.*,cn=auth' string='uid=st999999@ou3.example.org,cn=plain,cn=auth' [1 pass(es)]
5064297e ==> rewrite_rule_apply rule='uid=(.*)@proxy.auth,cn=.*,cn=auth' string='uid=st999999@ou3.example.org,cn=plain,cn=auth' [1 pass(es)]
5064297e ==> rewrite_rule_apply rule='uid=([^,]*)@ou3.example.org,cn=plain,cn=auth' string='uid=st999999@ou3.example.org,cn=plain,cn=auth' [1 pass(es)]
5064297e ==> rewrite_context_apply [depth=1] res={0,'ldap:///ou=people,ou=ou3,dc=example,dc=org??sub?(uid=st999999)'}
5064297e slap_parseURI: parsing ldap:///ou=people,ou=ou3,dc=example,dc=org??sub?(uid=st999999)
ldap_url_parse_ext(ldap:///ou=people,ou=ou3,dc=example,dc=org??sub?(uid=st999999))
put_filter: "(uid=st999999)"
put_filter: simple
put_simple_filter: "uid=st999999"
ber_scanf fmt ({mm}) ber:
5064297e >>> dnNormalize: <ou=people,ou=ou3,dc=example,dc=org>
5064297e <<< dnNormalize: <ou=people,ou=ou3,dc=example,dc=org>
5064297e slap_sasl2dn: performing internal search (base=ou=people,ou=ou3,dc=example,dc=org, scope=2)
5064297e => hdb_search
5064297e bdb_dn2entry("ou=people,ou=ou3,dc=example,dc=org")
5064297e search_candidates: base="ou=people,ou=ou3,dc=example,dc=org" (0x00001e5e) scope=2
5064297e => hdb_dn2idl("ou=people,ou=ou3,dc=example,dc=org")
5064297e => bdb_equality_candidates (objectClass)
5064297e => key_read
5064297e <= bdb_index_read: failed (-30987)
5064297e <= bdb_equality_candidates: id=0, first=0, last=0
5064297e => bdb_equality_candidates (uid)
5064297e => key_read
5064297e <= bdb_index_read 1 candidates
5064297e <= bdb_equality_candidates: id=1, first=9661, last=9661
5064297e bdb_search_candidates: id=1 first=9661 last=9661
5064297e send_ldap_result: conn=1001 op=0 p=3
5064297e <==slap_sasl2dn: Converted SASL name to uidNumber=11887,ou=people,ou=ou3,dc=example,dc=org
5064297e slap_sasl_getdn: dn:id converted to uidNumber=11887,ou=people,ou=ou3,dc=example,dc=org
5064297e SASL Authorize [conn=1001]:  proxy authorization allowed authzDN=""
5064297e send_ldap_sasl: err=0 len=-1
5064297e do_bind: SASL/PLAIN bind: dn="uidNumber=11887,ou=people,ou=ou3,dc=example,dc=org" sasl_ssf=0
5064297e send_ldap_response: msgid=1 tag=97 err=0
ber_flush2: 14 bytes to sd 21
