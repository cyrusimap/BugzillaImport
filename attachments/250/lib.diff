Index: lib/lock_fcntl.c
===================================================================
RCS file: /home/cvs/debian/cyrus21-imapd/lib/lock_fcntl.c,v
retrieving revision 1.9
diff -u -r1.9 lock_fcntl.c
--- lib/lock_fcntl.c	26 Sep 2003 03:08:45 -0000	1.9
+++ lib/lock_fcntl.c	22 Jan 2004 10:24:59 -0000
@@ -139,7 +139,11 @@
 	    return -1;
 	}
 
-	if (sbuf->st_ino == sbuffile.st_ino) return 0;
+	if (sbuf->st_ino == sbuffile.st_ino) {
+	    alarm(0);
+	    setsigalrm(0);
+	    return 0;
+	}
 
 	newfd = open(filename, O_RDWR);
 	if (newfd == -1) {
@@ -178,7 +182,11 @@
 	fl.l_start = 0;
 	fl.l_len = 0;
 	r = fcntl(fd, F_SETLKW, &fl);
-	if (r != -1) return 0;
+	if (r != -1) {
+	    alarm(0);
+	    setsigalrm(0);
+	    return 0;
+	}
 	if (errno == EINTR && !lock_gotsigalrm) continue;
 	alarm(0);
 	setsigalrm(0);
@@ -208,7 +216,11 @@
 	fl.l_start = 0;
 	fl.l_len = 0;
 	r = fcntl(fd, F_SETLKW, &fl);
-	if (r != -1) return 0;
+	if (r != -1) {
+	    alarm(0);
+	    setsigalrm(0);
+	    return 0;
+	}
 	if (errno == EINTR && !lock_gotsigalrm) continue;
 	alarm(0);
 	setsigalrm(0);
Index: lib/lock_flock.c
===================================================================
RCS file: /home/cvs/debian/cyrus21-imapd/lib/lock_flock.c,v
retrieving revision 1.7
diff -u -r1.7 lock_flock.c
--- lib/lock_flock.c	26 Sep 2003 03:08:45 -0000	1.7
+++ lib/lock_flock.c	22 Jan 2004 10:24:59 -0000
@@ -129,7 +129,11 @@
 	    return -1;
 	}
 
-	if (sbuf->st_ino == sbuffile.st_ino) return 0;
+	if (sbuf->st_ino == sbuffile.st_ino) {
+	    alarm(0);
+	    setsigalrm(0);
+	    return 0;
+	}
 
 	newfd = open(filename, O_RDWR);
 	if (newfd == -1) {
@@ -160,7 +164,11 @@
     alarm(lock_wait_time);
     for (;;) {
 	r = flock(fd, LOCK_EX);
-	if (r != -1) return 0;
+	if (r != -1) {
+	    alarm(0);
+	    setsigalrm(0);
+	    return 0;
+	}
 	if (errno == EINTR && !lock_gotsigalrm) continue;
 	alarm(0);
 	setsigalrm(0);
@@ -184,7 +192,11 @@
     alarm(lock_wait_time);
     for (;;) {
 	r = flock(fd, LOCK_SH);
-	if (r != -1) return 0;
+	if (r != -1) {
+	    alarm(0);
+	    setsigalrm(0);
+	    return 0;
+	}
 	if (errno == EINTR && !lock_gotsigalrm) continue;
 	alarm(0);
 	setsigalrm(0);
