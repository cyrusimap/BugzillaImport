*** mupdate.c.~1.89.~	2004-12-17 13:19:29.000000000 -0500
--- mupdate.c	2005-10-27 10:36:09.000000000 -0400
***************
*** 460,468 ****
      return 0;
  }
  
  static struct sasl_callback mysasl_cb[] = {
      { SASL_CB_GETOPT, &mysasl_config, NULL },
!     { SASL_CB_PROXY_POLICY, &mysasl_proxy_policy, NULL },
      { SASL_CB_LIST_END, NULL, NULL }
  };
  
--- 460,495 ----
      return 0;
  }
  
+ 
+ /*
+  * The auth_*.c backends called by mysasl_proxy_policy()
+  * use static variables which we need to protect with a mutex.
+  */
+ static pthread_mutex_t proxy_policy_mutex = PTHREAD_MUTEX_INITIALIZER;
+ 
+ static int mupdate_proxy_policy(sasl_conn_t *conn,
+ 				void *context,
+ 				const char *requested_user, unsigned rlen,
+ 				const char *auth_identity, unsigned alen,
+ 				const char *def_realm,
+ 				unsigned urlen,
+ 				struct propctx *propctx)
+ {
+     int r;
+ 
+     pthread_mutex_lock(&proxy_policy_mutex); /* LOCK */
+ 
+     r = mysasl_proxy_policy(conn, context, requested_user, rlen,
+ 			    auth_identity, alen, def_realm, urlen, propctx);
+ 
+     pthread_mutex_unlock(&proxy_policy_mutex); /* UNLOCK */
+ 
+     return r;
+ }
+ 
  static struct sasl_callback mysasl_cb[] = {
      { SASL_CB_GETOPT, &mysasl_config, NULL },
!     { SASL_CB_PROXY_POLICY, &mupdate_proxy_policy, NULL },
      { SASL_CB_LIST_END, NULL, NULL }
  };
  
