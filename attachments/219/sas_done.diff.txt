Index: lib/client.c
===================================================================
RCS file: /cvs/src/sasl/lib/client.c,v
retrieving revision 1.61
diff -u -r1.61 client.c
--- lib/client.c	16 Apr 2003 19:36:00 -0000	1.61
+++ lib/client.c	1 Sep 2003 16:07:24 -0000
@@ -65,6 +65,9 @@
 
 static int _sasl_client_active = 0;
 
+/* For access by other modules */
+int _is_sasl_client_active(void) { return _sasl_client_active; }
+
 static int init_mechlist()
 {
   cmechlist->mutex = sasl_MUTEX_ALLOC();
Index: lib/common.c
===================================================================
RCS file: /cvs/src/sasl/lib/common.c,v
retrieving revision 1.95
diff -u -r1.95 common.c
--- lib/common.c	24 Aug 2003 20:53:31 -0000	1.95
+++ lib/common.c	1 Sep 2003 16:07:28 -0000
@@ -313,14 +306,28 @@
 
 void sasl_done(void)
 {
-    if (_sasl_server_cleanup_hook && _sasl_server_cleanup_hook() == SASL_OK) {
-	_sasl_server_idle_hook = NULL;
-	_sasl_server_cleanup_hook = NULL;
+    int server_counter;
+    int client_counter;
+
+    server_counter = _is_sasl_server_active();
+    client_counter = _is_sasl_client_active();
+
+/* Check for a silly state */
+    if (server_counter < 0 || client_counter < 0) {
+	return;
     }
-    
-    if (_sasl_client_cleanup_hook && _sasl_client_cleanup_hook() == SASL_OK) {
-	_sasl_client_idle_hook = NULL;	
-	_sasl_client_cleanup_hook = NULL;
+
+/* Shutdown server side API first. The choice is pretty random */
+    if (server_counter > 0) {
+	if (_sasl_server_cleanup_hook && _sasl_server_cleanup_hook() == SASL_OK) {
+	    _sasl_server_idle_hook = NULL;
+	    _sasl_server_cleanup_hook = NULL;
+	}
+    } else {
+	if (_sasl_client_cleanup_hook && _sasl_client_cleanup_hook() == SASL_OK) {
+	    _sasl_client_idle_hook = NULL;	
+	    _sasl_client_cleanup_hook = NULL;
+	}
     }
     
     if(_sasl_server_cleanup_hook || _sasl_client_cleanup_hook)
Index: lib/saslint.h
===================================================================
RCS file: /cvs/src/sasl/lib/saslint.h,v
retrieving revision 1.50
diff -u -r1.50 saslint.h
--- lib/saslint.h	18 Aug 2003 15:47:17 -0000	1.50
+++ lib/saslint.h	1 Sep 2003 16:07:29 -0000
@@ -316,6 +316,12 @@
 extern int _is_sasl_server_active(void);
 
 /*
+ * client.c
+ */
+/* (this is a function call to ensure this is read-only to the outside) */
+extern int _is_sasl_client_active(void);
+
+/*
  * Allocation and Mutex utility macros
  */
 #define sasl_ALLOC(__size__) (_sasl_allocation_utils.malloc((__size__)))
