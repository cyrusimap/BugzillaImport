diff -urN cyrus-imapd-2.4.17/imap/tls.c cyrus-imapd-2.4.17.tls/imap/tls.c
--- cyrus-imapd-2.4.17/imap/tls.c	2012-12-01 20:57:54.000000000 +0100
+++ cyrus-imapd-2.4.17.tls/imap/tls.c	2013-11-16 19:49:17.000000000 +0100
@@ -632,6 +632,13 @@
     const char   *s_key_file;
     int    requirecert;
     int    timeout;
+    int    compression;
+    int    prefer_server_ciphers;
+#if !defined(OPENSSL_NO_ECDH) && OPENSSL_VERSION_NUMBER >= 0x10000000L
+    EC_KEY *ecdh;
+    int    nid;
+    const char   *eccurve;
+#endif
 
     if (tls_serverengine)
 	return (0);				/* already running */
@@ -666,6 +673,16 @@
 	off |= SSL_OP_NO_SSLv2;
 	off |= SSL_OP_NO_SSLv3;
     }
+    prefer_server_ciphers = config_getswitch(IMAPOPT_TLS_PREFER_SERVER_CIPHERS);
+    if (prefer_server_ciphers) {
+        off |= SSL_OP_CIPHER_SERVER_PREFERENCE;
+	syslog(LOG_DEBUG, "Setting SSL_OP_CIPHER_SERVER_PREFERENCE");
+    }
+    compression = config_getswitch(IMAPOPT_TLS_COMPRESSION);
+    if (! compression) {
+        off |= SSL_OP_NO_COMPRESSION;
+	syslog(LOG_DEBUG, "Setting SSL_OP_NO_COMPRESSION");
+    }
     SSL_CTX_set_options(s_ctx, off);
     SSL_CTX_set_info_callback(s_ctx, (void (*)()) apps_ssl_info_callback);
 
@@ -744,9 +761,32 @@
 #if (OPENSSL_VERSION_NUMBER >= 0x0090800fL)
     /* Load DH params for DHE-* key exchanges */
     SSL_CTX_set_tmp_dh(s_ctx, load_dh_param(s_key_file, s_cert_file));
-    /* FIXME: Load ECDH params for ECDHE suites when 0.9.9 is released */
 #endif
-
+#if !defined(OPENSSL_NO_ECDH) && OPENSSL_VERSION_NUMBER >= 0x10000000L
+    eccurve = config_getstring(IMAPOPT_TLS_ECCURVE);
+#if !defined(OPENSSL_NO_ECDH) && OPENSSL_VERSION_NUMBER >= 0x10002000L
+    if ((eccurve != NULL) && (strcmp(eccurve, "auto") == 0)) {
+	syslog(LOG_DEBUG, "ECDH temp key parameter settings: OpenSSL 1.2+ autoselection");
+        SSL_CTX_set_ecdh_auto(sctx, 1);
+    }
+    else
+# endif
+    if (eccurve != NULL) {
+        nid = OBJ_sn2nid(eccurve);
+        if (nid == 0) {
+            syslog(LOG_ERR, "Unkown curve name tls_eccurve \"%s\"", eccurve);
+        } else {
+            ecdh = EC_KEY_new_by_curve_name(nid);
+            if (ecdh == NULL) {
+                syslog(LOG_ERR, "Unable to create EC temp key parameters");
+            } else {
+	        syslog(LOG_DEBUG, "loading \"%s\" EC temp key parameters", eccurve);
+                SSL_CTX_set_tmp_ecdh(s_ctx, ecdh);
+                EC_KEY_free(ecdh);
+            }
+        }
+    }
+#endif
     verify_depth = verifydepth;
     if (askcert!=0)
 	verify_flags |= SSL_VERIFY_PEER | SSL_VERIFY_CLIENT_ONCE;
diff -urN cyrus-imapd-2.4.17/lib/imapoptions cyrus-imapd-2.4.17.tls/lib/imapoptions
--- cyrus-imapd-2.4.17/lib/imapoptions	2012-12-01 20:57:54.000000000 +0100
+++ cyrus-imapd-2.4.17.tls/lib/imapoptions	2013-11-16 18:53:52.000000000 +0100
@@ -1338,10 +1338,20 @@
 /* The list of SSL/TLS ciphers to allow.  The format of the string is
    described in ciphers(1). */
 
+{ "tls_compression", 0, SWITCH }
+/* deactivate TLS compression by default */
+
+{ "tls_eccurve", "prime256v1", STRING }
+/* The elliptic curve used for ECDHE. Default is NIST Suite B prime256
+   use "auto" in case OpenSSL supports it already */
+
 { "tls_key_file", NULL, STRING }
 /* File containing the private key belonging to the server
    certificate.  A value of "disabled" will disable SSL/TLS. */
 
+{ "tls_prefer_server_ciphers", 0, SWITCH }
+/* Prefer the ciphers on the server side instead of client side */
+
 { "tls_require_cert", 0, SWITCH }
 /* Require a client certificate for ALL services (imap, pop3, lmtp, sieve). */
 
diff -urN cyrus-imapd-2.4.17/lib/imapopts.c cyrus-imapd-2.4.17.tls/lib/imapopts.c
--- cyrus-imapd-2.4.17/lib/imapopts.c	2012-12-01 20:59:51.000000000 +0100
+++ cyrus-imapd-2.4.17.tls/lib/imapopts.c	2013-11-16 18:54:42.000000000 +0100
@@ -860,9 +860,18 @@
   { IMAPOPT_TLS_CIPHER_LIST, "tls_cipher_list", 0, OPT_STRING,
     {(void *)("DEFAULT")},
     { { NULL, IMAP_ENUM_ZERO } } },
+  { IMAPOPT_TLS_COMPRESSION, "tls_compression", 0, OPT_SWITCH,
+    {(void*)0},
+    { { NULL, IMAP_ENUM_ZERO } } },
+  { IMAPOPT_TLS_ECCURVE, "tls_eccurve", 0, OPT_STRING,
+    {(void *)("prime256v1")},
+    { { NULL, IMAP_ENUM_ZERO } } },
   { IMAPOPT_TLS_KEY_FILE, "tls_key_file", 0, OPT_STRING,
     {(void *)(NULL)},
     { { NULL, IMAP_ENUM_ZERO } } },
+  { IMAPOPT_TLS_PREFER_SERVER_CIPHERS, "tls_prefer_server_ciphers", 0, OPT_SWITCH,
+    {(void*)0},
+    { { NULL, IMAP_ENUM_ZERO } } },
   { IMAPOPT_TLS_REQUIRE_CERT, "tls_require_cert", 0, OPT_SWITCH,
     {(void*)0},
     { { NULL, IMAP_ENUM_ZERO } } },
diff -urN cyrus-imapd-2.4.17/lib/imapopts.h cyrus-imapd-2.4.17.tls/lib/imapopts.h
--- cyrus-imapd-2.4.17/lib/imapopts.h	2012-12-01 20:59:51.000000000 +0100
+++ cyrus-imapd-2.4.17.tls/lib/imapopts.h	2013-11-16 18:56:02.000000000 +0100
@@ -250,7 +250,10 @@
   IMAPOPT_TLSCACHE_DB_PATH,
   IMAPOPT_TLS_CERT_FILE,
   IMAPOPT_TLS_CIPHER_LIST,
+  IMAPOPT_TLS_COMPRESSION,
+  IMAPOPT_TLS_ECCURVE,
   IMAPOPT_TLS_KEY_FILE,
+  IMAPOPT_TLS_PREFER_SERVER_CIPHERS,
   IMAPOPT_TLS_REQUIRE_CERT,
   IMAPOPT_TLS_SESSION_TIMEOUT,
   IMAPOPT_UMASK,
