--- cyrus-imapd-2.2.12.orig/lib/map_shared.c    2005-04-26 01:41:51.582667224 -0300
+++ cyrus-imapd-2.2.12/lib/map_shared.c 2005-04-26 01:41:58.635595016 -0300
@@ -40,6 +40,7 @@
  * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  *
  */
+#define _GNU_SOURCE
 #include <config.h>
 #include <stdio.h>
 #include <sys/types.h>
@@ -83,12 +84,27 @@

     /* Already mapped in */
     if (*len >= newlen) return;
+
+    if (!onceonly) {
+        newlen = (newlen + 2*SLOP - 1) & ~(SLOP-1);
+    }

-    if (*len) munmap((char *)*base, *len);
+    if (*len) {
+       const char *ph;
+       ph = (char *)*base;
+       *base = (char *)mremap((void *)ph, *len, newlen, MREMAP_MAYMOVE);
+       syslog(LOG_DEBUG, "MREMAP at map_refresh: mremap(%p, %ld, %ld, MREMAP_MAYMOVE) = %p", ph, *len, newlen, *base);
+
+       if (*base == (char *)-1) {
+           syslog(LOG_ERR, "IOERROR: remapping %s file%s%s: %m", name,
+                  mboxname ? " for " : "", mboxname ? mboxname : "");
+           snprintf(buf, sizeof(buf), "failed to mremap %s file", name);
+           fatal(buf, EC_IOERR);
+       }

-    if (!onceonly) {
-       newlen = (newlen + 2*SLOP - 1) & ~(SLOP-1);
-    }
+       *len = newlen;
+       return;
+    }

     *base = (char *)mmap((caddr_t)0, newlen, PROT_READ, MAP_SHARED
 #ifdef MAP_FILE
@@ -98,6 +114,7 @@
 | MAP_VARIABLE
 #endif
                         , fd, 0L);
+    syslog(LOG_DEBUG, "MMAP at map_refresh: mmap(%ld, %ld, PROT_READ, MAP_SHARED, %ld, %ld) = %p", (caddr_t)0, newlen, fd, 0L, *base);
     if (*base == (char *)-1) {
        syslog(LOG_ERR, "IOERROR: mapping %s file%s%s: %m", name,
               mboxname ? " for " : "", mboxname ? mboxname : "");
@@ -115,7 +132,11 @@
 const char **base;
 unsigned long *len;
 {
-    if (*len) munmap((char *)*base, *len);
+    if (*len) {
+        int retaddr;
+        retaddr = munmap((char *)*base, *len);
+        syslog(LOG_DEBUG, "MUNMAP at map_free: munmap(%p, %ld) = %ld", *base, *len, retaddr);
+    }
     *base = 0;
     *len = 0;
 }