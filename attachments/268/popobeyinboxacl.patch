diff -Naur cyrus-imapd.cvs20040305/imap/pop3d.c cyrus-imapd.cvs20040305.popobeyinboxacl.patch/imap/pop3d.c
--- cyrus-imapd.cvs20040305/imap/pop3d.c	Wed Mar  3 11:22:27 2004
+++ cyrus-imapd.cvs20040305.popobeyinboxacl.patch/imap/pop3d.c	Fri Mar  5 13:07:27 2004
@@ -617,6 +617,7 @@
     char inputbuf[8192];
     char *p, *arg;
     unsigned msg = 0;
+    unsigned short obeyinboxacl = config_getswitch(IMAPOPT_POPOBEYINBOXACL);
 
     for (;;) {
 	signals_poll();
@@ -736,20 +737,29 @@
 	}
 	else if (!strcmp(inputbuf, "stat")) {
 	    unsigned nmsgs = 0, totsize = 0;
-	    if (arg) {
+	    if ((!(mboxstruct.myrights & ACL_LOOKUP)) && obeyinboxacl) {
+	      prot_printf(popd_out, "-ERR [SYS/PERM] stat %s\r\n", 
+			  error_message(IMAP_PERMISSION_DENIED));
+	    } else {
+	      if (arg) {
 		prot_printf(popd_out, "-ERR Unexpected extra argument\r\n");
-	    }
-	    else {
+	      }
+	      else {
 		for (msg = 1; msg <= popd_exists; msg++) {
-		    if (!popd_msg[msg].deleted) {
-			nmsgs++;
-			totsize += popd_msg[msg].size;
-		    }
+		  if (!popd_msg[msg].deleted) {
+		    nmsgs++;
+		    totsize += popd_msg[msg].size;
+		  }
 		}
 		prot_printf(popd_out, "+OK %u %u\r\n", nmsgs, totsize);
+	      }
 	    }
 	}
 	else if (!strcmp(inputbuf, "list")) {
+	  if ((!(mboxstruct.myrights & ACL_LOOKUP)) && obeyinboxacl) {
+	    prot_printf(popd_out, "-ERR [SYS/PERM] list %s\r\n", 
+			error_message(IMAP_PERMISSION_DENIED));
+	  } else {
 	    if (arg) {
 		msg = parsenum(&arg);
 		if (arg) {
@@ -772,39 +782,50 @@
 		}
 		prot_printf(popd_out, ".\r\n");
 	    }
+	  }
 	}
 	else if (!strcmp(inputbuf, "retr")) {
-	    if (!arg) prot_printf(popd_out, "-ERR Missing argument\r\n");
-	    else {
-		msg = parsenum(&arg);
-		if (arg) {
-		    prot_printf(popd_out, "-ERR Unexpected extra argument\r\n");
-		}
-		else if (msg < 1 || msg > popd_exists ||
-			 popd_msg[msg].deleted) {
-		    prot_printf(popd_out, "-ERR No such message\r\n");
-		}
-		else {
-		    blat(msg, -1);
-		}
-	    }
+	   if ((!(mboxstruct.myrights & ACL_READ)) && obeyinboxacl) {
+	     prot_printf(popd_out, "-ERR [SYS/PERM] retr %s\r\n", 
+			 error_message(IMAP_PERMISSION_DENIED));
+	   } else {
+	     if (!arg) prot_printf(popd_out, "-ERR Missing argument\r\n");
+	     else {
+	       msg = parsenum(&arg);
+	       if (arg) {
+		 prot_printf(popd_out, "-ERR Unexpected extra argument\r\n");
+	       }
+	       else if (msg < 1 || msg > popd_exists ||
+			popd_msg[msg].deleted) {
+		 prot_printf(popd_out, "-ERR No such message\r\n");
+	       }
+	       else {
+		 blat(msg, -1);
+	       }
+	     }
+	   }
 	}
 	else if (!strcmp(inputbuf, "dele")) {
+	  if ((!(mboxstruct.myrights & ACL_DELETE)) && obeyinboxacl) {
+	    prot_printf(popd_out, "-ERR [SYS/PERM] dele %s\r\n", 
+			error_message(IMAP_PERMISSION_DENIED));
+	  } else {
 	    if (!arg) prot_printf(popd_out, "-ERR Missing argument\r\n");
 	    else {
-		msg = parsenum(&arg);
-		if (arg) {
-		    prot_printf(popd_out, "-ERR Unexpected extra argument\r\n");
-		}
-		else if (msg < 1 || msg > popd_exists ||
-			 popd_msg[msg].deleted) {
-		    prot_printf(popd_out, "-ERR No such message\r\n");
-		}
+	      msg = parsenum(&arg);
+	      if (arg) {
+		prot_printf(popd_out, "-ERR Unexpected extra argument\r\n");
+	      }
+	      else if (msg < 1 || msg > popd_exists ||
+		       popd_msg[msg].deleted) {
+		prot_printf(popd_out, "-ERR No such message\r\n");
+	      }
 		else {
-		    popd_msg[msg].deleted = 1;
-		    prot_printf(popd_out, "+OK message deleted\r\n");
+		  popd_msg[msg].deleted = 1;
+		  prot_printf(popd_out, "+OK message deleted\r\n");
 		}
 	    }
+	  }
 	}
 	else if (!strcmp(inputbuf, "noop")) {
 	    if (arg) {
@@ -827,27 +848,36 @@
 	}
 	else if (!strcmp(inputbuf, "top")) {
 	    int lines;
-
-	    if (arg) msg = parsenum(&arg);
-	    if (!arg) prot_printf(popd_out, "-ERR Missing argument\r\n");
-	    else {
+	    
+	    if ((!(mboxstruct.myrights & ACL_READ)) && obeyinboxacl) {
+	      prot_printf(popd_out, "-ERR [SYS/PERM] top %s\r\n", 
+			  error_message(IMAP_PERMISSION_DENIED));
+	    } else {
+	      if (arg) msg = parsenum(&arg);
+	      if (!arg) prot_printf(popd_out, "-ERR Missing argument\r\n");
+	      else {
 		lines = parsenum(&arg);
 		if (arg) {
-		    prot_printf(popd_out, "-ERR Unexpected extra argument\r\n");
+		  prot_printf(popd_out, "-ERR Unexpected extra argument\r\n");
 		}
 		else if (msg < 1 || msg > popd_exists ||
 			 popd_msg[msg].deleted) {
-		    prot_printf(popd_out, "-ERR No such message\r\n");
+		  prot_printf(popd_out, "-ERR No such message\r\n");
 		}
 		else if (lines < 0) {
-		    prot_printf(popd_out, "-ERR Invalid number of lines\r\n");
+		  prot_printf(popd_out, "-ERR Invalid number of lines\r\n");
 		}
 		else {
-		    blat(msg, lines);
+		  blat(msg, lines);
 		}
+	      }
 	    }
 	}
 	else if (!strcmp(inputbuf, "uidl")) {
+	  if ((!(mboxstruct.myrights & ACL_LOOKUP)) && obeyinboxacl) {
+	    prot_printf(popd_out, "-ERR [SYS/PERM] uidl %s\r\n", 
+			error_message(IMAP_PERMISSION_DENIED));
+	  } else {
 	    if (arg) {
 		msg = parsenum(&arg);
 		if (arg) {
@@ -884,6 +914,7 @@
 		}
 		prot_printf(popd_out, ".\r\n");
 	    }
+	  }
 	}
 	else {
 	    prot_printf(popd_out, "-ERR Unrecognized command\r\n");
@@ -1370,7 +1401,10 @@
 
 	popd_login_time = time(0);
 
-	r = mailbox_open_header(inboxname, 0, &mboxstruct);
+ 	r = (config_getswitch(IMAPOPT_POPOBEYINBOXACL)) ?
+ 	  mailbox_open_header(inboxname, auth_newstate(userid), &mboxstruct) :
+ 	  mailbox_open_header(inboxname, 0, &mboxstruct);
+
 	if (r) {
 	    sleep(3);
 	    syslog(LOG_ERR, "Unable to open maildrop for %s", popd_userid);
@@ -1379,6 +1413,17 @@
 	}
 
 	r = mailbox_open_index(&mboxstruct);
+
+	/* make sure we have permission to do anything */
+	if (config_getswitch(IMAPOPT_POPOBEYINBOXACL)) {
+	  if (!r && !(mboxstruct.myrights & 
+		      (ACL_READ | ACL_LOOKUP | ACL_DELETE))) {
+	    mailbox_close(&mboxstruct);
+	    prot_printf(popd_out, "-ERR [SYS/PERM] Login %s\r\n", error_message(IMAP_PERMISSION_DENIED));
+	    goto fail;
+	  }
+	} /* end edit */
+
 	if (!r) r = mailbox_lock_pop(&mboxstruct);
 	if (r) {
 	    mailbox_close(&mboxstruct);
diff -Naur cyrus-imapd.cvs20040305/lib/imapoptions cyrus-imapd.cvs20040305.popobeyinboxacl.patch/lib/imapoptions
--- cyrus-imapd.cvs20040305/lib/imapoptions	Thu Feb 26 17:41:32 2004
+++ cyrus-imapd.cvs20040305.popobeyinboxacl.patch/lib/imapoptions	Fri Mar  5 13:06:49 2004
@@ -545,6 +545,23 @@
 /* Set the minimum amount of time the server forces users to wait
    between successive POP logins, in minutes.  The default is 0. */ 
 
+{ "popobeyinboxacl", 0, SWITCH }
+/* Enforce the IMAP ACLs in the pop3 daemon.  Due to protocol limitations,
+   the only ACLs that have effect within the daemon are 'lrd'.  If a user
+   does not have any of these permissions at logon, they will recieve
+   an error after the 'user/pass' sequence.  Otherwise, the login will
+   succeed and the permissions will be enforced from within.  By default
+   this option is diabled, and a user may retrieve and expunge their mail
+   via pop3 even if they do not have the proper permissions via IMAP.  
+   Note, however, a savvy owner can give themselves permissions back if
+   they have the implicit 'a' ACL via the \fIimplicit_owner_rights\fR 
+   option (which they do, by default).  Also note that not all clients
+   will display the error message text from the pop server if an error 
+   is recieved after they have successfuly authenticated.
+.br
+.sp
+   ACLs enforced: \fBl\fR:stat,list,uidl \fBr\fR:retr,top \fBd\fR:dele */
+
 { "poptimeout", 10, INT }
 /* Set the length of the POP server's inactivity autologout timer,    
    in minutes.  The minimum value is 10, the default. */
