Index: cmulocal/ucdsnmp.m4
===================================================================
RCS file: /cvs/src/cmulocal/ucdsnmp.m4,v
retrieving revision 1.8
diff -u -r1.8 ucdsnmp.m4
--- cmulocal/ucdsnmp.m4	22 Oct 2003 18:50:02 -0000	1.8
+++ cmulocal/ucdsnmp.m4	2 Apr 2004 07:26:43 -0000
@@ -1,30 +1,65 @@
-dnl look for the ucdsnmp libraries
+dnl look for the (ucd|net)snmp libraries
 dnl $Id: ucdsnmp.m4,v 1.8 2003/10/22 18:50:02 rjs3 Exp $
 
 AC_DEFUN([CMU_UCDSNMP], [
   AC_REQUIRE([CMU_SOCKETS])
-  AC_ARG_WITH(ucdsnmp, 
-              [  --with-ucdsnmp=DIR      use ucd snmp (rooted in DIR) [yes] ],
-              with_ucdsnmp=$withval, with_ucdsnmp=yes)
-  if test "$with_ucdsnmp" != no; then
-    if test -d "$with_ucdsnmp"; then
-      CPPFLAGS="$CPPFLAGS -I${with_ucdsnmp}/include"
-      LDFLAGS="$LDFLAGS -L${with_ucdsnmp}/lib"
-    fi
-    cmu_save_LIBS="$LIBS"
-    AC_CHECK_LIB(snmp, sprint_objid, [
-		 AC_CHECK_HEADER(ucd-snmp/version.h,, with_ucdsnmp=no)],
-		 with_ucdsnmp=no, ${LIB_SOCKET})
-    LIBS="$cmu_save_LIBS"
+  AC_ARG_WITH(snmp, 
+              [  --with-ucdsnmp=DIR      use ucd|net snmp (rooted in DIR) [yes] ],
+              with_snmp=$withval, with_snmp=yes)
+
+if test "$with_snmp" != "no"; then
+
+  dnl
+  dnl Try net-snmp first
+  dnl
+  if test "$with_snmp" = "yes"; then
+    AC_PATH_PROG(SNMP_CONFIG,net-snmp-config,,[/usr/local/bin:$PATH])
+  else
+    SNMP_CONFIG="$with_snmp/bin/net-snmp-config"
   fi
-  AC_MSG_CHECKING(UCD SNMP libraries)
-  AC_MSG_RESULT($with_ucdsnmp)
-  LIB_UCDSNMP=""
-  if test "$with_ucdsnmp" != no; then
-    AC_DEFINE(HAVE_UCDSNMP,1,[Do we have SNMP support?])
-    LIB_UCDSNMP="-lucdagent -lucdmibs -lsnmp"
-    AC_CHECK_LIB(rpm, rpmdbOpen,
+
+  if test -x "$SNMP_CONFIG"; then
+    AC_MSG_CHECKING(NET SNMP libraries)
+
+    SNMP_LIBS=`$SNMP_CONFIG --agent-libs`
+    SNMP_PREFIX=`$SNMP_CONFIG --prefix`
+
+    if test -n "$SNMP_LIBS" && test -n "$SNMP_PREFIX"; then
+      CPPFLAGS="$CPPFLAGS -I${SNMP_PREFIX}/include"
+      LIB_UCDSNMP=$SNMP_LIBS
+      AC_DEFINE(HAVE_NETSNMP,1,[Do we have Net-SNMP support?])
+      AC_SUBST(LIB_UCDSNMP)
+      AC_MSG_RESULT(yes)
+    else
+      AC_MSG_RESULT(no)
+      AC_MSG_WARN([Could not find the required paths. Please check your net-snmp installation.])
+    fi
+  else
+    dnl
+    dnl Try ucd-snmp if net-snmp test failed
+    dnl
+    if test "$with_snmp" != no; then
+      if test -d "$with_snmp"; then
+        CPPFLAGS="$CPPFLAGS -I${with_snmp}/include"
+        LDFLAGS="$LDFLAGS -L${with_snmp}/lib"
+      fi
+      cmu_save_LIBS="$LIBS"
+      AC_CHECK_LIB(snmp, sprint_objid, [
+  		 AC_CHECK_HEADER(ucd-snmp/version.h,, with_snmp=no)],
+  		 with_snmp=no, ${LIB_SOCKET})
+      LIBS="$cmu_save_LIBS"
+    fi
+    AC_MSG_CHECKING(UCD SNMP libraries)
+    AC_MSG_RESULT($with_snmp)
+    LIB_UCDSNMP=""
+    if test "$with_snmp" != no; then
+      AC_DEFINE(HAVE_UCDSNMP,1,[Do we have UCD-SNMP support?])
+      LIB_UCDSNMP="-lucdagent -lucdmibs -lsnmp"
+      AC_CHECK_LIB(rpm, rpmdbOpen,
 		 LIB_UCDSNMP="${LIB_UCDSNMP} -lrpm -lpopt",,-lpopt)
+    fi
+    AC_SUBST(LIB_UCDSNMP)
   fi
-  AC_SUBST(LIB_UCDSNMP)
+fi
+
 ])
Index: master/cyrusMasterMIB.c
===================================================================
RCS file: /cvs/src/cyrus/master/cyrusMasterMIB.c,v
retrieving revision 1.10
diff -u -r1.10 cyrusMasterMIB.c
--- master/cyrusMasterMIB.c	4 Feb 2004 21:46:39 -0000	1.10
+++ master/cyrusMasterMIB.c	2 Apr 2004 07:26:59 -0000
@@ -1,11 +1,18 @@
 #include <config.h>
 
-#ifdef HAVE_UCDSNMP
+#if defined(HAVE_UCDSNMP) || defined(HAVE_NETSNMP)
 
 /* This file was generated by mib2c and is intended for use as a mib module
    for the ucd-snmp snmpd agent. */
 
 
+#ifdef HAVE_NETSNMP
+  #include <net-snmp/net-snmp-config.h>
+  #include <net-snmp/net-snmp-includes.h>
+  #include <net-snmp/agent/net-snmp-agent-includes.h>
+  #include <net-snmp/utilities.h>
+#else
+
 #ifdef IN_UCD_SNMP_SOURCE
 /* If we're compiling this file inside the ucd-snmp source tree */
 
@@ -30,6 +37,8 @@
 
 #endif /* !IN_UCD_SNMP_SOURCE */
 
+#endif /* HAVE_NETSNMP */
+
 #include <time.h>
 #include <string.h>
 
@@ -228,4 +237,4 @@
 
 
 
-#endif /* HAVE_UCDSNMP */
+#endif /* HAVE_UCDSNMP || HAVE_NETSNMP */
Index: master/master.c
===================================================================
RCS file: /cvs/src/cyrus/master/master.c,v
retrieving revision 1.96
diff -u -r1.96 master.c
--- master/master.c	27 Feb 2004 18:21:24 -0000	1.96
+++ master/master.c	2 Apr 2004 16:10:34 -0000
@@ -85,16 +85,19 @@
 #define	IPV6_V6ONLY	IPV6_BINDV6ONLY
 #endif
 
-#ifdef HAVE_UCDSNMP
-#include <ucd-snmp/ucd-snmp-config.h>
-#include <ucd-snmp/ucd-snmp-includes.h>
-#include <ucd-snmp/ucd-snmp-agent-includes.h>
+#if defined(HAVE_NETSNMP)
+  #include <net-snmp/net-snmp-config.h>
+  #include <net-snmp/net-snmp-includes.h>
+  #include <net-snmp/agent/net-snmp-agent-includes.h>
+#elif defined(HAVE_UCDSNMP)
+  #include <ucd-snmp/ucd-snmp-config.h>
+  #include <ucd-snmp/ucd-snmp-includes.h>
+  #include <ucd-snmp/ucd-snmp-agent-includes.h>
 
-#include "cyrusMasterMIB.h"
-
-int allow_severity = LOG_DEBUG;
-int deny_severity = LOG_ERR;
+  #include "cyrusMasterMIB.h"
 
+  int allow_severity = LOG_DEBUG;
+  int deny_severity = LOG_ERR;
 #endif
 
 #include "masterconf.h"
@@ -994,7 +997,7 @@
 	syslog(LOG_ERR, "sigterm_handler: kill(0, SIGTERM): %m");
     }
 
-#ifdef HAVE_UCDSNMP
+#if defined(HAVE_UCDSNMP) || defined(HAVE_NETSNMP)
     /* tell master agent we're exiting */
     snmp_shutdown("cyrusMaster");
 #endif
@@ -1657,11 +1660,20 @@
     fd_set rfds;
     char *p = NULL;
 
+#ifdef HAVE_NETSNMP
+    char *agentxsocket = NULL;
+    int agentxpinginterval = -1;
+#endif
+
     time_t now;
 
     p = getenv("CYRUS_VERBOSE");
     if (p) verbose = atoi(p) + 1;
+#ifdef HAVE_NETSNMP
+    while ((opt = getopt(argc, argv, "C:M:p:l:Ddj:P:x:")) != EOF) {
+#else
     while ((opt = getopt(argc, argv, "C:M:p:l:Ddj:")) != EOF) {
+#endif
 	switch (opt) {
 	case 'C': /* alt imapd.conf file */
 	    alt_config = optarg;
@@ -1695,6 +1707,14 @@
 	    if(janitor_frequency < 1)
 		fatal("The janitor period must be at least 1 second", EX_CONFIG);
 	    break;   
+#ifdef HAVE_NETSNMP
+	case 'P': /* snmp AgentXPingInterval */
+	    agentxpinginterval = atoi(optarg);
+	    break;
+	case 'x': /* snmp AgentXSocket */
+	    agentxsocket = optarg;
+	    break;
+#endif
 	default:
 	    break;
 	}
@@ -1874,11 +1894,25 @@
 
     syslog(LOG_NOTICE, "process started");
 
-#ifdef HAVE_UCDSNMP
+#if defined(HAVE_UCDSNMP) || defined(HAVE_NETSNMP)
     /* initialize SNMP agent */
     
     /* make us a agentx client. */
+#ifdef HAVE_NETSNMP
+    netsnmp_enable_subagent();
+
+    netsnmp_ds_set_boolean(NETSNMP_DS_LIBRARY_ID,
+                           NETSNMP_DS_LIB_ALARM_DONT_USE_SIG, 1);
+    if (agentxpinginterval >= 0)
+        netsnmp_ds_set_int(NETSNMP_DS_APPLICATION_ID,
+                           NETSNMP_DS_AGENT_AGENTX_PING_INTERVAL, agentxpinginterval);
+
+    if (agentxsocket != NULL)
+        netsnmp_ds_set_string(NETSNMP_DS_APPLICATION_ID, 
+                              NETSNMP_DS_AGENT_X_SOCKET, agentxsocket);
+#else
     ds_set_boolean(DS_APPLICATION_ID, DS_AGENT_ROLE, 1);
+#endif
 
     /* initialize the agent library */
     init_agent("cyrusMaster");
@@ -1922,7 +1956,7 @@
 	int r, i, maxfd;
 	struct timeval tv, *tvptr;
 	struct notify_message msg;
-#if HAVE_UCDSNMP
+#if defined(HAVE_UCDSNMP) || defined(HAVE_NETSNMP)
 	int blockp = 0;
 #endif
 
@@ -2003,7 +2037,7 @@
 	    tvptr = &tv;
 	}
 
-#ifdef HAVE_UCDSNMP
+#if defined(HAVE_UCDSNMP) || defined(HAVE_NETSNMP)
 	if (tvptr == NULL) blockp = 1;
 	snmp_select_info(&maxfd, &rfds, tvptr, &blockp);
 #endif
@@ -2016,7 +2050,7 @@
 	    fatal("select failed: %m", 1);
 	}
 
-#ifdef HAVE_UCDSNMP
+#if defined(HAVE_UCDSNMP) || defined(HAVE_NETSNMP)
 	/* check for SNMP queries */
 	snmp_read(&rfds);
 	snmp_timeout();
@@ -2055,5 +2089,9 @@
 	}
 	now = time(NULL);
 	child_janitor(now);
+
+#ifdef HAVE_NETSNMP
+	run_alarms();
+#endif
     }
 }
Index: man/master.8
===================================================================
RCS file: /cvs/src/cyrus/man/master.8,v
retrieving revision 1.10
diff -u -r1.10 master.8
--- man/master.8	22 Oct 2003 18:50:13 -0000	1.10
+++ man/master.8	2 Apr 2004 16:13:48 -0000
@@ -61,6 +61,10 @@
 .I pidfile
 ]
 [
+.B \-P
+.I snmp agentx ping interval
+]
+[
 .B \-j
 .I janitor period
 ]
@@ -70,6 +74,10 @@
 [
 .B \-D
 ]
+[
+.B \-x
+.I snmp agentx socket
+]
 .SH DESCRIPTION
 .I Master
 is the process that controls all of the Cyrus processes. This process
@@ -107,12 +115,21 @@
 .I pidfile
 as the pidfile.  If not specified, defaults to /var/run/cyrus-master.pid
 .TP
+.BI \-P " snmp agentx ping interval"
+Sets the amount on time in seconds the subagent will try and reconnect to the
+master agent (snmpd) if it ever becomes (or starts) disconnected.  Requires
+net-snmp 5.0 or higher.
+.TP
 .BI \-d
 Start in daemon mode (run in background and disconnect from controlling
 terminal).
 .TP
 .BI \-D
 Don't close stdin/stdout/stderr. Primiarly useful for debugging.
+.TP
+.BI \-x " snmp agentx socket"
+Address the master agent (most likely snmpd) listens on.
+Requires net-snmp 5.0 or higher.
 .SH CONFIGURATION
 Upon execution,
 .I master
