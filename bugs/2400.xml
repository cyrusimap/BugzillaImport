<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2400</bug_id>
          
          <creation_ts>2004-03-16 13:56 EDT</creation_ts>
          <short_desc>implement spamtest extension</short_desc>
          <delta_ts>2014-10-21 09:56:01 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Sieve</component>
          <version>2.2.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>ASSIGNED</bug_status>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rob Siemborski">rjs3@andrew.cmu.edu</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          <cc>igor@ipass.net</cc>
    
    <cc>lars.tobias.borsting@gmail.com</cc>
    
    <cc>mail@roland-stuehmer.de</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2004-03-16 13:56:22 EDT</bug_when>
            <thetext>We should look into implementing the spamtest sieve extension.  It needs to be
designed with a fairly modular API (e.g. atleast a table of plugins with
a name [selectable by config option] and a function to return the score given
a message).

I&apos;d like to see atleast two modules: 
  a) Simple do-test-on-header.  Configurable header name, but the key is that the
     first bit of header is a number that we can parse.  We may want a    
     configuration option for a &quot;scaling factor&quot; too (e.g. spamassassin score 15  
     or higher == spamtest score of 10).
  b) libdspam integration -- This looks like it&apos;d be fairly straightforward, 
     actually.  Not entirely sure how we&apos;d see people getting data back into 
     their corpus.  Possibly we rely on them forwarding the message, possibly we 
     create a virual top-level &quot;spam&quot; (and &quot;notspam&quot;) folder that only accepts 
     appends (but not select or anything else).  When a user appends a message, 
     it gets fed back to dspam.  Link:   
           http://www.nuclearelephant.com/projects/dspam</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Igor Brezac">igor@ipass.net</who>
            <bug_when>2004-08-18 10:54:58 EDT</bug_when>
            <thetext>Created an attachment (id=305)
spamtest and virustest (rfc3685)

This patch implements sieve spamtest and virustest extensions as described in
http://www.faqs.org/rfcs/rfc3685.html.	I have not done the lmtpengine
enhancement.  What do we need to have at minumum for soemthing like this to be
released?  I have a wrapper for virus and spam calls pretty much done.	clamav
and dspam should be fairly simple to integrate.  sa should not be bad either,
but we&apos;d need to include the spamc (libspamc and utils) code from the
spamassassin distro.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Derrick">shadow@andrew.cmu.edu</who>
            <bug_when>2004-09-14 18:01:46 EDT</bug_when>
            <thetext>In order to get in committed, I think we just need one example backend. A real
one  is obviously preferable but if you just want to provide a simple sample for
testing, that would also work. </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Igor Brezac">igor@ipass.net</who>
            <bug_when>2004-10-27 13:55:58 EDT</bug_when>
            <thetext>For some reason I was not on the cc list and I did not get your response.

Anyway, I am looking to develop a real sample backend for virustest (the sample
can be used for spamtest as well) by using clamav.  There are at least two ways
of doing clamav virus test, via socket (unix domain or tcp) connection to clamd,
or by linking clamav engine.  The second one being very simple.

Most spam and virus backends will need to use some kind of socket operation
(clamav/clamd and spamassassin/spamd come to mind),  so I was wondering if there
a good (and portable) api for socket operations?  </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Derrick">shadow@andrew.cmu.edu</who>
            <bug_when>2005-02-16 15:46:25 EDT</bug_when>
            <thetext>Sorry, this fell off my world-view for a while.

What sort of socket operations?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Igor Brezac">igor@ipass.net</who>
            <bug_when>2005-02-16 16:05:47 EDT</bug_when>
            <thetext>You can check for spam or virus by connecting to a daemon running on a local or
remote machine (spamd in case of spamassassin or clamd).  I was wondering if you
knew of an easy to use api for this type of communication.

I am actually finishing up a libclamav based virustest.  I will submit the code
in the next week or so.  This can be used as an example for other
(spam|virus)test modules.  The extensions will be runtime selectable.

I am also looking into adding dspam for spamtest, but how to feed the data back
to dspam corpus is still an issue.

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Derrick">shadow@andrew.cmu.edu</who>
            <bug_when>2005-02-16 16:17:28 EDT</bug_when>
            <thetext>Right, the answer you&apos;re looking for is presumably not &quot;use the Berkeley sockets
API&quot;, there&apos;s something you want to do that it doesn&apos;t cover, and I&apos;m trying to
get a handle on what you need.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Igor Brezac">igor@ipass.net</who>
            <bug_when>2005-02-16 16:27:59 EDT</bug_when>
            <thetext>I&apos;ll just use low level calls, although someone else may tackle those type of
spam|virus mechanisms.  At this point I am looking to do libclamav and libdpsam
and maybe SA at some point.  Header based spam check (as Rob described) should
be easy to do as well.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Derrick">shadow@andrew.cmu.edu</who>
            <bug_when>2005-02-16 16:30:31 EDT</bug_when>
            <thetext>Ok. When you have the clamav code in a state where it&apos;s interesting to look at
I&apos;d like to see it, even if it&apos;s not done.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Igor Brezac">igor@ipass.net</who>
            <bug_when>2005-02-16 16:38:40 EDT</bug_when>
            <thetext>Sounds good.  I&apos;ll post something after I get the skeleton done.  This way other
mechanims can be developed at the same time.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Igor Brezac">igor@ipass.net</who>
            <bug_when>2005-04-26 16:58:39 EDT</bug_when>
            <thetext>Created an attachment (id=344)
New patch tar file

This tar file includes a full sieve patch (in patch format) + two new files:
cmulocal/clamav.m4 and imap/sieve_clamav.c  I think I covered everything.

This should be a complete patch including a clamav sieve backend.  The clamav
backend is ready to be used, although I&apos;d welocome more testing and/or other
suggestions.  clamav backend should be used as an example for writing other
backends.

Comments/Suggections?
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Derrick">shadow@andrew.cmu.edu</who>
            <bug_when>2005-04-26 20:39:46 EDT</bug_when>
            <thetext>Edited version of m4 file being committed to cmulocal tree now. We took support for discovering and 
using lib64 trees where appropriate earlier today (an AC_REQUIRE&apos;d test and then using the result in 
place of &quot;lib&quot;).

I will test the rest.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">murch@andrew.cmu.edu</who>
            <bug_when>2007-04-23 10:02:23 EDT</bug_when>
            <thetext>Alternate spamtest implementation:

http://bubble.nsys.by/projects/patches/cyrus-imapd/cyrus-imapd-2.2.12-sieve-spamtest.patch</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2014-10-21 09:56:01 EDT</bug_when>
            <thetext>Batch moving bugs that won&apos;t be in 2.5</thetext>
          </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>305</attachid>
            <date>2004-08-18 10:54 EDT</date>
            <desc>spamtest and virustest (rfc3685)</desc>
            <filename>sieve.patch</filename>
            <type>text/plain</type>
            <size>20547</size>
            <attacher>igor@ipass.net</attacher>
            
              <data encoding="base64">SW5kZXg6IGJjX2R1bXAuYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS9iY19k
dW1wLmMsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMgpkaWZmIC11IC1yMS4yIGJjX2R1bXAuYwot
LS0gYmNfZHVtcC5jCTIyIE9jdCAyMDAzIDE4OjAzOjIzIC0wMDAwCTEuMgorKysgYmNfZHVtcC5j
CTE4IEF1ZyAyMDA0IDE0OjA2OjExIC0wMDAwCkBAIC0xNTAsMTYgKzE1MCwxNiBAQAogCQogICAg
IGNhc2UgQkNfQUREUkVTUzoKICAgICBjYXNlIEJDX0VOVkVMT1BFOgotCXByaW50ZigiJWQ6ICVz
IChcbiIsaXArKywKLQkgICAgICAgZC0+ZGF0YVtpcF0ub3AgPT0gQkNfQUREUkVTUyA/ICJBRERS
RVNTIiA6ICJFTlZFTE9QRSIpOworCXByaW50ZigiJWQ6ICVzIChcbiIsaXAsCisJICAgICAgIGQt
PmRhdGFbaXArK10ub3AgPT0gQkNfQUREUkVTUyA/ICJBRERSRVNTIiA6ICJFTlZFTE9QRSIpOwog
CXByaW50X3NwYWNlcyhsZXZlbCo0KTsKIAlpZiAoZC0+ZGF0YVtpcF0udmFsdWUgPT0gQl9DT1VO
VCB8fCBkLT5kYXRhW2lwXS52YWx1ZSA9PSBCX1ZBTFVFKQogCXsKIAkgICAgcHJpbnRmKCIgICAg
ICBNQVRDSDolZCBSRUxBVElPTjogJWQgQ09NUDogJWQgVFlQRTogJWQgSEVBREVSUzpcbiIsIAot
CQkgICBkLT5kYXRhW2lwXS52YWx1ZSwgZC0+ZGF0YVtpcCsxXS52YWx1ZSwgZC0+ZGF0YVtpcCsy
XS52YWx1ZSwgZC0+ZGF0YVtpcCszXS52YWx1ZSk7CisJCSAgIGQtPmRhdGFbaXBdLnZhbHVlLCBk
LT5kYXRhW2lwKzFdLnZhbHVlLCBkLT5kYXRhW2lwKzJdLnZhbHVlLCBkLT5kYXRhW2lwKzNdLnN0
cik7CiAJfSBlbHNlIHsKIAkgICAgcHJpbnRmKCIgICAgICBNQVRDSDolZCBDT01QOiVkIFRZUEU6
JWQgSEVBREVSUzpcbiIsCi0JCSAgIGQtPmRhdGFbaXBdLnZhbHVlLGQtPmRhdGFbaXArMV0udmFs
dWUsZC0+ZGF0YVtpcCszXS52YWx1ZSk7CisJCSAgIGQtPmRhdGFbaXBdLnZhbHVlLGQtPmRhdGFb
aXArMV0udmFsdWUsZC0+ZGF0YVtpcCszXS5zdHIpOwogCX0KIAlpcCs9NDsKIAlpcCA9IGR1bXBf
c2woZCxpcCxsZXZlbCk7IGlwKys7CkBAIC0xNjgsNiArMTY4LDE2IEBACiAJaXAgPSBkdW1wX3Ns
KGQsaXAsbGV2ZWwpOwogCWJyZWFrOwogCisgICAgY2FzZSBCQ19WSVJVU1RFU1Q6CisgICAgY2Fz
ZSBCQ19TUEFNVEVTVDoKKwlwcmludGYoIiVkOiAlcyhcbiIsaXAsCisJICAgICAgIChkLT5kYXRh
W2lwKytdLm9wID09IEJDX1NQQU1URVNUKSA/ICJTUEFNVEVTVCIgOiAiVklSVVNURVNUIik7CisJ
cHJpbnRfc3BhY2VzKGxldmVsKjQpOworCXByaW50ZigiICAgICAgTUFUQ0g6ICVkICBSRUxBVElP
TjogJWQgIENPTVA6ICVkIFNUUklORzogXCIlc1wiXG4iLCAKKwkgICBkLT5kYXRhW2lwXS52YWx1
ZSwgZC0+ZGF0YVtpcCsxXS52YWx1ZSxkLT5kYXRhW2lwKzJdLnZhbHVlLGQtPmRhdGFbaXArNF0u
c3RyKTsKKwlpcCs9NDsKKwlicmVhazsKKwkKICAgICBkZWZhdWx0OgogCXByaW50ZigiJWQ6IFRF
U1QoJWQpXG4iLGlwLGQtPmRhdGFbaXBdLm9wKTsKIAlicmVhazsKSW5kZXg6IGJjX2VtaXQuYwo9
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS9iY19lbWl0LmMsdgpyZXRyaWV2aW5n
IHJldmlzaW9uIDEuMgpkaWZmIC11IC1yMS4yIGJjX2VtaXQuYwotLS0gYmNfZW1pdC5jCTIyIE9j
dCAyMDAzIDE4OjAzOjI0IC0wMDAwCTEuMgorKysgYmNfZW1pdC5jCTE4IEF1ZyAyMDA0IDE0OjA2
OjExIC0wMDAwCkBAIC0yOTksNiArMjk5LDQzIEBACiAJYnJlYWs7CiAgICAgfQogICAgIAorICAg
IGNhc2UgQkNfVklSVVNURVNUOgorICAgIGNhc2UgQkNfU1BBTVRFU1Q6CisgICAgeworCWludCBy
ZXQ7CisJaW50IGxlbjsKKwkvKiBEcm9wIG1hdGNoIHR5cGUgKi8KKwlpZih3cml0ZV9pbnQoZmQs
IGJjLT5kYXRhWygqY29kZXApXS52YWx1ZSkgPT0gLTEpCisJICAgIHJldHVybiAtMTsKKwl3cm90
ZSArPSBzaXplb2YoaW50KTsKKwkoKmNvZGVwKSsrOworCS8qZHJvcCBjb21wYXJhdG9yICovCisJ
aWYod3JpdGVfaW50KGZkLCBiYy0+ZGF0YVsoKmNvZGVwKV0udmFsdWUpID09IC0xKQorCSAgICBy
ZXR1cm4gLTE7CisJd3JvdGUgKz0gc2l6ZW9mKGludCk7CisJKCpjb2RlcCkrKzsgICAgCisJLypu
b3cgZHJvcCByZWxhdGlvbiovCisJaWYod3JpdGVfaW50KGZkLCBiYy0+ZGF0YVsoKmNvZGVwKV0u
dmFsdWUpID09IC0xKQorCSAgICByZXR1cm4gLTE7CisJd3JvdGUgKz0gc2l6ZW9mKGludCk7CisJ
KCpjb2RlcCkrKzsKKworCS8qIE5vdyBkcm9wIHN0cmluZyAqLworCWxlbiA9IGJjLT5kYXRhWygq
Y29kZXApXS5sZW47CisJaWYod3JpdGVfaW50KGZkLCBsZW4pID09IC0xKSByZXR1cm4gLTE7CisJ
d3JvdGUgKz0gc2l6ZW9mKGludCk7CisJKCpjb2RlcCkrKzsKKwlpZih3cml0ZShmZCwgYmMtPmRh
dGFbKCpjb2RlcCldLnN0ciwgbGVuKSA9PSAtMSkgcmV0dXJuIC0xOworCXdyb3RlICs9IGxlbjsK
KworCXJldCA9IGFsaWduX3N0cmluZyhmZCxsZW4pOworCWlmKHJldCA9PSAtMSkgcmV0dXJuIC0x
OworCXdyb3RlICs9IHJldDsKKworCSgqY29kZXApKys7CisJYnJlYWs7CisgICAgfQorICAgIAog
ICAgIGRlZmF1bHQ6CiAJLyogVW5rbm93biB0ZXN0Y29kZT8gKi8KIAlyZXR1cm4gLTE7CkluZGV4
OiBiY19ldmFsLmMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc2lldmUvYmNfZXZhbC5j
LHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjcKZGlmZiAtdSAtcjEuNyBiY19ldmFsLmMKLS0tIGJj
X2V2YWwuYwkyOSBKdWwgMjAwNCAxNTo0MjozMSAtMDAwMAkxLjcKKysrIGJjX2V2YWwuYwkxOCBB
dWcgMjAwNCAxNDowNjoxMiAtMDAwMApAQCAtMzEyLDYgKzMxMiw3IEBACiAgICAgaW50IGxpc3Rf
bGVuOyAvKiBmb3IgYWxsb2YvYW55b2YvZXhpc3RzICovCiAgICAgaW50IGxpc3RfZW5kOyAvKiBm
b3IgYWxsb2YvYW55b2YvZXhpc3RzICovCiAgICAgaW50IGFkZHJlc3M9MDsvKnRvIGRpZmZlcmVu
dGlhdGUgYmV0d2VlbiBhZGRyZXNzIGFuZCBlbnZlbG9wZSovCisgICAgaW50IHZpcnVzPTA7Lyp0
byBkaWZmZXJlbnRpYXRlIGJldHdlZW4gc3BhbSBhbmQgdmlydXMqLwogICAgIGNvbXBhcmF0b3Jf
dCAqIGNvbXA9TlVMTDsKICAgICB2b2lkICogY29tcHJvY2s9TlVMTDsKICAgICBpbnQgb3A9IG50
b2hsKGJjW2ldLm9wKTsKQEAgLTcwNyw2ICs3MDgsNzkgQEAKIAogCS8qIFVwZGF0ZSBJUCAqLwog
CWk9KG50b2hsKGJjW2RhdGFpKzFdLnZhbHVlKS80KTsKKwkKKwlicmVhazsKKyAgICB9CisgICAg
Y2FzZSBCQ19WSVJVU1RFU1Q6CisgICAgCXZpcnVzPTE7CisgICAgY2FzZSBCQ19TUEFNVEVTVDov
KjEwKi8KKyAgICB7CisJY29uc3QgY2hhciAqdmFsOworCisJY29uc3QgY2hhciAqZGF0YV92YWw9
TlVMTDsKKworCWludCBtYXRjaD1udG9obChiY1tpKzFdLnZhbHVlKTsKKwlpbnQgcmVsYXRpb249
bnRvaGwoYmNbaSsyXS52YWx1ZSk7CisJaW50IGNvbXBhcmF0b3I9bnRvaGwoYmNbaSszXS52YWx1
ZSk7CisJaW50IGlzUmVnID0gKG1hdGNoPT1CX1JFR0VYKTsKKwlpbnQgY3RhZyA9IDA7CisJcmVn
ZXhfdCAqcmVnOworCWNoYXIgZXJyYnVmWzEwMF07IC8qIEJhc2ljYWxseSB1bnVzZWQsIHJlZ2V4
cHMgdGVzdGVkIGF0IGNvbXBpbGUgKi8gCisKKwlpID0gdW53cmFwX3N0cmluZyhiYywgaSs0LCAm
ZGF0YV92YWwsIE5VTEwpOworCisJLyogc2V0IHVwIHZhcmlhYmxlcyBuZWVkZWQgZm9yIGNvbXBp
bGluZyByZWdleCAqLworCWlmIChpc1JlZykKKwl7CisJICAgIGlmIChjb21wYXJhdG9yPT0gQl9B
U0NJSUNBU0VNQVApCisJICAgIHsKKwkJY3RhZz0gUkVHX0VYVEVOREVEIHwgUkVHX05PU1VCIHwg
UkVHX0lDQVNFOworCSAgICB9CisJICAgIGVsc2UKKwkgICAgeworCQljdGFnPSBSRUdfRVhURU5E
RUQgfCBSRUdfTk9TVUI7CisJICAgIH0KKyAgICAgCisJfQorCQorCS8qZmluZCB0aGUgY29ycmVj
dCBjb21wYXJhdG9yIGZjbiovCisJY29tcD1sb29rdXBfY29tcChjb21wYXJhdG9yLCBtYXRjaCwg
cmVsYXRpb24sICZjb21wcm9jayk7CisKKwlpZighY29tcCkgeworCSAgICByZXMgPSBTSUVWRV9S
VU5fRVJST1I7CisJICAgIGJyZWFrOworCX0KKworCWlmICh2aXJ1cykgeworCSAgICBpZiAoaW50
ZXJwLT5nZXR2aXJ1c3Rlc3QobSwgJnZhbCkgIT0gU0lFVkVfT0spCisJCWJyZWFrOworCX0gZWxz
ZSB7CisJICAgIGlmIChpbnRlcnAtPmdldHNwYW10ZXN0KG0sICZ2YWwpICE9IFNJRVZFX09LKQor
CQlicmVhazsKKwl9CisKKyNpZiBWRVJCT1NFCisJcHJpbnRmICgidmFsICVzIG1hdGNoICVkIHJl
bGF0aW9uICVkIGNvbXBhcmF0b3IgJWQgZGF0YV92YWwgJXMgaT0gJWRcbiIsIHZhbCwgbWF0Y2gg
LCByZWxhdGlvbiwgY29tcGFyYXRvciwgZGF0YV92YWwsIGkpOworI2VuZGlmCisJICAgIAorCWlm
IChpc1JlZykgeworCSAgICByZWc9IGJjX2NvbXBpbGVfcmVnZXgoZGF0YV92YWwsIGN0YWcsIGVy
cmJ1ZiwKKwkJCQkgIHNpemVvZihlcnJidWYpKTsKKwkgICAgaWYgKCFyZWcpCisJICAgIHsKKwkJ
LyogT29wcyAqLworCQlyZXM9LTE7CisJCWdvdG8gYWxsZG9uZTsKKwkgICAgfQorCSAgICAKKwkg
ICAgcmVzIHw9IGNvbXAodmFsLCAoY29uc3QgY2hhciAqKXJlZywKKwkJCWNvbXByb2NrKTsKKwkg
ICAgZnJlZShyZWcpOworCX0gZWxzZSB7CisJICAgIHJlcyB8PSBjb21wKHZhbCwgZGF0YV92YWws
IGNvbXByb2NrKTsKKwl9CisJCisJLyogVXBkYXRlIElQICovCiAJCiAJYnJlYWs7CiAgICAgfQpJ
bmRleDogYmNfZ2VuZXJhdGUuYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS9i
Y19nZW5lcmF0ZS5jLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjMKZGlmZiAtdSAtcjEuMyBiY19n
ZW5lcmF0ZS5jCi0tLSBiY19nZW5lcmF0ZS5jCTExIEF1ZyAyMDA0IDE4OjQzOjE1IC0wMDAwCTEu
MworKysgYmNfZ2VuZXJhdGUuYwkxOCBBdWcgMjAwNCAxNDowNjoxMiAtMDAwMApAQCAtMzU1LDYg
KzM1NSwyOCBAQAogCWlmIChjb2RlcCA9PSAtMSkgcmV0dXJuIC0xOwogICAgICAKIAlicmVhazsK
KyAgICBjYXNlIFZJUlVTVEVTVDoKKyAgICBjYXNlIFNQQU1URVNUOgorCS8qIChCQ19TUEFNVEVT
VCB8IEJDX1ZJUlVTVEVTVCkgeyBjOiBjb21wYXJhdG9yIH0gKCBTVFJJTkcgKQorCSovCisgICAg
ICAKKwlpZighYXRsZWFzdChyZXR2YWwsY29kZXAgKyAxKSkgcmV0dXJuIC0xOworCisJcmV0dmFs
LT5kYXRhW2NvZGVwKytdLm9wID0gKHQtPnR5cGUgPT0gU1BBTVRFU1QpCisJICAgID8gQkNfU1BB
TVRFU1QgOiBCQ19WSVJVU1RFU1Q7CisgICAgICAKKwkvKiBjb21wYXJhdG9yICovCisJY29kZXAg
PSBiY19jb21wYXJhdG9yX2dlbmVyYXRlKGNvZGVwLCByZXR2YWwsCisJCQkJICAgICAgIHQtPnUu
c3YuY29tcHRhZywKKwkJCQkgICAgICAgdC0+dS5zdi5yZWxhdGlvbiwKKwkJCQkgICAgICAgdC0+
dS5zdi5jb21wYXJhdG9yKTsKKwlpZiAoY29kZXAgPT0gLTEpIHJldHVybiAtMTsKKworCWlmKCFh
dGxlYXN0KHJldHZhbCxjb2RlcCsyKSkgcmV0dXJuIC0xOworICAgICAgCisJcmV0dmFsLT5kYXRh
W2NvZGVwKytdLmxlbiA9IHN0cmxlbih0LT51LnN2LnMpOworCXJldHZhbC0+ZGF0YVtjb2RlcCsr
XS5zdHIgPSB0LT51LnN2LnM7CisJYnJlYWs7CiAgICAgZGVmYXVsdDoKIAlyZXR1cm4gLTE7CiAg
ICAgICAKSW5kZXg6IGJ5dGVjb2RlLmgKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc2ll
dmUvYnl0ZWNvZGUuaCx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4zCmRpZmYgLXUgLXIxLjMgYnl0
ZWNvZGUuaAotLS0gYnl0ZWNvZGUuaAkyMiBKdW4gMjAwNCAxNjo1NDo1NCAtMDAwMAkxLjMKKysr
IGJ5dGVjb2RlLmgJMTggQXVnIDIwMDQgMTQ6MDY6MTIgLTAwMDAKQEAgLTI4LDggKzI4LDggQEAK
IAogCiAvKiBmb3IgZGVidWdnaW5nKi8KLSNkZWZpbmUgRFVNUENPREUgMAotI2RlZmluZSBWRVJC
T1NFIDAKKyNkZWZpbmUgRFVNUENPREUgMQorI2RlZmluZSBWRVJCT1NFIDEKIAogLypmb3IgZmlu
ZGluZyBjb3JyZWN0bHkgYWxpZ25lZCBieXRlcyBvbiBzdHJpbmdzKi8KIC8qIGJ1bXAgdG8gdGhl
IG5leHQgbXVsdGlwbGUgb2YgNCBieXRlcyAqLwpAQCAtMTE2LDcgKzExNiw5IEBACiAgICAgQkNf
QUxMT0YsCiAgICAgQkNfQUREUkVTUywKICAgICBCQ19FTlZFTE9QRSwgIC8qIHJlcXVpcmUgZW52
ZWxvcGUqLwotICAgIEJDX0hFQURFUiAgICAKKyAgICBCQ19IRUFERVIsCisgICAgQkNfU1BBTVRF
U1QsIC8qIHJlcXVpcmUgc3BhbXRlc3QgKi8KKyAgICBCQ19WSVJVU1RFU1QgLyogcmVxdWlyZSB2
aXJ1c3Rlc3QgKi8KIH07CiAKIC8qIGN1cnJlbnRseSBvbmUgZW51bSBzbyBhcyB0byBoZWxwIGRl
dGVybWluZSB3aGVyZSB2YWx1ZXMgYXJlIGJlaW5nIG1pc3VzZWQuCkluZGV4OiBpbnRlcnAuYwo9
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS9pbnRlcnAuYyx2CnJldHJpZXZpbmcg
cmV2aXNpb24gMS4yMgpkaWZmIC11IC1yMS4yMiBpbnRlcnAuYwotLS0gaW50ZXJwLmMJMTQgTWF5
IDIwMDIgMTY6NTE6NTAgLTAwMDAJMS4yMgorKysgaW50ZXJwLmMJMTggQXVnIDIwMDQgMTQ6MDY6
MTIgLTAwMDAKQEAgLTU3LDYgKzU3LDggQEAKICAgICBpLT5nZXRzaXplID0gTlVMTDsKICAgICBp
LT5nZXRoZWFkZXIgPSBOVUxMOwogICAgIGktPmdldGVudmVsb3BlID0gTlVMTDsKKyAgICBpLT5n
ZXRzcGFtdGVzdCA9IE5VTEw7CisgICAgaS0+Z2V0dmlydXN0ZXN0ID0gTlVMTDsKICAgICBpLT52
YWNhdGlvbiA9IE5VTEw7CiAgICAgaS0+bm90aWZ5ID0gTlVMTDsKIApAQCAtNzEsNiArNzMsNyBA
QAogCiBzdGF0aWMgY29uc3QgY2hhciAqc2lldmVfZXh0ZW5zaW9ucyA9ICJmaWxlaW50byByZWpl
Y3QgZW52ZWxvcGUgdmFjYXRpb24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICIgaW1hcGZsYWdzIG5vdGlmeSBzdWJhZGRyZXNzIHJlbGF0aW9uYWwiCisgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICIgc3BhbXRlc3QgdmlydXN0ZXN0IgogI2lmZGVm
IEVOQUJMRV9SRUdFWAogIiByZWdleCI7CiAjZWxzZQpAQCAtMTYwLDYgKzE2MywxOCBAQAogaW50
IHNpZXZlX3JlZ2lzdGVyX2VudmVsb3BlKHNpZXZlX2ludGVycF90ICppbnRlcnAsIHNpZXZlX2dl
dF9lbnZlbG9wZSAqZikKIHsKICAgICBpbnRlcnAtPmdldGVudmVsb3BlID0gZjsKKyAgICByZXR1
cm4gU0lFVkVfT0s7Cit9CisKK2ludCBzaWV2ZV9yZWdpc3Rlcl9zcGFtdGVzdChzaWV2ZV9pbnRl
cnBfdCAqaW50ZXJwLCBzaWV2ZV9nZXRfc3BhbXRlc3QgKmYpCit7CisgICAgaW50ZXJwLT5nZXRz
cGFtdGVzdCA9IGY7CisgICAgcmV0dXJuIFNJRVZFX09LOworfQorCitpbnQgc2lldmVfcmVnaXN0
ZXJfdmlydXN0ZXN0KHNpZXZlX2ludGVycF90ICppbnRlcnAsIHNpZXZlX2dldF92aXJ1c3Rlc3Qg
KmYpCit7CisgICAgaW50ZXJwLT5nZXR2aXJ1c3Rlc3QgPSBmOwogICAgIHJldHVybiBTSUVWRV9P
SzsKIH0KIApJbmRleDogaW50ZXJwLmgKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc2ll
dmUvaW50ZXJwLmgsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNwpkaWZmIC11IC1yMS43IGludGVy
cC5oCi0tLSBpbnRlcnAuaAkxMCBNYXIgMjAwMiAwMjo1ODowOSAtMDAwMAkxLjcKKysrIGludGVy
cC5oCTE4IEF1ZyAyMDA0IDE0OjA2OjEyIC0wMDAwCkBAIC0zOSw2ICszOSw4IEBACiAgICAgc2ll
dmVfZ2V0X3NpemUgKmdldHNpemU7CiAgICAgc2lldmVfZ2V0X2hlYWRlciAqZ2V0aGVhZGVyOwog
ICAgIHNpZXZlX2dldF9lbnZlbG9wZSAqZ2V0ZW52ZWxvcGU7CisgICAgc2lldmVfZ2V0X3NwYW10
ZXN0ICpnZXRzcGFtdGVzdDsKKyAgICBzaWV2ZV9nZXRfdmlydXN0ZXN0ICpnZXR2aXJ1c3Rlc3Q7
CiAKICAgICBzaWV2ZV9wYXJzZV9lcnJvciAqZXJyOwogCkluZGV4OiBzY3JpcHQuYwo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS9zY3JpcHQuYyx2CnJldHJpZXZpbmcgcmV2aXNp
b24gMS42MgpkaWZmIC11IC1yMS42MiBzY3JpcHQuYwotLS0gc2NyaXB0LmMJMTUgSnVsIDIwMDQg
MTU6MDI6NTEgLTAwMDAJMS42MgorKysgc2NyaXB0LmMJMTggQXVnIDIwMDQgMTQ6MDY6MTIgLTAw
MDAKQEAgLTExNCw2ICsxMTQsMjAgQEAKICAgICB9IGVsc2UgaWYgKCFzdHJjbXAoImNvbXBhcmF0
b3ItaTthc2NpaS1udW1lcmljIiwgcmVxKSkgewogCXMtPnN1cHBvcnQuaV9hc2NpaV9udW1lcmlj
ID0gMTsKIAlyZXR1cm4gMTsKKyAgICB9IGVsc2UgaWYgKCFzdHJjbXAoInNwYW10ZXN0IiwgcmVx
KSkgeworCWlmIChzLT5pbnRlcnAuZ2V0c3BhbXRlc3QpIHsKKyAgICAgICAgICAgIHMtPnN1cHBv
cnQuc3BhbXRlc3QgPSAxOworICAgICAgICAgICAgcmV0dXJuIDE7CisJfSBlbHNlIHsKKwkgICAg
cmV0dXJuIDA7CisJfQorICAgIH0gZWxzZSBpZiAoIXN0cmNtcCgidmlydXN0ZXN0IiwgcmVxKSkg
eworCWlmIChzLT5pbnRlcnAuZ2V0c3BhbXRlc3QpIHsKKyAgICAgICAgICAgIHMtPnN1cHBvcnQu
dmlydXN0ZXN0ID0gMTsKKyAgICAgICAgICAgIHJldHVybiAxOworCX0gZWxzZSB7CisJICAgIHJl
dHVybiAwOworCX0KICAgICB9CiAgICAgcmV0dXJuIDA7CiB9CkluZGV4OiBzY3JpcHQuaAo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS9zY3JpcHQuaCx2CnJldHJpZXZpbmcgcmV2
aXNpb24gMS4xMQpkaWZmIC11IC1yMS4xMSBzY3JpcHQuaAotLS0gc2NyaXB0LmgJMjIgT2N0IDIw
MDMgMTg6NTA6MzAgLTAwMDAJMS4xMQorKysgc2NyaXB0LmgJMTggQXVnIDIwMDQgMTQ6MDY6MTIg
LTAwMDAKQEAgLTQ5LDYgKzQ5LDggQEAKIAlpbnQgc3ViYWRkcmVzcyAgICAgOiAxOwogCWludCBy
ZWxhdGlvbmFsICAgICA6IDE7CiAJaW50IGlfYXNjaWlfbnVtZXJpYzogMTsKKwlpbnQgc3BhbXRl
c3QgICAgICAgOiAxOworCWludCB2aXJ1c3Rlc3QgICAgICA6IDE7CiAgICAgfSBzdXBwb3J0Owog
CiAgICAgdm9pZCAqc2NyaXB0X2NvbnRleHQ7CkluZGV4OiBzaWV2ZS1sZXgubAo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
ClJDUyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS9zaWV2ZS1sZXgubCx2CnJldHJpZXZpbmcgcmV2aXNp
b24gMS4yMApkaWZmIC11IC1yMS4yMCBzaWV2ZS1sZXgubAotLS0gc2lldmUtbGV4LmwJNyBKdW4g
MjAwMiAyMDowNDo0OSAtMDAwMAkxLjIwCisrKyBzaWV2ZS1sZXgubAkxOCBBdWcgMjAwNCAxNDow
NjoxMiAtMDAwMApAQCAtODksNiArODksOCBAQAogPElOSVRJQUw+YWRkcmVzcwlyZXR1cm4gQURE
UkVTUzsKIDxJTklUSUFMPmVudmVsb3BlCXJldHVybiBFTlZFTE9QRTsKIDxJTklUSUFMPmhlYWRl
cgkJcmV0dXJuIEhFQURFUjsKKzxJTklUSUFMPnNwYW10ZXN0CXJldHVybiBTUEFNVEVTVDsKKzxJ
TklUSUFMPnZpcnVzdGVzdAlyZXR1cm4gVklSVVNURVNUOwogPElOSVRJQUw+bm90CQlyZXR1cm4g
Tk9UOwogPElOSVRJQUw+c2l6ZQkJcmV0dXJuIFNJWkU7CiA8SU5JVElBTD5yZWplY3QJCXJldHVy
biBSRUpDVDsKSW5kZXg6IHNpZXZlLnkKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc2ll
dmUvc2lldmUueSx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4zMgpkaWZmIC11IC1yMS4zMiBzaWV2
ZS55Ci0tLSBzaWV2ZS55CTI5IEp1biAyMDA0IDIwOjI5OjI2IC0wMDAwCTEuMzIKKysrIHNpZXZl
LnkJMTggQXVnIDIwMDQgMTQ6MDY6MTIgLTAwMDAKQEAgLTgyLDYgKzgyLDEyIEBACiAgICAgaW50
IHByaW9yaXR5OwogfTsKIAorc3RydWN0IHN2dGFncyB7CisgICAgaW50IGNvbXB0YWc7CisgICAg
Y2hhciAqY29tcGFyYXRvcjsKKyAgICBpbnQgcmVsYXRpb247Cit9OworCiBzdGF0aWMgY29tbWFu
ZGxpc3RfdCAqcmV0Owogc3RhdGljIHNpZXZlX3NjcmlwdF90ICpwYXJzZV9zY3JpcHQ7CiBzdGF0
aWMgaW50IGNoZWNrX3JlcXMoc3RyaW5nbGlzdF90ICpzbCk7CkBAIC04OSw2ICs5NSw3IEBACiAJ
CQkgICAgIHN0cmluZ2xpc3RfdCAqc2wsIHN0cmluZ2xpc3RfdCAqcGwpOwogc3RhdGljIHRlc3Rf
dCAqYnVpbGRfaGVhZGVyKGludCB0LCBzdHJ1Y3QgaHRhZ3MgKmgsCiAJCQkgICAgc3RyaW5nbGlz
dF90ICpzbCwgc3RyaW5nbGlzdF90ICpwbCk7CitzdGF0aWMgdGVzdF90ICpidWlsZF9zdnRlc3Qo
aW50IHQsIHN0cnVjdCBzdnRhZ3MgKnN2LCBjaGFyICpzKTsKIHN0YXRpYyBjb21tYW5kbGlzdF90
ICpidWlsZF92YWNhdGlvbihpbnQgdCwgc3RydWN0IHZ0YWdzICpoLCBjaGFyICpzKTsKIHN0YXRp
YyBjb21tYW5kbGlzdF90ICpidWlsZF9ub3RpZnkoaW50IHQsIHN0cnVjdCBudGFncyAqbik7CiBz
dGF0aWMgY29tbWFuZGxpc3RfdCAqYnVpbGRfZGVub3RpZnkoaW50IHQsIHN0cnVjdCBkdGFncyAq
bik7CkBAIC0xMDcsNiArMTE0LDkgQEAKIHN0YXRpYyBzdHJ1Y3QgZHRhZ3MgKm5ld19kdGFncyh2
b2lkKTsKIHN0YXRpYyBzdHJ1Y3QgZHRhZ3MgKmNhbm9uX2R0YWdzKHN0cnVjdCBkdGFncyAqZCk7
CiBzdGF0aWMgdm9pZCBmcmVlX2R0YWdzKHN0cnVjdCBkdGFncyAqZCk7CitzdGF0aWMgc3RydWN0
IHN2dGFncyAqbmV3X3N2dGFncyh2b2lkKTsKK3N0YXRpYyBzdHJ1Y3Qgc3Z0YWdzICpjYW5vbl9z
dnRhZ3Moc3RydWN0IHN2dGFncyAqc3YpOworc3RhdGljIHZvaWQgZnJlZV9zdnRhZ3Moc3RydWN0
IHN2dGFncyAqc3YpOwogCiBzdGF0aWMgaW50IHZlcmlmeV9zdHJpbmdsaXN0KHN0cmluZ2xpc3Rf
dCAqc2wsIGludCAoKnZlcmlmeSkoY2hhciAqKSk7CiBzdGF0aWMgaW50IHZlcmlmeV9tYWlsYm94
KGNoYXIgKnMpOwpAQCAtMTE5LDYgKzEyOSw3IEBACiAjaWZkZWYgRU5BQkxFX1JFR0VYCiBzdGF0
aWMgaW50IHZlcmlmeV9yZWdleChjaGFyICpzLCBpbnQgY2ZsYWdzKTsKIHN0YXRpYyBpbnQgdmVy
aWZ5X3JlZ2V4cyhzdHJpbmdsaXN0X3QgKnNsLCBjaGFyICpjb21wKTsKK3N0YXRpYyBpbnQgdmVy
aWZ5X3JlZ2V4c3RyaW5nKGNoYXIgKnMsIGNoYXIgKmNvbXApOwogI2VuZGlmCiBzdGF0aWMgaW50
IHZlcmlmeV91dGY4KGNoYXIgKnMpOwogCkBAIC0xNDEsNiArMTUyLDcgQEAKICAgICBzdHJ1Y3Qg
aHRhZ3MgKmh0YWc7CiAgICAgc3RydWN0IG50YWdzICpudGFnOwogICAgIHN0cnVjdCBkdGFncyAq
ZHRhZzsKKyAgICBzdHJ1Y3Qgc3Z0YWdzICpzdnRhZzsKIH0KIAogJXRva2VuIDxudmFsPiBOVU1C
RVIKQEAgLTE0OSw3ICsxNjEsNyBAQAogJXRva2VuIFJFSkNUIEZJTEVJTlRPIFJFRElSRUNUIEtF
RVAgU1RPUCBESVNDQVJEIFZBQ0FUSU9OIFJFUVVJUkUKICV0b2tlbiBTRVRGTEFHIEFEREZMQUcg
UkVNT1ZFRkxBRyBNQVJLIFVOTUFSSwogJXRva2VuIE5PVElGWSBERU5PVElGWQotJXRva2VuIEFO
WU9GIEFMTE9GIEVYSVNUUyBTRkFMU0UgU1RSVUUgSEVBREVSIE5PVCBTSVpFIEFERFJFU1MgRU5W
RUxPUEUKKyV0b2tlbiBBTllPRiBBTExPRiBFWElTVFMgU0ZBTFNFIFNUUlVFIEhFQURFUiBOT1Qg
U0laRSBBRERSRVNTIEVOVkVMT1BFIFNQQU1URVNUIFZJUlVTVEVTVAogJXRva2VuIENPTVBBUkFU
T1IgSVMgQ09OVEFJTlMgTUFUQ0hFUyBSRUdFWCBDT1VOVCBWQUxVRSBPVkVSIFVOREVSCiAldG9r
ZW4gR1QgR0UgTFQgTEUgRVEgTkUKICV0b2tlbiBBTEwgTE9DQUxQQVJUIERPTUFJTiBVU0VSIERF
VEFJTApAQCAtMTU5LDcgKzE3MSw3IEBACiAldHlwZSA8Y2w+IGNvbW1hbmRzIGNvbW1hbmQgYWN0
aW9uIGVsc2lmIGJsb2NrCiAldHlwZSA8c2w+IHN0cmluZ2xpc3Qgc3RyaW5ncwogJXR5cGUgPHRl
c3Q+IHRlc3QKLSV0eXBlIDxudmFsPiBjb21wdGFnIHJlbGNvbXAgc2l6ZXRhZyBhZGRycGFydHRh
ZyBhZGRyb3JlbnYKKyV0eXBlIDxudmFsPiBjb21wdGFnIHJlbGNvbXAgc2l6ZXRhZyBhZGRycGFy
dHRhZyBhZGRyb3JlbnYgc3BhbW9ydmlydXMKICV0eXBlIDx0ZXN0bD4gdGVzdGxpc3QgdGVzdHMK
ICV0eXBlIDxodGFnPiBodGFncwogJXR5cGUgPGFldGFnPiBhZXRhZ3MKQEAgLTE2Nyw2ICsxNzks
NyBAQAogJXR5cGUgPG50YWc+IG50YWdzCiAldHlwZSA8ZHRhZz4gZHRhZ3MKICV0eXBlIDxudmFs
PiBwcmlvcml0eQorJXR5cGUgPHN2dGFnPiBzdnRhZ3MKIAogJSUKIApAQCAtNDA1LDggKzQxOCw2
IEBACiAJCQkJCSB5eWVycm9yKCJ1bmFibGUgdG8gZmluZCBhIGNvbXBhdGlibGUgY29tcGFyYXRv
ciIpOwogCQkJCQkgWVlFUlJPUjsgfSAKIAkJCQkgfQotCi0KICAgICAgICAgfCBhZGRyb3JlbnYg
YWV0YWdzIHN0cmluZ2xpc3Qgc3RyaW5nbGlzdAogCQkJCSB7IAogCQkJCSAgICAgaWYgKCgkMSA9
PSBBRERSRVNTKSAmJgpAQCAtNDI4LDYgKzQzOSwyMSBAQAogCQkJCQkgeXllcnJvcigidW5hYmxl
IHRvIGZpbmQgYSBjb21wYXRpYmxlIGNvbXBhcmF0b3IiKTsKIAkJCQkJIFlZRVJST1I7IH0gCiAJ
CQkJIH0KKwl8IHNwYW1vcnZpcnVzIHN2dGFncyBTVFJJTkcKKwkJCQl7IAorCQkJCSAgICAgJDIg
PSBjYW5vbl9zdnRhZ3MoJDIpOworI2lmZGVmIEVOQUJMRV9SRUdFWAorCQkJCSAgICAgaWYgKCQy
LT5jb21wdGFnID09IFJFR0VYKQorCQkJCSAgICAgeworCQkJCQkgaWYgKCEodmVyaWZ5X3JlZ2V4
c3RyaW5nKCQzLCAkMi0+Y29tcGFyYXRvcikpKQorCQkJCQkgeyBZWUVSUk9SOyB9CisJCQkJICAg
ICB9CisjZW5kaWYKKwkJCQkgICAgICQkID0gYnVpbGRfc3Z0ZXN0KCQxLCAkMiwgJDMpOworCQkJ
CSAgICAgaWYgKCQkID09IE5VTEwpIHsKKwkJCQkJIHl5ZXJyb3IoInVuYWJsZSB0byBmaW5kIGEg
Y29tcGF0aWJsZSBjb21wYXJhdG9yIik7CisJCQkJCSBZWUVSUk9SOyB9IAorCQkJCX0KIAogCXwg
Tk9UIHRlc3QJCSB7ICQkID0gbmV3X3Rlc3QoTk9UKTsgJCQtPnUudCA9ICQyOyB9CiAJfCBTSVpF
IHNpemV0YWcgTlVNQkVSICAgIHsgJCQgPSBuZXdfdGVzdChTSVpFKTsgJCQtPnUuc3oudCA9ICQy
OwpAQCAtNDQyLDYgKzQ2OCwxNSBAQAogCSAgICAgICAgICAgICAgICAgICAgICAgICB9CiAKIAk7
CitzcGFtb3J2aXJ1czogU1BBTVRFU1QJCSB7aWYgKCFwYXJzZV9zY3JpcHQtPnN1cHBvcnQuc3Bh
bXRlc3QpCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyB5eWVycm9yKCJz
cGFtdGVzdCBub3QgcmVxdWlyZWQiKTsgWVlFUlJPUjsgfQorCQkJCSAgZWxzZSB7JCQgPSBTUEFN
VEVTVDt9CisJCQkJIH0KKwl8IFZJUlVTVEVTVAkJIHtpZiAoIXBhcnNlX3NjcmlwdC0+c3VwcG9y
dC52aXJ1c3Rlc3QpCisJICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3l5ZXJyb3IoInZp
cnVzdGVzdCBub3QgcmVxdWlyZWQiKTsgWVlFUlJPUjt9CisJICAgICAgICAgICAgICAgICAgICAg
ICAgICBlbHNleyQkID0gVklSVVNURVNUO30KKwkgICAgICAgICAgICAgICAgICAgICAgICAgfQor
CTsKIAogYWV0YWdzOiAvKiBlbXB0eSAqLyAgICAgICAgICAgICAgeyAkJCA9IG5ld19hZXRhZ3Mo
KTsgfQogICAgICAgICB8IGFldGFncyBhZGRycGFydHRhZwkgeyAkJCA9ICQxOwpAQCAtNDk0LDYg
KzUyOSwzMiBAQAogCQkJCSAgICAgJCQtPmNvbXBhcmF0b3IgPSAkMzsgfSB9CiAgICAgICAgIDsK
IAorc3Z0YWdzOiAvKiBlbXB0eSAqLyAgICAgICAgICAgICAgeyAkJCA9IG5ld19zdnRhZ3MoKTsg
fQorCXwgc3Z0YWdzIGNvbXB0YWcgICAgICAgICB7ICQkID0gJDE7CisJCQkJICAgaWYgKCQkLT5j
b21wdGFnICE9IC0xKSB7IAorCQkJeXllcnJvcigiZHVwbGljYXRlIGNvbXBhcmF0b3IgdHlwZSB0
YWciKTsgWVlFUlJPUjsgfQorCQkJCSAgIGVsc2UgeyAkJC0+Y29tcHRhZyA9ICQyOyB9IH0KKwl8
IHN2dGFncyBWQUxVRSBTVFJJTkd7ICQkID0gJDE7CisJCQkJICAgaWYgKCQkLT5jb21wdGFnICE9
IC0xKSB7CisJCQkgICAgICAgICAgICAgICB5eWVycm9yKCJkdXBsaWNhdGUgY29tcGFyYXRvciB0
eXBlIHRhZyIpOyBZWUVSUk9SOyB9CisJCQkJICAgZWxzZSB7CisJCQkJICAgaWYgKCFwYXJzZV9z
Y3JpcHQtPnN1cHBvcnQucmVsYXRpb25hbCkgeworCQkJCSAgICAgICAgeXllcnJvcigicmVsYXRp
b25hbCBub3QgcmVxdWlyZWQiKTsKKwkJCQkgICAgICAgIFlZRVJST1I7IH0KKwkJCQkgICAkJC0+
Y29tcHRhZyA9IFZBTFVFOworCQkJCSAgICQkLT5yZWxhdGlvbiA9IHZlcmlmeV9yZWxhdCgkMyk7
CisJCQkJICAgaWYgKCQkLT5yZWxhdGlvbj09LTEpIAorCQkJCSAgICAge1lZRVJST1I7IC8qdnIg
Y2FsbGVkIHl5ZXJyb3IoKSovIH0KKwkJCQkgICB9IH0KKyAgICAgICAgfCBzdnRhZ3MgQ09NUEFS
QVRPUiBTVFJJTkcgeyAkJCA9ICQxOworCSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYg
KCQkLT5jb21wYXJhdG9yICE9IE5VTEwpIHsgCisJCQl5eWVycm9yKCJkdXBsaWNhdGUgY29tcGFy
YXRvciB0YWciKTsgWVlFUlJPUjsgfQorCQkJCSAgICAgZWxzZSBpZiAoIXN0cmNtcCgkMywgImk7
YXNjaWktbnVtZXJpYyIpICYmCisJCQkJICAgICFwYXJzZV9zY3JpcHQtPnN1cHBvcnQuaV9hc2Np
aV9udW1lcmljKSB7CisJCQl5eWVycm9yKCJjb21wYXJhdG9yLWk7YXNjaWktbnVtZXJpYyBub3Qg
cmVxdWlyZWQiKTsKKwkJCVlZRVJST1I7IH0KKwkJCQkgICBlbHNlIHsgJCQtPmNvbXBhcmF0b3Ig
PSAkMzsgfSB9CisJOwogCiBhZGRycGFydHRhZzogQUxMICAgICAgICAgICAgICAgICB7ICQkID0g
QUxMOyB9CiAJfCBMT0NBTFBBUlQJCSB7ICQkID0gTE9DQUxQQVJUOyB9CkBAIC01MzAsOCArNTkx
LDYgQEAKIAkJCQkgICB9CiAJCQkJICAgJCQgPSBWQUxVRTsgfQogCTsKLQotCiBzaXpldGFnOiBP
VkVSCQkJIHsgJCQgPSBPVkVSOyB9CiAJfCBVTkRFUgkJCSB7ICQkID0gVU5ERVI7IH0KIAk7CkBA
IC02NzgsNiArNzM3LDIzIEBACiAgICAgcmV0dXJuIHJldDsKIH0KIAorc3RhdGljIHRlc3RfdCAq
YnVpbGRfc3Z0ZXN0KGludCB0LCBzdHJ1Y3Qgc3Z0YWdzICpzdiwgY2hhciAqcykKK3sKKyAgICB0
ZXN0X3QgKnJldCA9IG5ld190ZXN0KHQpOworCisgICAgYXNzZXJ0KCh0ID09IFNQQU1URVNUKSB8
fCAodCA9PSBWSVJVU1RFU1QpKTsKKworICAgIGlmIChyZXQpIHsKKwlyZXQtPnUuc3YuY29tcHRh
Zz1zdi0+Y29tcHRhZzsKKwlyZXQtPnUuc3YucmVsYXRpb249c3YtPnJlbGF0aW9uOworCXJldC0+
dS5zdi5jb21wYXJhdG9yPXN0cmR1cChzdi0+Y29tcGFyYXRvcik7CisJcmV0LT51LnN2LnMgPSBz
OworCWZyZWVfc3Z0YWdzKHN2KTsKKworICAgIH0KKyAgICByZXR1cm4gcmV0OworfQorCiBzdGF0
aWMgc3RydWN0IGFldGFncyAqbmV3X2FldGFncyh2b2lkKQogewogICAgIHN0cnVjdCBhZXRhZ3Mg
KnIgPSAoc3RydWN0IGFldGFncyAqKSB4bWFsbG9jKHNpemVvZihzdHJ1Y3QgYWV0YWdzKSk7CkBA
IC04MTUsNiArODkxLDMxIEBACiAgICAgZnJlZShkKTsKIH0KIAorc3RhdGljIHN0cnVjdCBzdnRh
Z3MgKm5ld19zdnRhZ3Modm9pZCkKK3sKKyAgICBzdHJ1Y3Qgc3Z0YWdzICpyID0gKHN0cnVjdCBz
dnRhZ3MgKikgeG1hbGxvYyhzaXplb2Yoc3RydWN0IHN2dGFncykpOworCisgICAgci0+Y29tcHRh
ZyA9IHItPnJlbGF0aW9uPS0xOworICAgIHItPmNvbXBhcmF0b3I9TlVMTDsKKworICAgIHJldHVy
biByOworfQorCitzdGF0aWMgc3RydWN0IHN2dGFncyAqY2Fub25fc3Z0YWdzKHN0cnVjdCBzdnRh
Z3MgKnN2KQoreworICAgIGlmIChzdi0+Y29tcGFyYXRvciA9PSBOVUxMKSB7CisgICAgICAgIHN2
LT5jb21wYXJhdG9yID0geHN0cmR1cCgiaTthc2NpaS1jYXNlbWFwIik7CisgICAgfQorICAgIGlm
IChzdi0+Y29tcHRhZyA9PSAtMSkgeyBzdi0+Y29tcHRhZyA9IElTOyB9CisgICAgcmV0dXJuIHN2
OworfQorCitzdGF0aWMgdm9pZCBmcmVlX3N2dGFncyhzdHJ1Y3Qgc3Z0YWdzICpzdikKK3sKKyAg
ICBmcmVlKHN2LT5jb21wYXJhdG9yKTsKKyAgICBmcmVlKHN2KTsKK30KKwogc3RhdGljIGludCB2
ZXJpZnlfc3RyaW5nbGlzdChzdHJpbmdsaXN0X3QgKnNsLCBpbnQgKCp2ZXJpZnkpKGNoYXIgKikp
CiB7CiAgICAgZm9yICg7IHNsICE9IE5VTEwgJiYgdmVyaWZ5KHNsLT5zKTsgc2wgPSBzbC0+bmV4
dCkgOwpAQCAtOTkzLDYgKzEwOTQsMTcgQEAKIAlyZXR1cm4gMTsKICAgICB9CiAgICAgcmV0dXJu
IDA7Cit9CisKK3N0YXRpYyBpbnQgdmVyaWZ5X3JlZ2V4c3RyaW5nKGNoYXIgKnMsIGNoYXIgKmNv
bXApCit7CisgICAgaW50IGNmbGFncyA9IFJFR19FWFRFTkRFRCB8IFJFR19OT1NVQjsKKyAKKyAg
ICBpZiAoIXN0cmNtcChjb21wLCAiaTthc2NpaS1jYXNlbWFwIikpIHsKKwljZmxhZ3MgfD0gUkVH
X0lDQVNFOworICAgIH0KKworICAgIHJldHVybiB2ZXJpZnlfcmVnZXgocywgY2ZsYWdzKTsKIH0K
ICNlbmRpZgogCkluZGV4OiBzaWV2ZV9pbnRlcmZhY2UuaAo9PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAv
Y3ZzL3NyYy9zaWV2ZS9zaWV2ZV9pbnRlcmZhY2UuaCx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4x
OQpkaWZmIC11IC1yMS4xOSBzaWV2ZV9pbnRlcmZhY2UuaAotLS0gc2lldmVfaW50ZXJmYWNlLmgJ
MjIgT2N0IDIwMDMgMTg6NTA6MzAgLTAwMDAJMS4xOQorKysgc2lldmVfaW50ZXJmYWNlLmgJMTgg
QXVnIDIwMDQgMTQ6MDY6MTIgLTAwMDAKQEAgLTUyLDYgKzUyLDEwIEBACiB0eXBlZGVmIGludCBz
aWV2ZV9nZXRfZW52ZWxvcGUodm9pZCAqbWVzc2FnZV9jb250ZXh0LCAKIAkJCSAgICAgICBjb25z
dCBjaGFyICpmaWVsZCwKIAkJCSAgICAgICBjb25zdCBjaGFyICoqKmNvbnRlbnRzKTsKK3R5cGVk
ZWYgaW50IHNpZXZlX2dldF9zcGFtdGVzdCh2b2lkICptZXNzYWdlX2NvbnRleHQsIAorCQkJICAg
ICAgIGNvbnN0IGNoYXIgKip2YWwpOwordHlwZWRlZiBpbnQgc2lldmVfZ2V0X3ZpcnVzdGVzdCh2
b2lkICptZXNzYWdlX2NvbnRleHQsIAorCQkJICAgICAgIGNvbnN0IGNoYXIgKip2YWwpOwogCiB0
eXBlZGVmIHN0cnVjdCBzaWV2ZV92YWNhdGlvbiB7CiAgICAgaW50IG1pbl9yZXNwb25zZTsJCS8q
IDAgLT4gZGVmYXVsdHMgdG8gMyAqLwpAQCAtMTI5LDYgKzEzMyw4IEBACiBpbnQgc2lldmVfcmVn
aXN0ZXJfc2l6ZShzaWV2ZV9pbnRlcnBfdCAqaW50ZXJwLCBzaWV2ZV9nZXRfc2l6ZSAqZik7CiBp
bnQgc2lldmVfcmVnaXN0ZXJfaGVhZGVyKHNpZXZlX2ludGVycF90ICppbnRlcnAsIHNpZXZlX2dl
dF9oZWFkZXIgKmYpOwogaW50IHNpZXZlX3JlZ2lzdGVyX2VudmVsb3BlKHNpZXZlX2ludGVycF90
ICppbnRlcnAsIHNpZXZlX2dldF9lbnZlbG9wZSAqZik7CitpbnQgc2lldmVfcmVnaXN0ZXJfc3Bh
bXRlc3Qoc2lldmVfaW50ZXJwX3QgKmludGVycCwgc2lldmVfZ2V0X3NwYW10ZXN0ICpmKTsKK2lu
dCBzaWV2ZV9yZWdpc3Rlcl92aXJ1c3Rlc3Qoc2lldmVfaW50ZXJwX3QgKmludGVycCwgc2lldmVf
Z2V0X3ZpcnVzdGVzdCAqZik7CiAKIHR5cGVkZWYgaW50IHNpZXZlX3BhcnNlX2Vycm9yKGludCBs
aW5lbm8sIGNvbnN0IGNoYXIgKm1zZywgCiAJCQkgICAgICB2b2lkICppbnRlcnBfY29udGV4dCwK
SW5kZXg6IHNpZXZlYy5jCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3NpZXZlL3NpZXZl
Yy5jLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjUKZGlmZiAtdSAtcjEuNSBzaWV2ZWMuYwotLS0g
c2lldmVjLmMJMTEgTWFyIDIwMDQgMTU6MjM6MjAgLTAwMDAJMS41CisrKyBzaWV2ZWMuYwkxOCBB
dWcgMjAwNCAxNDowNjoxMiAtMDAwMApAQCAtMjY0LDYgKzI2NCwxOCBAQAogCXJldHVybiBUSU1T
SUVWRV9GQUlMOwogICAgIH0KIAorICAgIHJlcyA9IHNpZXZlX3JlZ2lzdGVyX3NwYW10ZXN0KGks
IChzaWV2ZV9nZXRfc3BhbXRlc3QgKikgJmZvbyk7CisgICAgaWYgKHJlcyAhPSBTSUVWRV9PSykg
eworCXN5c2xvZyhMT0dfRVJSLCAic2lldmVfcmVnaXN0ZXJfc3BhbXRlc3QoKSByZXR1cm5zICVk
XG4iLCByZXMpOworCXJldHVybiBUSU1TSUVWRV9GQUlMOworICAgIH0KKyAgCisgICAgcmVzID0g
c2lldmVfcmVnaXN0ZXJfdmlydXN0ZXN0KGksIChzaWV2ZV9nZXRfdmlydXN0ZXN0ICopICZmb28p
OworICAgIGlmIChyZXMgIT0gU0lFVkVfT0spIHsKKwlzeXNsb2coTE9HX0VSUiwgInNpZXZlX3Jl
Z2lzdGVyX3ZpcnVzdGVzdCgpIHJldHVybnMgJWRcbiIsIHJlcyk7CisJcmV0dXJuIFRJTVNJRVZF
X0ZBSUw7CisgICAgfQorICAKICAgICByZXdpbmQoc3RyZWFtKTsKIAogICAgICplcnJzdHIgPSAo
Y2hhciAqKSB4bWFsbG9jKDIwICogc2l6ZW9mKGNoYXIpKTsKSW5kZXg6IHRlc3QuYwo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS90ZXN0LmMsdgpyZXRyaWV2aW5nIHJldmlzaW9u
IDEuMjMKZGlmZiAtdSAtcjEuMjMgdGVzdC5jCi0tLSB0ZXN0LmMJMTYgSnVuIDIwMDQgMTM6NTA6
NDYgLTAwMDAJMS4yMworKysgdGVzdC5jCTE4IEF1ZyAyMDA0IDE0OjA2OjEyIC0wMDAwCkBAIC00
OCw2ICs0OCw3IEBACiAjaW5jbHVkZSAiY29tcGFyYXRvci5oIgogI2luY2x1ZGUgInRyZWUuaCIK
ICNpbmNsdWRlICJzaWV2ZS5oIgorI2luY2x1ZGUgImxpYnNwYW1jLmgiCiAKICNkZWZpbmUgSEVB
REVSQ0FDSEVTSVpFIDEwMTkKIApAQCAtMjg1LDYgKzI4NiwyNCBAQAogICAgIH0KIH0KIAoraW50
IGdldHNwYW10ZXN0KHZvaWQgKnYsIGNvbnN0IGNoYXIgKip2YWwpCit7CisgICAgbWVzc2FnZV9k
YXRhX3QgKm0gPSAobWVzc2FnZV9kYXRhX3QgKikgdjsKKworICAgICp2YWwgPSAiMzMiOworCisg
ICAgcmV0dXJuIFNJRVZFX09LOworfQorCitpbnQgZ2V0dmlydXN0ZXN0KHZvaWQgKnYsIGNvbnN0
IGNoYXIgKip2YWwpCit7CisgICAgbWVzc2FnZV9kYXRhX3QgKm0gPSAobWVzc2FnZV9kYXRhX3Qg
KikgdjsKKworICAgICp2YWwgPSAiMjIiOworCisgICAgcmV0dXJuIFNJRVZFX09LOworfQorCiBt
ZXNzYWdlX2RhdGFfdCAqbmV3X21zZyhGSUxFICptc2csIGludCBzaXplLCBjaGFyICpuYW1lKQog
ewogICAgIGludCBpOwpAQCAtNzcwLDYgKzc4OSwxOCBAQAogICAgIHJlcyA9IHNpZXZlX3JlZ2lz
dGVyX2VudmVsb3BlKGksICZnZXRlbnZlbG9wZSk7CiAgICAgaWYgKHJlcyAhPSBTSUVWRV9PSykg
ewogCXByaW50Zigic2lldmVfcmVnaXN0ZXJfZW52ZWxvcGUoKSByZXR1cm5zICVkXG4iLCByZXMp
OworCWV4aXQoMSk7CisgICAgfQorCisgICAgcmVzID0gc2lldmVfcmVnaXN0ZXJfc3BhbXRlc3Qo
aSwgJmdldHNwYW10ZXN0KTsKKyAgICBpZiAocmVzICE9IFNJRVZFX09LKSB7CisJcHJpbnRmKCJz
aWV2ZV9yZWdpc3Rlcl9zcGFtdGVzdCgpIHJldHVybnMgJWRcbiIsIHJlcyk7CisJZXhpdCgxKTsK
KyAgICB9CisKKyAgICByZXMgPSBzaWV2ZV9yZWdpc3Rlcl92aXJ1c3Rlc3QoaSwgJmdldHZpcnVz
dGVzdCk7CisgICAgaWYgKHJlcyAhPSBTSUVWRV9PSykgeworCXByaW50Zigic2lldmVfcmVnaXN0
ZXJfdmlydXN0ZXN0KCkgcmV0dXJucyAlZFxuIiwgcmVzKTsKIAlleGl0KDEpOwogICAgIH0KIApJ
bmRleDogdHJlZS5oCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3NpZXZlL3RyZWUuaCx2
CnJldHJpZXZpbmcgcmV2aXNpb24gMS44CmRpZmYgLXUgLXIxLjggdHJlZS5oCi0tLSB0cmVlLmgJ
MjIgT2N0IDIwMDMgMTg6NTA6MzAgLTAwMDAJMS44CisrKyB0cmVlLmgJMTggQXVnIDIwMDQgMTQ6
MDY6MTIgLTAwMDAKQEAgLTgxLDYgKzgxLDEzIEBACiAJICAgIGludCB0OyAvKiB0YWcgKi8KIAkg
ICAgaW50IG47IC8qIHBhcmFtICovCiAJfSBzejsKKwlzdHJ1Y3QgeyAvKiBpdCdzIGEgc3BhbSBv
ciB2aXJ1cyB0ZXN0ICovCisJICAgIGludCBjb21wdGFnOworCSAgICBjaGFyICogY29tcGFyYXRv
cjsKKwkgICAgaW50IHJlbGF0aW9uOworCSAgICB2b2lkICpjb21wcm9jazsKKwkgICAgY2hhciAq
czsKKwl9IHN2OwogICAgIH0gdTsKIH07CiAK
</data>        

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>344</attachid>
            <date>2005-04-26 16:58 EDT</date>
            <desc>New patch tar file</desc>
            <filename>sieve.tar</filename>
            <type>application/x-tar</type>
            <size>40960</size>
            <attacher>igor@ipass.net</attacher>
            
              <data encoding="base64">c2lldmUucGF0Y2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAwMDA2NDQAMDAwMDAw
MAAwMDAwMDAxADAwMDAwMDY2MzMwADEwMjMzNTI0MTY2ADAxMjA2MQAgMAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB1c3RhciAgAHJvb3QAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAb3RoZXIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJ
bmRleDogY29uZmlndXJlLmluCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL2N5cnVzL2Nv
bmZpZ3VyZS5pbix2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4yOTUKZGlmZiAtdSAtcjEuMjk1IGNv
bmZpZ3VyZS5pbgotLS0gY29uZmlndXJlLmluCTEyIEFwciAyMDA1IDIwOjA2OjAyIC0wMDAwCTEu
Mjk1CisrKyBjb25maWd1cmUuaW4JMjYgQXByIDIwMDUgMjA6NDM6MzMgLTAwMDAKQEAgLTIyMSw3
ICsyMjEsNyBAQAogCWZpKQogCiBpZiB0ZXN0ICIkc2lldmVkaXIiICE9ICJubyI7IHRoZW4KLQlT
SUVWRV9PQkpTPSJsbXRwX3NpZXZlLm8gc210cGNsaWVudC5vIgorCVNJRVZFX09CSlM9ImxtdHBf
c2lldmUubyBzbXRwY2xpZW50Lm8gc2lldmVfY2xhbWF2Lm8iCiAJQUNfU1VCU1QoU0lFVkVfT0JK
UykKIAlTSUVWRV9MSUJTPSIuLi8ke3NpZXZlZGlyfS9saWJzaWV2ZS5hIgogCUFDX1NVQlNUKFNJ
RVZFX0xJQlMpCkBAIC05NjksNiArOTY5LDcgQEAKIAogQ01VX0xJQldSQVAKIENNVV9VQ0RTTk1Q
CitDTVVfQ0xBTUFWCiAKICMgRmlndXJlIG91dCB3aGF0IGRpcmVjdG9yaWVzIHdlJ3JlIGxpbmtp
bmcgYWdhaW5zdC4KICMgTG90cyBvZiBmdW4gZm9yIHRoZSB3aG9sZSBmYW1pbHkuCj8gbGlic3Bh
bWMuYwo/IGxpYnNwYW1jLmgKPyB0ZXN0LnMKPyB0ZXN0LnNiCj8gdXRpbHMuYwo/IHV0aWxzLmgK
SW5kZXg6IGJjX2R1bXAuYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS9iY19k
dW1wLmMsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMgpkaWZmIC11IC1yMS4yIGJjX2R1bXAuYwot
LS0gYmNfZHVtcC5jCTIyIE9jdCAyMDAzIDE4OjAzOjIzIC0wMDAwCTEuMgorKysgYmNfZHVtcC5j
CTI2IEFwciAyMDA1IDIwOjQzOjQxIC0wMDAwCkBAIC0xNTAsMTYgKzE1MCwxNiBAQAogCQogICAg
IGNhc2UgQkNfQUREUkVTUzoKICAgICBjYXNlIEJDX0VOVkVMT1BFOgotCXByaW50ZigiJWQ6ICVz
IChcbiIsaXArKywKLQkgICAgICAgZC0+ZGF0YVtpcF0ub3AgPT0gQkNfQUREUkVTUyA/ICJBRERS
RVNTIiA6ICJFTlZFTE9QRSIpOworCXByaW50ZigiJWQ6ICVzIChcbiIsaXAsCisJICAgICAgIGQt
PmRhdGFbaXArK10ub3AgPT0gQkNfQUREUkVTUyA/ICJBRERSRVNTIiA6ICJFTlZFTE9QRSIpOwog
CXByaW50X3NwYWNlcyhsZXZlbCo0KTsKIAlpZiAoZC0+ZGF0YVtpcF0udmFsdWUgPT0gQl9DT1VO
VCB8fCBkLT5kYXRhW2lwXS52YWx1ZSA9PSBCX1ZBTFVFKQogCXsKIAkgICAgcHJpbnRmKCIgICAg
ICBNQVRDSDolZCBSRUxBVElPTjogJWQgQ09NUDogJWQgVFlQRTogJWQgSEVBREVSUzpcbiIsIAot
CQkgICBkLT5kYXRhW2lwXS52YWx1ZSwgZC0+ZGF0YVtpcCsxXS52YWx1ZSwgZC0+ZGF0YVtpcCsy
XS52YWx1ZSwgZC0+ZGF0YVtpcCszXS52YWx1ZSk7CisJCSAgIGQtPmRhdGFbaXBdLnZhbHVlLCBk
LT5kYXRhW2lwKzFdLnZhbHVlLCBkLT5kYXRhW2lwKzJdLnZhbHVlLCBkLT5kYXRhW2lwKzNdLnN0
cik7CiAJfSBlbHNlIHsKIAkgICAgcHJpbnRmKCIgICAgICBNQVRDSDolZCBDT01QOiVkIFRZUEU6
JWQgSEVBREVSUzpcbiIsCi0JCSAgIGQtPmRhdGFbaXBdLnZhbHVlLGQtPmRhdGFbaXArMV0udmFs
dWUsZC0+ZGF0YVtpcCszXS52YWx1ZSk7CisJCSAgIGQtPmRhdGFbaXBdLnZhbHVlLGQtPmRhdGFb
aXArMV0udmFsdWUsZC0+ZGF0YVtpcCszXS5zdHIpOwogCX0KIAlpcCs9NDsKIAlpcCA9IGR1bXBf
c2woZCxpcCxsZXZlbCk7IGlwKys7CkBAIC0xNjgsNiArMTY4LDE2IEBACiAJaXAgPSBkdW1wX3Ns
KGQsaXAsbGV2ZWwpOwogCWJyZWFrOwogCisgICAgY2FzZSBCQ19WSVJVU1RFU1Q6CisgICAgY2Fz
ZSBCQ19TUEFNVEVTVDoKKwlwcmludGYoIiVkOiAlcyhcbiIsaXAsCisJICAgICAgIChkLT5kYXRh
W2lwKytdLm9wID09IEJDX1NQQU1URVNUKSA/ICJTUEFNVEVTVCIgOiAiVklSVVNURVNUIik7CisJ
cHJpbnRfc3BhY2VzKGxldmVsKjQpOworCXByaW50ZigiICAgICAgTUFUQ0g6ICVkICBSRUxBVElP
TjogJWQgIENPTVA6ICVkIFNUUklORzogXCIlc1wiXG4iLCAKKwkgICBkLT5kYXRhW2lwXS52YWx1
ZSwgZC0+ZGF0YVtpcCsxXS52YWx1ZSxkLT5kYXRhW2lwKzJdLnZhbHVlLGQtPmRhdGFbaXArNF0u
c3RyKTsKKwlpcCs9NDsKKwlicmVhazsKKwkKICAgICBkZWZhdWx0OgogCXByaW50ZigiJWQ6IFRF
U1QoJWQpXG4iLGlwLGQtPmRhdGFbaXBdLm9wKTsKIAlicmVhazsKSW5kZXg6IGJjX2VtaXQuYwo9
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS9iY19lbWl0LmMsdgpyZXRyaWV2aW5n
IHJldmlzaW9uIDEuMgpkaWZmIC11IC1yMS4yIGJjX2VtaXQuYwotLS0gYmNfZW1pdC5jCTIyIE9j
dCAyMDAzIDE4OjAzOjI0IC0wMDAwCTEuMgorKysgYmNfZW1pdC5jCTI2IEFwciAyMDA1IDIwOjQz
OjQxIC0wMDAwCkBAIC0yOTksNiArMjk5LDQzIEBACiAJYnJlYWs7CiAgICAgfQogICAgIAorICAg
IGNhc2UgQkNfVklSVVNURVNUOgorICAgIGNhc2UgQkNfU1BBTVRFU1Q6CisgICAgeworCWludCBy
ZXQ7CisJaW50IGxlbjsKKwkvKiBEcm9wIG1hdGNoIHR5cGUgKi8KKwlpZih3cml0ZV9pbnQoZmQs
IGJjLT5kYXRhWygqY29kZXApXS52YWx1ZSkgPT0gLTEpCisJICAgIHJldHVybiAtMTsKKwl3cm90
ZSArPSBzaXplb2YoaW50KTsKKwkoKmNvZGVwKSsrOworCS8qZHJvcCBjb21wYXJhdG9yICovCisJ
aWYod3JpdGVfaW50KGZkLCBiYy0+ZGF0YVsoKmNvZGVwKV0udmFsdWUpID09IC0xKQorCSAgICBy
ZXR1cm4gLTE7CisJd3JvdGUgKz0gc2l6ZW9mKGludCk7CisJKCpjb2RlcCkrKzsgICAgCisJLypu
b3cgZHJvcCByZWxhdGlvbiovCisJaWYod3JpdGVfaW50KGZkLCBiYy0+ZGF0YVsoKmNvZGVwKV0u
dmFsdWUpID09IC0xKQorCSAgICByZXR1cm4gLTE7CisJd3JvdGUgKz0gc2l6ZW9mKGludCk7CisJ
KCpjb2RlcCkrKzsKKworCS8qIE5vdyBkcm9wIHN0cmluZyAqLworCWxlbiA9IGJjLT5kYXRhWygq
Y29kZXApXS5sZW47CisJaWYod3JpdGVfaW50KGZkLCBsZW4pID09IC0xKSByZXR1cm4gLTE7CisJ
d3JvdGUgKz0gc2l6ZW9mKGludCk7CisJKCpjb2RlcCkrKzsKKwlpZih3cml0ZShmZCwgYmMtPmRh
dGFbKCpjb2RlcCldLnN0ciwgbGVuKSA9PSAtMSkgcmV0dXJuIC0xOworCXdyb3RlICs9IGxlbjsK
KworCXJldCA9IGFsaWduX3N0cmluZyhmZCxsZW4pOworCWlmKHJldCA9PSAtMSkgcmV0dXJuIC0x
OworCXdyb3RlICs9IHJldDsKKworCSgqY29kZXApKys7CisJYnJlYWs7CisgICAgfQorICAgIAog
ICAgIGRlZmF1bHQ6CiAJLyogVW5rbm93biB0ZXN0Y29kZT8gKi8KIAlyZXR1cm4gLTE7CkluZGV4
OiBiY19ldmFsLmMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc2lldmUvYmNfZXZhbC5j
LHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjcKZGlmZiAtdSAtcjEuNyBiY19ldmFsLmMKLS0tIGJj
X2V2YWwuYwkyOSBKdWwgMjAwNCAxNTo0MjozMSAtMDAwMAkxLjcKKysrIGJjX2V2YWwuYwkyNiBB
cHIgMjAwNSAyMDo0Mzo0MSAtMDAwMApAQCAtMzEyLDYgKzMxMiw3IEBACiAgICAgaW50IGxpc3Rf
bGVuOyAvKiBmb3IgYWxsb2YvYW55b2YvZXhpc3RzICovCiAgICAgaW50IGxpc3RfZW5kOyAvKiBm
b3IgYWxsb2YvYW55b2YvZXhpc3RzICovCiAgICAgaW50IGFkZHJlc3M9MDsvKnRvIGRpZmZlcmVu
dGlhdGUgYmV0d2VlbiBhZGRyZXNzIGFuZCBlbnZlbG9wZSovCisgICAgaW50IHZpcnVzPTA7Lyp0
byBkaWZmZXJlbnRpYXRlIGJldHdlZW4gc3BhbSBhbmQgdmlydXMqLwogICAgIGNvbXBhcmF0b3Jf
dCAqIGNvbXA9TlVMTDsKICAgICB2b2lkICogY29tcHJvY2s9TlVMTDsKICAgICBpbnQgb3A9IG50
b2hsKGJjW2ldLm9wKTsKQEAgLTcwNyw2ICs3MDgsODIgQEAKIAogCS8qIFVwZGF0ZSBJUCAqLwog
CWk9KG50b2hsKGJjW2RhdGFpKzFdLnZhbHVlKS80KTsKKwkKKwlicmVhazsKKyAgICB9CisgICAg
Y2FzZSBCQ19WSVJVU1RFU1Q6CisgICAgCXZpcnVzPTE7CisgICAgY2FzZSBCQ19TUEFNVEVTVDov
KjEwKi8KKyAgICB7CisJY29uc3QgY2hhciAqdmFsOworCisJY29uc3QgY2hhciAqZGF0YV92YWw9
TlVMTDsKKworCWludCBtYXRjaD1udG9obChiY1tpKzFdLnZhbHVlKTsKKwlpbnQgcmVsYXRpb249
bnRvaGwoYmNbaSsyXS52YWx1ZSk7CisJaW50IGNvbXBhcmF0b3I9bnRvaGwoYmNbaSszXS52YWx1
ZSk7CisJaW50IGlzUmVnID0gKG1hdGNoPT1CX1JFR0VYKTsKKwlpbnQgY3RhZyA9IDA7CisJcmVn
ZXhfdCAqcmVnOworCWludCByYzsKKwljaGFyIGVycmJ1ZlsxMDBdOyAvKiBCYXNpY2FsbHkgdW51
c2VkLCByZWdleHBzIHRlc3RlZCBhdCBjb21waWxlICovIAorCisJaSA9IHVud3JhcF9zdHJpbmco
YmMsIGkrNCwgJmRhdGFfdmFsLCBOVUxMKTsKKworCS8qIHNldCB1cCB2YXJpYWJsZXMgbmVlZGVk
IGZvciBjb21waWxpbmcgcmVnZXggKi8KKwlpZiAoaXNSZWcpCisJeworCSAgICBpZiAoY29tcGFy
YXRvcj09IEJfQVNDSUlDQVNFTUFQKQorCSAgICB7CisJCWN0YWc9IFJFR19FWFRFTkRFRCB8IFJF
R19OT1NVQiB8IFJFR19JQ0FTRTsKKwkgICAgfQorCSAgICBlbHNlCisJICAgIHsKKwkJY3RhZz0g
UkVHX0VYVEVOREVEIHwgUkVHX05PU1VCOworCSAgICB9CisgICAgIAorCX0KKwkKKwkvKmZpbmQg
dGhlIGNvcnJlY3QgY29tcGFyYXRvciBmY24qLworCWNvbXA9bG9va3VwX2NvbXAoY29tcGFyYXRv
ciwgbWF0Y2gsIHJlbGF0aW9uLCAmY29tcHJvY2spOworCisJaWYoIWNvbXApIHsKKwkgICAgcmVz
ID0gU0lFVkVfUlVOX0VSUk9SOworCSAgICBicmVhazsKKwl9CisKKwlpZiAodmlydXMpCisJICAg
IHJjID0gaW50ZXJwLT5nZXR2aXJ1c3Rlc3QobSwgJnZhbCk7CisJZWxzZQorCSAgICByYyA9IGlu
dGVycC0+Z2V0c3BhbXRlc3QobSwgJnZhbCk7CisKKwlpZiAocmMgIT0gU0lFVkVfT0spIHsKKwkg
ICAgcmVzID0gLTE7CisJICAgIGdvdG8gYWxsZG9uZTsKKwl9CisKKyNpZiBWRVJCT1NFCisJcHJp
bnRmICgidmFsICVzIG1hdGNoICVkIHJlbGF0aW9uICVkIGNvbXBhcmF0b3IgJWQgZGF0YV92YWwg
JXMgaT0gJWRcbiIsIHZhbCwgbWF0Y2ggLCByZWxhdGlvbiwgY29tcGFyYXRvciwgZGF0YV92YWws
IGkpOworI2VuZGlmCisJICAgIAorCWlmIChpc1JlZykgeworCSAgICByZWc9IGJjX2NvbXBpbGVf
cmVnZXgoZGF0YV92YWwsIGN0YWcsIGVycmJ1ZiwKKwkJCQkgIHNpemVvZihlcnJidWYpKTsKKwkg
ICAgaWYgKCFyZWcpCisJICAgIHsKKwkJLyogT29wcyAqLworCQlyZXM9LTE7CisJCWdvdG8gYWxs
ZG9uZTsKKwkgICAgfQorCSAgICAKKwkgICAgcmVzIHw9IGNvbXAodmFsLCAoY29uc3QgY2hhciAq
KXJlZywKKwkJCWNvbXByb2NrKTsKKwkgICAgZnJlZShyZWcpOworCX0gZWxzZSB7CisJICAgIHJl
cyB8PSBjb21wKHZhbCwgZGF0YV92YWwsIGNvbXByb2NrKTsKKwl9CisJCisJLyogVXBkYXRlIElQ
ICovCiAJCiAJYnJlYWs7CiAgICAgfQpJbmRleDogYmNfZ2VuZXJhdGUuYwo9PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJD
UyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS9iY19nZW5lcmF0ZS5jLHYKcmV0cmlldmluZyByZXZpc2lv
biAxLjMKZGlmZiAtdSAtcjEuMyBiY19nZW5lcmF0ZS5jCi0tLSBiY19nZW5lcmF0ZS5jCTExIEF1
ZyAyMDA0IDE4OjQzOjE1IC0wMDAwCTEuMworKysgYmNfZ2VuZXJhdGUuYwkyNiBBcHIgMjAwNSAy
MDo0Mzo0MSAtMDAwMApAQCAtMzU1LDYgKzM1NSwyOCBAQAogCWlmIChjb2RlcCA9PSAtMSkgcmV0
dXJuIC0xOwogICAgICAKIAlicmVhazsKKyAgICBjYXNlIFZJUlVTVEVTVDoKKyAgICBjYXNlIFNQ
QU1URVNUOgorCS8qIChCQ19TUEFNVEVTVCB8IEJDX1ZJUlVTVEVTVCkgeyBjOiBjb21wYXJhdG9y
IH0gKCBTVFJJTkcgKQorCSovCisgICAgICAKKwlpZighYXRsZWFzdChyZXR2YWwsY29kZXAgKyAx
KSkgcmV0dXJuIC0xOworCisJcmV0dmFsLT5kYXRhW2NvZGVwKytdLm9wID0gKHQtPnR5cGUgPT0g
U1BBTVRFU1QpCisJICAgID8gQkNfU1BBTVRFU1QgOiBCQ19WSVJVU1RFU1Q7CisgICAgICAKKwkv
KiBjb21wYXJhdG9yICovCisJY29kZXAgPSBiY19jb21wYXJhdG9yX2dlbmVyYXRlKGNvZGVwLCBy
ZXR2YWwsCisJCQkJICAgICAgIHQtPnUuc3YuY29tcHRhZywKKwkJCQkgICAgICAgdC0+dS5zdi5y
ZWxhdGlvbiwKKwkJCQkgICAgICAgdC0+dS5zdi5jb21wYXJhdG9yKTsKKwlpZiAoY29kZXAgPT0g
LTEpIHJldHVybiAtMTsKKworCWlmKCFhdGxlYXN0KHJldHZhbCxjb2RlcCsyKSkgcmV0dXJuIC0x
OworICAgICAgCisJcmV0dmFsLT5kYXRhW2NvZGVwKytdLmxlbiA9IHN0cmxlbih0LT51LnN2LnMp
OworCXJldHZhbC0+ZGF0YVtjb2RlcCsrXS5zdHIgPSB0LT51LnN2LnM7CisJYnJlYWs7CiAgICAg
ZGVmYXVsdDoKIAlyZXR1cm4gLTE7CiAgICAgICAKSW5kZXg6IGJ5dGVjb2RlLmgKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQpSQ1MgZmlsZTogL2N2cy9zcmMvc2lldmUvYnl0ZWNvZGUuaCx2CnJldHJpZXZpbmcgcmV2aXNp
b24gMS4zCmRpZmYgLXUgLXIxLjMgYnl0ZWNvZGUuaAotLS0gYnl0ZWNvZGUuaAkyMiBKdW4gMjAw
NCAxNjo1NDo1NCAtMDAwMAkxLjMKKysrIGJ5dGVjb2RlLmgJMjYgQXByIDIwMDUgMjA6NDM6NDEg
LTAwMDAKQEAgLTExNiw3ICsxMTYsOSBAQAogICAgIEJDX0FMTE9GLAogICAgIEJDX0FERFJFU1Ms
CiAgICAgQkNfRU5WRUxPUEUsICAvKiByZXF1aXJlIGVudmVsb3BlKi8KLSAgICBCQ19IRUFERVIg
ICAgCisgICAgQkNfSEVBREVSLAorICAgIEJDX1NQQU1URVNULCAvKiByZXF1aXJlIHNwYW10ZXN0
ICovCisgICAgQkNfVklSVVNURVNUIC8qIHJlcXVpcmUgdmlydXN0ZXN0ICovCiB9OwogCiAvKiBj
dXJyZW50bHkgb25lIGVudW0gc28gYXMgdG8gaGVscCBkZXRlcm1pbmUgd2hlcmUgdmFsdWVzIGFy
ZSBiZWluZyBtaXN1c2VkLgpJbmRleDogaW50ZXJwLmMKPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2
cy9zcmMvc2lldmUvaW50ZXJwLmMsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjMKZGlmZiAtdSAt
cjEuMjMgaW50ZXJwLmMKLS0tIGludGVycC5jCTcgTm92IDIwMDQgMTQ6NTM6MTkgLTAwMDAJMS4y
MworKysgaW50ZXJwLmMJMjYgQXByIDIwMDUgMjA6NDM6NDEgLTAwMDAKQEAgLTU3LDYgKzU3LDgg
QEAKICAgICBpLT5nZXRzaXplID0gTlVMTDsKICAgICBpLT5nZXRoZWFkZXIgPSBOVUxMOwogICAg
IGktPmdldGVudmVsb3BlID0gTlVMTDsKKyAgICBpLT5nZXRzcGFtdGVzdCA9IE5VTEw7CisgICAg
aS0+Z2V0dmlydXN0ZXN0ID0gTlVMTDsKICAgICBpLT52YWNhdGlvbiA9IE5VTEw7CiAgICAgaS0+
bm90aWZ5ID0gTlVMTDsKIApAQCAtNzEsNiArNzMsNyBAQAogCiBzdGF0aWMgY29uc3QgY2hhciAq
c2lldmVfZXh0ZW5zaW9ucyA9ICJmaWxlaW50byByZWplY3QgZW52ZWxvcGUgdmFjYXRpb24iCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIgaW1hcGZsYWdzIG5vdGlmeSBz
dWJhZGRyZXNzIHJlbGF0aW9uYWwiCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICIgc3BhbXRlc3QgdmlydXN0ZXN0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAiIGNvbXBhcmF0b3ItaTthc2NpaS1udW1lcmljIgogI2lmZGVmIEVOQUJMRV9SRUdF
WAogIiByZWdleCI7CkBAIC0xNjEsNiArMTY0LDE4IEBACiBpbnQgc2lldmVfcmVnaXN0ZXJfZW52
ZWxvcGUoc2lldmVfaW50ZXJwX3QgKmludGVycCwgc2lldmVfZ2V0X2VudmVsb3BlICpmKQogewog
ICAgIGludGVycC0+Z2V0ZW52ZWxvcGUgPSBmOworICAgIHJldHVybiBTSUVWRV9PSzsKK30KKwor
aW50IHNpZXZlX3JlZ2lzdGVyX3NwYW10ZXN0KHNpZXZlX2ludGVycF90ICppbnRlcnAsIHNpZXZl
X2dldF9zcGFtdGVzdCAqZikKK3sKKyAgICBpbnRlcnAtPmdldHNwYW10ZXN0ID0gZjsKKyAgICBy
ZXR1cm4gU0lFVkVfT0s7Cit9CisKK2ludCBzaWV2ZV9yZWdpc3Rlcl92aXJ1c3Rlc3Qoc2lldmVf
aW50ZXJwX3QgKmludGVycCwgc2lldmVfZ2V0X3ZpcnVzdGVzdCAqZikKK3sKKyAgICBpbnRlcnAt
PmdldHZpcnVzdGVzdCA9IGY7CiAgICAgcmV0dXJuIFNJRVZFX09LOwogfQogCkluZGV4OiBpbnRl
cnAuaAo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS9pbnRlcnAuaCx2CnJldHJp
ZXZpbmcgcmV2aXNpb24gMS43CmRpZmYgLXUgLXIxLjcgaW50ZXJwLmgKLS0tIGludGVycC5oCTEw
IE1hciAyMDAyIDAyOjU4OjA5IC0wMDAwCTEuNworKysgaW50ZXJwLmgJMjYgQXByIDIwMDUgMjA6
NDM6NDEgLTAwMDAKQEAgLTM5LDYgKzM5LDggQEAKICAgICBzaWV2ZV9nZXRfc2l6ZSAqZ2V0c2l6
ZTsKICAgICBzaWV2ZV9nZXRfaGVhZGVyICpnZXRoZWFkZXI7CiAgICAgc2lldmVfZ2V0X2VudmVs
b3BlICpnZXRlbnZlbG9wZTsKKyAgICBzaWV2ZV9nZXRfc3BhbXRlc3QgKmdldHNwYW10ZXN0Owor
ICAgIHNpZXZlX2dldF92aXJ1c3Rlc3QgKmdldHZpcnVzdGVzdDsKIAogICAgIHNpZXZlX3BhcnNl
X2Vycm9yICplcnI7CiAKSW5kZXg6IHNjcmlwdC5jCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMv
c3JjL3NpZXZlL3NjcmlwdC5jLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjYyCmRpZmYgLXUgLXIx
LjYyIHNjcmlwdC5jCi0tLSBzY3JpcHQuYwkxNSBKdWwgMjAwNCAxNTowMjo1MSAtMDAwMAkxLjYy
CisrKyBzY3JpcHQuYwkyNiBBcHIgMjAwNSAyMDo0Mzo0MSAtMDAwMApAQCAtMTE0LDYgKzExNCwy
MCBAQAogICAgIH0gZWxzZSBpZiAoIXN0cmNtcCgiY29tcGFyYXRvci1pO2FzY2lpLW51bWVyaWMi
LCByZXEpKSB7CiAJcy0+c3VwcG9ydC5pX2FzY2lpX251bWVyaWMgPSAxOwogCXJldHVybiAxOwor
ICAgIH0gZWxzZSBpZiAoIXN0cmNtcCgic3BhbXRlc3QiLCByZXEpKSB7CisJaWYgKHMtPmludGVy
cC5nZXRzcGFtdGVzdCkgeworICAgICAgICAgICAgcy0+c3VwcG9ydC5zcGFtdGVzdCA9IDE7Cisg
ICAgICAgICAgICByZXR1cm4gMTsKKwl9IGVsc2UgeworCSAgICByZXR1cm4gMDsKKwl9CisgICAg
fSBlbHNlIGlmICghc3RyY21wKCJ2aXJ1c3Rlc3QiLCByZXEpKSB7CisJaWYgKHMtPmludGVycC5n
ZXRzcGFtdGVzdCkgeworICAgICAgICAgICAgcy0+c3VwcG9ydC52aXJ1c3Rlc3QgPSAxOworICAg
ICAgICAgICAgcmV0dXJuIDE7CisJfSBlbHNlIHsKKwkgICAgcmV0dXJuIDA7CisJfQogICAgIH0K
ICAgICByZXR1cm4gMDsKIH0KSW5kZXg6IHNjcmlwdC5oCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9j
dnMvc3JjL3NpZXZlL3NjcmlwdC5oLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjExCmRpZmYgLXUg
LXIxLjExIHNjcmlwdC5oCi0tLSBzY3JpcHQuaAkyMiBPY3QgMjAwMyAxODo1MDozMCAtMDAwMAkx
LjExCisrKyBzY3JpcHQuaAkyNiBBcHIgMjAwNSAyMDo0Mzo0MSAtMDAwMApAQCAtNDksNiArNDks
OCBAQAogCWludCBzdWJhZGRyZXNzICAgICA6IDE7CiAJaW50IHJlbGF0aW9uYWwgICAgIDogMTsK
IAlpbnQgaV9hc2NpaV9udW1lcmljOiAxOworCWludCBzcGFtdGVzdCAgICAgICA6IDE7CisJaW50
IHZpcnVzdGVzdCAgICAgIDogMTsKICAgICB9IHN1cHBvcnQ7CiAKICAgICB2b2lkICpzY3JpcHRf
Y29udGV4dDsKSW5kZXg6IHNpZXZlLWxleC5sCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3Jj
L3NpZXZlL3NpZXZlLWxleC5sLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjIwCmRpZmYgLXUgLXIx
LjIwIHNpZXZlLWxleC5sCi0tLSBzaWV2ZS1sZXgubAk3IEp1biAyMDAyIDIwOjA0OjQ5IC0wMDAw
CTEuMjAKKysrIHNpZXZlLWxleC5sCTI2IEFwciAyMDA1IDIwOjQzOjQxIC0wMDAwCkBAIC04OSw2
ICs4OSw4IEBACiA8SU5JVElBTD5hZGRyZXNzCXJldHVybiBBRERSRVNTOwogPElOSVRJQUw+ZW52
ZWxvcGUJcmV0dXJuIEVOVkVMT1BFOwogPElOSVRJQUw+aGVhZGVyCQlyZXR1cm4gSEVBREVSOwor
PElOSVRJQUw+c3BhbXRlc3QJcmV0dXJuIFNQQU1URVNUOworPElOSVRJQUw+dmlydXN0ZXN0CXJl
dHVybiBWSVJVU1RFU1Q7CiA8SU5JVElBTD5ub3QJCXJldHVybiBOT1Q7CiA8SU5JVElBTD5zaXpl
CQlyZXR1cm4gU0laRTsKIDxJTklUSUFMPnJlamVjdAkJcmV0dXJuIFJFSkNUOwpJbmRleDogc2ll
dmUueQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zaWV2ZS9zaWV2ZS55LHYKcmV0cmll
dmluZyByZXZpc2lvbiAxLjMyCmRpZmYgLXUgLXIxLjMyIHNpZXZlLnkKLS0tIHNpZXZlLnkJMjkg
SnVuIDIwMDQgMjA6Mjk6MjYgLTAwMDAJMS4zMgorKysgc2lldmUueQkyNiBBcHIgMjAwNSAyMDo0
Mzo0MiAtMDAwMApAQCAtODIsNiArODIsMTIgQEAKICAgICBpbnQgcHJpb3JpdHk7CiB9OwogCitz
dHJ1Y3Qgc3Z0YWdzIHsKKyAgICBpbnQgY29tcHRhZzsKKyAgICBjaGFyICpjb21wYXJhdG9yOwor
ICAgIGludCByZWxhdGlvbjsKK307CisKIHN0YXRpYyBjb21tYW5kbGlzdF90ICpyZXQ7CiBzdGF0
aWMgc2lldmVfc2NyaXB0X3QgKnBhcnNlX3NjcmlwdDsKIHN0YXRpYyBpbnQgY2hlY2tfcmVxcyhz
dHJpbmdsaXN0X3QgKnNsKTsKQEAgLTg5LDYgKzk1LDcgQEAKIAkJCSAgICAgc3RyaW5nbGlzdF90
ICpzbCwgc3RyaW5nbGlzdF90ICpwbCk7CiBzdGF0aWMgdGVzdF90ICpidWlsZF9oZWFkZXIoaW50
IHQsIHN0cnVjdCBodGFncyAqaCwKIAkJCSAgICBzdHJpbmdsaXN0X3QgKnNsLCBzdHJpbmdsaXN0
X3QgKnBsKTsKK3N0YXRpYyB0ZXN0X3QgKmJ1aWxkX3N2dGVzdChpbnQgdCwgc3RydWN0IHN2dGFn
cyAqc3YsIGNoYXIgKnMpOwogc3RhdGljIGNvbW1hbmRsaXN0X3QgKmJ1aWxkX3ZhY2F0aW9uKGlu
dCB0LCBzdHJ1Y3QgdnRhZ3MgKmgsIGNoYXIgKnMpOwogc3RhdGljIGNvbW1hbmRsaXN0X3QgKmJ1
aWxkX25vdGlmeShpbnQgdCwgc3RydWN0IG50YWdzICpuKTsKIHN0YXRpYyBjb21tYW5kbGlzdF90
ICpidWlsZF9kZW5vdGlmeShpbnQgdCwgc3RydWN0IGR0YWdzICpuKTsKQEAgLTEwNyw2ICsxMTQs
OSBAQAogc3RhdGljIHN0cnVjdCBkdGFncyAqbmV3X2R0YWdzKHZvaWQpOwogc3RhdGljIHN0cnVj
dCBkdGFncyAqY2Fub25fZHRhZ3Moc3RydWN0IGR0YWdzICpkKTsKIHN0YXRpYyB2b2lkIGZyZWVf
ZHRhZ3Moc3RydWN0IGR0YWdzICpkKTsKK3N0YXRpYyBzdHJ1Y3Qgc3Z0YWdzICpuZXdfc3Z0YWdz
KHZvaWQpOworc3RhdGljIHN0cnVjdCBzdnRhZ3MgKmNhbm9uX3N2dGFncyhzdHJ1Y3Qgc3Z0YWdz
ICpzdik7CitzdGF0aWMgdm9pZCBmcmVlX3N2dGFncyhzdHJ1Y3Qgc3Z0YWdzICpzdik7CiAKIHN0
YXRpYyBpbnQgdmVyaWZ5X3N0cmluZ2xpc3Qoc3RyaW5nbGlzdF90ICpzbCwgaW50ICgqdmVyaWZ5
KShjaGFyICopKTsKIHN0YXRpYyBpbnQgdmVyaWZ5X21haWxib3goY2hhciAqcyk7CkBAIC0xMTks
NiArMTI5LDcgQEAKICNpZmRlZiBFTkFCTEVfUkVHRVgKIHN0YXRpYyBpbnQgdmVyaWZ5X3JlZ2V4
KGNoYXIgKnMsIGludCBjZmxhZ3MpOwogc3RhdGljIGludCB2ZXJpZnlfcmVnZXhzKHN0cmluZ2xp
c3RfdCAqc2wsIGNoYXIgKmNvbXApOworc3RhdGljIGludCB2ZXJpZnlfcmVnZXhzdHJpbmcoY2hh
ciAqcywgY2hhciAqY29tcCk7CiAjZW5kaWYKIHN0YXRpYyBpbnQgdmVyaWZ5X3V0ZjgoY2hhciAq
cyk7CiAKQEAgLTE0MSw2ICsxNTIsNyBAQAogICAgIHN0cnVjdCBodGFncyAqaHRhZzsKICAgICBz
dHJ1Y3QgbnRhZ3MgKm50YWc7CiAgICAgc3RydWN0IGR0YWdzICpkdGFnOworICAgIHN0cnVjdCBz
dnRhZ3MgKnN2dGFnOwogfQogCiAldG9rZW4gPG52YWw+IE5VTUJFUgpAQCAtMTQ5LDcgKzE2MSw3
IEBACiAldG9rZW4gUkVKQ1QgRklMRUlOVE8gUkVESVJFQ1QgS0VFUCBTVE9QIERJU0NBUkQgVkFD
QVRJT04gUkVRVUlSRQogJXRva2VuIFNFVEZMQUcgQURERkxBRyBSRU1PVkVGTEFHIE1BUksgVU5N
QVJLCiAldG9rZW4gTk9USUZZIERFTk9USUZZCi0ldG9rZW4gQU5ZT0YgQUxMT0YgRVhJU1RTIFNG
QUxTRSBTVFJVRSBIRUFERVIgTk9UIFNJWkUgQUREUkVTUyBFTlZFTE9QRQorJXRva2VuIEFOWU9G
IEFMTE9GIEVYSVNUUyBTRkFMU0UgU1RSVUUgSEVBREVSIE5PVCBTSVpFIEFERFJFU1MgRU5WRUxP
UEUgU1BBTVRFU1QgVklSVVNURVNUCiAldG9rZW4gQ09NUEFSQVRPUiBJUyBDT05UQUlOUyBNQVRD
SEVTIFJFR0VYIENPVU5UIFZBTFVFIE9WRVIgVU5ERVIKICV0b2tlbiBHVCBHRSBMVCBMRSBFUSBO
RQogJXRva2VuIEFMTCBMT0NBTFBBUlQgRE9NQUlOIFVTRVIgREVUQUlMCkBAIC0xNTksNyArMTcx
LDcgQEAKICV0eXBlIDxjbD4gY29tbWFuZHMgY29tbWFuZCBhY3Rpb24gZWxzaWYgYmxvY2sKICV0
eXBlIDxzbD4gc3RyaW5nbGlzdCBzdHJpbmdzCiAldHlwZSA8dGVzdD4gdGVzdAotJXR5cGUgPG52
YWw+IGNvbXB0YWcgcmVsY29tcCBzaXpldGFnIGFkZHJwYXJ0dGFnIGFkZHJvcmVudgorJXR5cGUg
PG52YWw+IGNvbXB0YWcgcmVsY29tcCBzaXpldGFnIGFkZHJwYXJ0dGFnIGFkZHJvcmVudiBzcGFt
b3J2aXJ1cwogJXR5cGUgPHRlc3RsPiB0ZXN0bGlzdCB0ZXN0cwogJXR5cGUgPGh0YWc+IGh0YWdz
CiAldHlwZSA8YWV0YWc+IGFldGFncwpAQCAtMTY3LDYgKzE3OSw3IEBACiAldHlwZSA8bnRhZz4g
bnRhZ3MKICV0eXBlIDxkdGFnPiBkdGFncwogJXR5cGUgPG52YWw+IHByaW9yaXR5CisldHlwZSA8
c3Z0YWc+IHN2dGFncwogCiAlJQogCkBAIC00MDUsOCArNDE4LDYgQEAKIAkJCQkJIHl5ZXJyb3Io
InVuYWJsZSB0byBmaW5kIGEgY29tcGF0aWJsZSBjb21wYXJhdG9yIik7CiAJCQkJCSBZWUVSUk9S
OyB9IAogCQkJCSB9Ci0KLQogICAgICAgICB8IGFkZHJvcmVudiBhZXRhZ3Mgc3RyaW5nbGlzdCBz
dHJpbmdsaXN0CiAJCQkJIHsgCiAJCQkJICAgICBpZiAoKCQxID09IEFERFJFU1MpICYmCkBAIC00
MjgsNiArNDM5LDIxIEBACiAJCQkJCSB5eWVycm9yKCJ1bmFibGUgdG8gZmluZCBhIGNvbXBhdGli
bGUgY29tcGFyYXRvciIpOwogCQkJCQkgWVlFUlJPUjsgfSAKIAkJCQkgfQorCXwgc3BhbW9ydmly
dXMgc3Z0YWdzIFNUUklORworCQkJCXsgCisJCQkJICAgICAkMiA9IGNhbm9uX3N2dGFncygkMik7
CisjaWZkZWYgRU5BQkxFX1JFR0VYCisJCQkJICAgICBpZiAoJDItPmNvbXB0YWcgPT0gUkVHRVgp
CisJCQkJICAgICB7CisJCQkJCSBpZiAoISh2ZXJpZnlfcmVnZXhzdHJpbmcoJDMsICQyLT5jb21w
YXJhdG9yKSkpCisJCQkJCSB7IFlZRVJST1I7IH0KKwkJCQkgICAgIH0KKyNlbmRpZgorCQkJCSAg
ICAgJCQgPSBidWlsZF9zdnRlc3QoJDEsICQyLCAkMyk7CisJCQkJICAgICBpZiAoJCQgPT0gTlVM
TCkgeworCQkJCQkgeXllcnJvcigidW5hYmxlIHRvIGZpbmQgYSBjb21wYXRpYmxlIGNvbXBhcmF0
b3IiKTsKKwkJCQkJIFlZRVJST1I7IH0gCisJCQkJfQogCiAJfCBOT1QgdGVzdAkJIHsgJCQgPSBu
ZXdfdGVzdChOT1QpOyAkJC0+dS50ID0gJDI7IH0KIAl8IFNJWkUgc2l6ZXRhZyBOVU1CRVIgICAg
eyAkJCA9IG5ld190ZXN0KFNJWkUpOyAkJC0+dS5zei50ID0gJDI7CkBAIC00NDIsNiArNDY4LDE1
IEBACiAJICAgICAgICAgICAgICAgICAgICAgICAgIH0KIAogCTsKK3NwYW1vcnZpcnVzOiBTUEFN
VEVTVAkJIHtpZiAoIXBhcnNlX3NjcmlwdC0+c3VwcG9ydC5zcGFtdGVzdCkKKyAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICB7IHl5ZXJyb3IoInNwYW10ZXN0IG5vdCByZXF1aXJl
ZCIpOyBZWUVSUk9SOyB9CisJCQkJICBlbHNlIHskJCA9IFNQQU1URVNUO30KKwkJCQkgfQorCXwg
VklSVVNURVNUCQkge2lmICghcGFyc2Vfc2NyaXB0LT5zdXBwb3J0LnZpcnVzdGVzdCkKKwkgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICB7eXllcnJvcigidmlydXN0ZXN0IG5vdCByZXF1aXJl
ZCIpOyBZWUVSUk9SO30KKwkgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2V7JCQgPSBWSVJV
U1RFU1Q7fQorCSAgICAgICAgICAgICAgICAgICAgICAgICB9CisJOwogCiBhZXRhZ3M6IC8qIGVt
cHR5ICovICAgICAgICAgICAgICB7ICQkID0gbmV3X2FldGFncygpOyB9CiAgICAgICAgIHwgYWV0
YWdzIGFkZHJwYXJ0dGFnCSB7ICQkID0gJDE7CkBAIC00OTQsNiArNTI5LDMyIEBACiAJCQkJICAg
ICAkJC0+Y29tcGFyYXRvciA9ICQzOyB9IH0KICAgICAgICAgOwogCitzdnRhZ3M6IC8qIGVtcHR5
ICovICAgICAgICAgICAgICB7ICQkID0gbmV3X3N2dGFncygpOyB9CisJfCBzdnRhZ3MgY29tcHRh
ZyAgICAgICAgIHsgJCQgPSAkMTsKKwkJCQkgICBpZiAoJCQtPmNvbXB0YWcgIT0gLTEpIHsgCisJ
CQl5eWVycm9yKCJkdXBsaWNhdGUgY29tcGFyYXRvciB0eXBlIHRhZyIpOyBZWUVSUk9SOyB9CisJ
CQkJICAgZWxzZSB7ICQkLT5jb21wdGFnID0gJDI7IH0gfQorCXwgc3Z0YWdzIFZBTFVFIFNUUklO
R3sgJCQgPSAkMTsKKwkJCQkgICBpZiAoJCQtPmNvbXB0YWcgIT0gLTEpIHsKKwkJCSAgICAgICAg
ICAgICAgIHl5ZXJyb3IoImR1cGxpY2F0ZSBjb21wYXJhdG9yIHR5cGUgdGFnIik7IFlZRVJST1I7
IH0KKwkJCQkgICBlbHNlIHsKKwkJCQkgICBpZiAoIXBhcnNlX3NjcmlwdC0+c3VwcG9ydC5yZWxh
dGlvbmFsKSB7CisJCQkJICAgICAgICB5eWVycm9yKCJyZWxhdGlvbmFsIG5vdCByZXF1aXJlZCIp
OworCQkJCSAgICAgICAgWVlFUlJPUjsgfQorCQkJCSAgICQkLT5jb21wdGFnID0gVkFMVUU7CisJ
CQkJICAgJCQtPnJlbGF0aW9uID0gdmVyaWZ5X3JlbGF0KCQzKTsKKwkJCQkgICBpZiAoJCQtPnJl
bGF0aW9uPT0tMSkgCisJCQkJICAgICB7WVlFUlJPUjsgLyp2ciBjYWxsZWQgeXllcnJvcigpKi8g
fQorCQkJCSAgIH0gfQorICAgICAgICB8IHN2dGFncyBDT01QQVJBVE9SIFNUUklORyB7ICQkID0g
JDE7CisJICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJCQtPmNvbXBhcmF0b3IgIT0g
TlVMTCkgeyAKKwkJCXl5ZXJyb3IoImR1cGxpY2F0ZSBjb21wYXJhdG9yIHRhZyIpOyBZWUVSUk9S
OyB9CisJCQkJICAgICBlbHNlIGlmICghc3RyY21wKCQzLCAiaTthc2NpaS1udW1lcmljIikgJiYK
KwkJCQkgICAgIXBhcnNlX3NjcmlwdC0+c3VwcG9ydC5pX2FzY2lpX251bWVyaWMpIHsKKwkJCXl5
ZXJyb3IoImNvbXBhcmF0b3ItaTthc2NpaS1udW1lcmljIG5vdCByZXF1aXJlZCIpOworCQkJWVlF
UlJPUjsgfQorCQkJCSAgIGVsc2UgeyAkJC0+Y29tcGFyYXRvciA9ICQzOyB9IH0KKwk7CiAKIGFk
ZHJwYXJ0dGFnOiBBTEwgICAgICAgICAgICAgICAgIHsgJCQgPSBBTEw7IH0KIAl8IExPQ0FMUEFS
VAkJIHsgJCQgPSBMT0NBTFBBUlQ7IH0KQEAgLTUzMCw4ICs1OTEsNiBAQAogCQkJCSAgIH0KIAkJ
CQkgICAkJCA9IFZBTFVFOyB9CiAJOwotCi0KIHNpemV0YWc6IE9WRVIJCQkgeyAkJCA9IE9WRVI7
IH0KIAl8IFVOREVSCQkJIHsgJCQgPSBVTkRFUjsgfQogCTsKQEAgLTY3OCw2ICs3MzcsMjMgQEAK
ICAgICByZXR1cm4gcmV0OwogfQogCitzdGF0aWMgdGVzdF90ICpidWlsZF9zdnRlc3QoaW50IHQs
IHN0cnVjdCBzdnRhZ3MgKnN2LCBjaGFyICpzKQoreworICAgIHRlc3RfdCAqcmV0ID0gbmV3X3Rl
c3QodCk7CisKKyAgICBhc3NlcnQoKHQgPT0gU1BBTVRFU1QpIHx8ICh0ID09IFZJUlVTVEVTVCkp
OworCisgICAgaWYgKHJldCkgeworCXJldC0+dS5zdi5jb21wdGFnPXN2LT5jb21wdGFnOworCXJl
dC0+dS5zdi5yZWxhdGlvbj1zdi0+cmVsYXRpb247CisJcmV0LT51LnN2LmNvbXBhcmF0b3I9c3Ry
ZHVwKHN2LT5jb21wYXJhdG9yKTsKKwlyZXQtPnUuc3YucyA9IHM7CisJZnJlZV9zdnRhZ3Moc3Yp
OworCisgICAgfQorICAgIHJldHVybiByZXQ7Cit9CisKIHN0YXRpYyBzdHJ1Y3QgYWV0YWdzICpu
ZXdfYWV0YWdzKHZvaWQpCiB7CiAgICAgc3RydWN0IGFldGFncyAqciA9IChzdHJ1Y3QgYWV0YWdz
ICopIHhtYWxsb2Moc2l6ZW9mKHN0cnVjdCBhZXRhZ3MpKTsKQEAgLTgxNSw2ICs4OTEsMzEgQEAK
ICAgICBmcmVlKGQpOwogfQogCitzdGF0aWMgc3RydWN0IHN2dGFncyAqbmV3X3N2dGFncyh2b2lk
KQoreworICAgIHN0cnVjdCBzdnRhZ3MgKnIgPSAoc3RydWN0IHN2dGFncyAqKSB4bWFsbG9jKHNp
emVvZihzdHJ1Y3Qgc3Z0YWdzKSk7CisKKyAgICByLT5jb21wdGFnID0gci0+cmVsYXRpb249LTE7
CisgICAgci0+Y29tcGFyYXRvcj1OVUxMOworCisgICAgcmV0dXJuIHI7Cit9CisKK3N0YXRpYyBz
dHJ1Y3Qgc3Z0YWdzICpjYW5vbl9zdnRhZ3Moc3RydWN0IHN2dGFncyAqc3YpCit7CisgICAgaWYg
KHN2LT5jb21wYXJhdG9yID09IE5VTEwpIHsKKyAgICAgICAgc3YtPmNvbXBhcmF0b3IgPSB4c3Ry
ZHVwKCJpO2FzY2lpLWNhc2VtYXAiKTsKKyAgICB9CisgICAgaWYgKHN2LT5jb21wdGFnID09IC0x
KSB7IHN2LT5jb21wdGFnID0gSVM7IH0KKyAgICByZXR1cm4gc3Y7Cit9CisKK3N0YXRpYyB2b2lk
IGZyZWVfc3Z0YWdzKHN0cnVjdCBzdnRhZ3MgKnN2KQoreworICAgIGZyZWUoc3YtPmNvbXBhcmF0
b3IpOworICAgIGZyZWUoc3YpOworfQorCiBzdGF0aWMgaW50IHZlcmlmeV9zdHJpbmdsaXN0KHN0
cmluZ2xpc3RfdCAqc2wsIGludCAoKnZlcmlmeSkoY2hhciAqKSkKIHsKICAgICBmb3IgKDsgc2wg
IT0gTlVMTCAmJiB2ZXJpZnkoc2wtPnMpOyBzbCA9IHNsLT5uZXh0KSA7CkBAIC05OTMsNiArMTA5
NCwxNyBAQAogCXJldHVybiAxOwogICAgIH0KICAgICByZXR1cm4gMDsKK30KKworc3RhdGljIGlu
dCB2ZXJpZnlfcmVnZXhzdHJpbmcoY2hhciAqcywgY2hhciAqY29tcCkKK3sKKyAgICBpbnQgY2Zs
YWdzID0gUkVHX0VYVEVOREVEIHwgUkVHX05PU1VCOworIAorICAgIGlmICghc3RyY21wKGNvbXAs
ICJpO2FzY2lpLWNhc2VtYXAiKSkgeworCWNmbGFncyB8PSBSRUdfSUNBU0U7CisgICAgfQorCisg
ICAgcmV0dXJuIHZlcmlmeV9yZWdleChzLCBjZmxhZ3MpOwogfQogI2VuZGlmCiAKSW5kZXg6IHNp
ZXZlX2ludGVyZmFjZS5oCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3NpZXZlL3NpZXZl
X2ludGVyZmFjZS5oLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjE5CmRpZmYgLXUgLXIxLjE5IHNp
ZXZlX2ludGVyZmFjZS5oCi0tLSBzaWV2ZV9pbnRlcmZhY2UuaAkyMiBPY3QgMjAwMyAxODo1MDoz
MCAtMDAwMAkxLjE5CisrKyBzaWV2ZV9pbnRlcmZhY2UuaAkyNiBBcHIgMjAwNSAyMDo0Mzo0MiAt
MDAwMApAQCAtNTIsNiArNTIsMTAgQEAKIHR5cGVkZWYgaW50IHNpZXZlX2dldF9lbnZlbG9wZSh2
b2lkICptZXNzYWdlX2NvbnRleHQsIAogCQkJICAgICAgIGNvbnN0IGNoYXIgKmZpZWxkLAogCQkJ
ICAgICAgIGNvbnN0IGNoYXIgKioqY29udGVudHMpOwordHlwZWRlZiBpbnQgc2lldmVfZ2V0X3Nw
YW10ZXN0KHZvaWQgKm1lc3NhZ2VfY29udGV4dCwgCisJCQkgICAgICAgY29uc3QgY2hhciAqKnZh
bCk7Cit0eXBlZGVmIGludCBzaWV2ZV9nZXRfdmlydXN0ZXN0KHZvaWQgKm1lc3NhZ2VfY29udGV4
dCwgCisJCQkgICAgICAgY29uc3QgY2hhciAqKnZhbCk7CiAKIHR5cGVkZWYgc3RydWN0IHNpZXZl
X3ZhY2F0aW9uIHsKICAgICBpbnQgbWluX3Jlc3BvbnNlOwkJLyogMCAtPiBkZWZhdWx0cyB0byAz
ICovCkBAIC0xMjksNiArMTMzLDggQEAKIGludCBzaWV2ZV9yZWdpc3Rlcl9zaXplKHNpZXZlX2lu
dGVycF90ICppbnRlcnAsIHNpZXZlX2dldF9zaXplICpmKTsKIGludCBzaWV2ZV9yZWdpc3Rlcl9o
ZWFkZXIoc2lldmVfaW50ZXJwX3QgKmludGVycCwgc2lldmVfZ2V0X2hlYWRlciAqZik7CiBpbnQg
c2lldmVfcmVnaXN0ZXJfZW52ZWxvcGUoc2lldmVfaW50ZXJwX3QgKmludGVycCwgc2lldmVfZ2V0
X2VudmVsb3BlICpmKTsKK2ludCBzaWV2ZV9yZWdpc3Rlcl9zcGFtdGVzdChzaWV2ZV9pbnRlcnBf
dCAqaW50ZXJwLCBzaWV2ZV9nZXRfc3BhbXRlc3QgKmYpOworaW50IHNpZXZlX3JlZ2lzdGVyX3Zp
cnVzdGVzdChzaWV2ZV9pbnRlcnBfdCAqaW50ZXJwLCBzaWV2ZV9nZXRfdmlydXN0ZXN0ICpmKTsK
IAogdHlwZWRlZiBpbnQgc2lldmVfcGFyc2VfZXJyb3IoaW50IGxpbmVubywgY29uc3QgY2hhciAq
bXNnLCAKIAkJCSAgICAgIHZvaWQgKmludGVycF9jb250ZXh0LApJbmRleDogc2lldmVjLmMKPT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc2lldmUvc2lldmVjLmMsdgpyZXRyaWV2aW5nIHJl
dmlzaW9uIDEuNQpkaWZmIC11IC1yMS41IHNpZXZlYy5jCi0tLSBzaWV2ZWMuYwkxMSBNYXIgMjAw
NCAxNToyMzoyMCAtMDAwMAkxLjUKKysrIHNpZXZlYy5jCTI2IEFwciAyMDA1IDIwOjQzOjQyIC0w
MDAwCkBAIC0yNjQsNiArMjY0LDE4IEBACiAJcmV0dXJuIFRJTVNJRVZFX0ZBSUw7CiAgICAgfQog
CisgICAgcmVzID0gc2lldmVfcmVnaXN0ZXJfc3BhbXRlc3QoaSwgKHNpZXZlX2dldF9zcGFtdGVz
dCAqKSAmZm9vKTsKKyAgICBpZiAocmVzICE9IFNJRVZFX09LKSB7CisJc3lzbG9nKExPR19FUlIs
ICJzaWV2ZV9yZWdpc3Rlcl9zcGFtdGVzdCgpIHJldHVybnMgJWRcbiIsIHJlcyk7CisJcmV0dXJu
IFRJTVNJRVZFX0ZBSUw7CisgICAgfQorICAKKyAgICByZXMgPSBzaWV2ZV9yZWdpc3Rlcl92aXJ1
c3Rlc3QoaSwgKHNpZXZlX2dldF92aXJ1c3Rlc3QgKikgJmZvbyk7CisgICAgaWYgKHJlcyAhPSBT
SUVWRV9PSykgeworCXN5c2xvZyhMT0dfRVJSLCAic2lldmVfcmVnaXN0ZXJfdmlydXN0ZXN0KCkg
cmV0dXJucyAlZFxuIiwgcmVzKTsKKwlyZXR1cm4gVElNU0lFVkVfRkFJTDsKKyAgICB9CisgIAog
ICAgIHJld2luZChzdHJlYW0pOwogCiAgICAgKmVycnN0ciA9IChjaGFyICopIHhtYWxsb2MoMjAg
KiBzaXplb2YoY2hhcikpOwpJbmRleDogdGVzdC5jCj09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMv
c3JjL3NpZXZlL3Rlc3QuYyx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4yNQpkaWZmIC11IC1yMS4y
NSB0ZXN0LmMKLS0tIHRlc3QuYwkxNSBNYXIgMjAwNSAxNjowODo0OCAtMDAwMAkxLjI1CisrKyB0
ZXN0LmMJMjYgQXByIDIwMDUgMjA6NDM6NDIgLTAwMDAKQEAgLTI4NSw2ICsyODUsMjkgQEAKICAg
ICB9CiB9CiAKK2ludCBnZXRzcGFtdGVzdCh2b2lkICp2LCBjb25zdCBjaGFyICoqdmFsKQorewor
ICAgIG1lc3NhZ2VfZGF0YV90ICptID0gKG1lc3NhZ2VfZGF0YV90ICopIHY7CisKKyAgICAqdmFs
ID0gIjMzIjsKKworICAgIHJldHVybiBTSUVWRV9PSzsKK30KKworaW50IGdldHZpcnVzdGVzdCh2
b2lkICp2LCBjb25zdCBjaGFyICoqdmFsKQoreworICAgIG1lc3NhZ2VfZGF0YV90ICptID0gKG1l
c3NhZ2VfZGF0YV90ICopIHY7CisgICAgY2hhciBidWZbMTAyNF07CisKKyAgICByZXdpbmQobS0+
ZGF0YSk7CisgICAgd2hpbGUgKGZnZXRzKGJ1ZiwgMTAyNCwgbS0+ZGF0YSkpCisgICAgICAgIHBy
aW50ZigiJXMiLCBidWYpOworCisgICAgKnZhbCA9ICIyMiI7CisKKyAgICByZXR1cm4gU0lFVkVf
T0s7Cit9CisKIG1lc3NhZ2VfZGF0YV90ICpuZXdfbXNnKEZJTEUgKm1zZywgaW50IHNpemUsIGNo
YXIgKm5hbWUpCiB7CiAgICAgaW50IGk7CkBAIC03ODMsNiArODA2LDE4IEBACiAgICAgcmVzID0g
c2lldmVfcmVnaXN0ZXJfZW52ZWxvcGUoaSwgJmdldGVudmVsb3BlKTsKICAgICBpZiAocmVzICE9
IFNJRVZFX09LKSB7CiAJcHJpbnRmKCJzaWV2ZV9yZWdpc3Rlcl9lbnZlbG9wZSgpIHJldHVybnMg
JWRcbiIsIHJlcyk7CisJZXhpdCgxKTsKKyAgICB9CisKKyAgICByZXMgPSBzaWV2ZV9yZWdpc3Rl
cl9zcGFtdGVzdChpLCAmZ2V0c3BhbXRlc3QpOworICAgIGlmIChyZXMgIT0gU0lFVkVfT0spIHsK
KwlwcmludGYoInNpZXZlX3JlZ2lzdGVyX3NwYW10ZXN0KCkgcmV0dXJucyAlZFxuIiwgcmVzKTsK
KwlleGl0KDEpOworICAgIH0KKworICAgIHJlcyA9IHNpZXZlX3JlZ2lzdGVyX3ZpcnVzdGVzdChp
LCAmZ2V0dmlydXN0ZXN0KTsKKyAgICBpZiAocmVzICE9IFNJRVZFX09LKSB7CisJcHJpbnRmKCJz
aWV2ZV9yZWdpc3Rlcl92aXJ1c3Rlc3QoKSByZXR1cm5zICVkXG4iLCByZXMpOwogCWV4aXQoMSk7
CiAgICAgfQogCkluZGV4OiB0cmVlLmgKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc2ll
dmUvdHJlZS5oLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjkKZGlmZiAtdSAtcjEuOSB0cmVlLmgK
LS0tIHRyZWUuaAkzMCBBdWcgMjAwNCAxMTozMzoxNyAtMDAwMAkxLjkKKysrIHRyZWUuaAkyNiBB
cHIgMjAwNSAyMDo0Mzo0MiAtMDAwMApAQCAtODEsNiArODEsMTMgQEAKIAkgICAgaW50IHQ7IC8q
IHRhZyAqLwogCSAgICBpbnQgbjsgLyogcGFyYW0gKi8KIAl9IHN6OworCXN0cnVjdCB7IC8qIGl0
J3MgYSBzcGFtIG9yIHZpcnVzIHRlc3QgKi8KKwkgICAgaW50IGNvbXB0YWc7CisJICAgIGNoYXIg
KiBjb21wYXJhdG9yOworCSAgICBpbnQgcmVsYXRpb247CisJICAgIHZvaWQgKmNvbXByb2NrOwor
CSAgICBjaGFyICpzOworCX0gc3Y7CiAgICAgfSB1OwogfTsKIApJbmRleDogTWFrZWZpbGUuaW4K
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvY3lydXMvaW1hcC9NYWtlZmlsZS5pbix2CnJl
dHJpZXZpbmcgcmV2aXNpb24gMS4xODQKZGlmZiAtcjEuMTg0IE1ha2VmaWxlLmluCjcxYTcyCj4g
TElCX0NMQU1BViA9IEBMSUJfQ0xBTUFWQAoxOTdjMTk4CjwgCSBsaWJpbWFwLmEgJChTSUVWRV9M
SUJTKSAkKERFUExJQlMpICQoTElCUykgJChMSUJfV1JBUCkKLS0tCj4gCSBsaWJpbWFwLmEgJChT
SUVWRV9MSUJTKSAkKERFUExJQlMpICQoTElCUykgJChMSUJfV1JBUCkgJChMSUJfQ0xBTUFWKQoy
MDNjMjA0CjwgCSBsaWJpbWFwLmEgJChTSUVWRV9MSUJTKSAkKERFUExJQlMpICQoTElCUykgJChM
SUJfV1JBUCkKLS0tCj4gCSBsaWJpbWFwLmEgJChTSUVWRV9MSUJTKSAkKERFUExJQlMpICQoTElC
UykgJChMSUJfV1JBUCkgJChMSUJfQ0xBTUFWKQpJbmRleDogbG10cF9zaWV2ZS5jCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0KUkNTIGZpbGU6IC9jdnMvc3JjL2N5cnVzL2ltYXAvbG10cF9zaWV2ZS5jLHYKcmV0cmlldmlu
ZyByZXZpc2lvbiAxLjgKZGlmZiAtdSAtcjEuOCBsbXRwX3NpZXZlLmMKLS0tIGxtdHBfc2lldmUu
YwkxIEp1biAyMDA0IDEzOjQ3OjE2IC0wMDAwCTEuOAorKysgbG10cF9zaWV2ZS5jCTI2IEFwciAy
MDA1IDIwOjQ1OjA1IC0wMDAwCkBAIC04Myw2ICs4MywyNiBAQAogICAgIHN0cnVjdCBhdXRoX3N0
YXRlICphdXRoc3RhdGU7CiB9IHNjcmlwdF9kYXRhX3Q7CiAKK3N0YXRpYyBzaWV2ZV9iYWNrZW5k
X3QgKnNpZXZlX2JhY2tlbmRzW10gPSB7CisgICAgJnNpZXZlX2NsYW1hdiwKKyAgICBOVUxMIAor
fTsKKworc3RhdGljIHNpZXZlX2JhY2tlbmRfdCAqc2JfZnJvbW5hbWUoY29uc3QgY2hhciAqbmFt
ZSkKK3sKKyAgICBpbnQgaTsKKyAgICBzaWV2ZV9iYWNrZW5kX3QgKnNiID0gTlVMTDsKKworICAg
IGlmICghbmFtZSkKKwlyZXR1cm4gTlVMTDsKKworICAgIGZvciAoaSA9IDA7IHNiID0gKHNpZXZl
X2JhY2tlbmRfdCAqKXNpZXZlX2JhY2tlbmRzW2ldOyBpKyspCisJaWYgKCFzdHJjbXAoc2ItPm5h
bWUsIG5hbWUpKQorCSAgICByZXR1cm4gc2I7CisKKyAgICByZXR1cm4gTlVMTDsKK30KKwogLyog
Zm9yd2FyZCBkZWNsYXJhdGlvbnMgKi8KIGV4dGVybiBpbnQgZGVsaXZlcl9tYWlsYm94KHN0cnVj
dCBwcm90c3RyZWFtICptc2csCiAJCQkgICBzdHJ1Y3Qgc3RhZ2Vtc2cgKnN0YWdlLApAQCAtMTYx
LDYgKzE4MSw1MCBAQAogICAgIH0KIH0KIAorc3RhdGljIGludCBydW5zaWV2ZWJhY2tlbmQoCisg
ICAgY29uc3QgY2hhciAqbGFiZWwsIAorICAgIGNvbnN0IGNoYXIgKmJhY2tlbmRfbmFtZSwgCisg
ICAgdm9pZCAqbWMsIAorICAgIGNvbnN0IGNoYXIgKip2YWwpCit7CisgICAgbWVzc2FnZV9kYXRh
X3QgKm0gPSAoKHNpZXZlX21zZ2RhdGFfdCAqKSBtYyktPm07CisgICAgc2lldmVfYmFja2VuZF90
ICpzYjsKKyAgICBjaGFyICpyZXQgPSBOVUxMOworICAgIGludCByYzsKKworICAgICp2YWwgPSAi
MCI7CisKKyAgICBpZiAoIWJhY2tlbmRfbmFtZSkgeworCXN5c2xvZyhMT0dfRVJSLCAiJXN0ZXN0
IHNpZXZlIGJhY2tlbmQgbm90IHNwZWNpZmllZCIsIGxhYmVsKTsKKwlyZXR1cm4gU0lFVkVfRkFJ
TDsKKyAgICB9CisKKyAgICBzYiA9IHNiX2Zyb21uYW1lKGJhY2tlbmRfbmFtZSk7CisgICAgaWYg
KHNiID09IE5VTEwgfHwgCisgICAgICAgIHNiLT5zY2FuID09IE5VTEwpIHsKKwlzeXNsb2coTE9H
X0VSUiwgIiVzdGVzdCBzaWV2ZSBiYWNrZW5kICglcykgbm90IHNldHVwL2luc3RhbGxlZCIsIGxh
YmVsLCBiYWNrZW5kX25hbWUpOworCXJldHVybiBTSUVWRV9GQUlMOworICAgIH0KKworICAgIHJj
ID0gKGludCkgc2ItPnNjYW4oc2ItPmNvbnRleHQsIG0sICZyZXQpOworICAgIGlmIChyYyA9PSBT
SUVWRV9PSykKKwkqdmFsID0gcmV0OworCisgICAgcmV0dXJuIHJjOworfQorCitzdGF0aWMgaW50
IGdldHNwYW10ZXN0KHZvaWQgKm1jLCBjb25zdCBjaGFyICoqdmFsKQoreworICAgIGNvbnN0IGNo
YXIgKmJhY2tlbmRfbmFtZSA9IGNvbmZpZ19nZXRzdHJpbmcoSU1BUE9QVF9TSUVWRV9TUEFNVEVT
VF9CQUNLRU5EKTsKKyAgICByZXR1cm4gcnVuc2lldmViYWNrZW5kKCJzcGFtIiwgYmFja2VuZF9u
YW1lLCBtYywgdmFsKTsKK30KKworc3RhdGljIGludCBnZXR2aXJ1c3Rlc3Qodm9pZCAqbWMsIGNv
bnN0IGNoYXIgKip2YWwpCit7CisgICAgY29uc3QgY2hhciAqYmFja2VuZF9uYW1lID0gY29uZmln
X2dldHN0cmluZyhJTUFQT1BUX1NJRVZFX1ZJUlVTVEVTVF9CQUNLRU5EKTsKKyAgICByZXR1cm4g
cnVuc2lldmViYWNrZW5kKCJ2aXJ1cyIsIGJhY2tlbmRfbmFtZSwgbWMsIHZhbCk7Cit9CisKIHN0
YXRpYyBpbnQgZ2xvYmFsX291dGdvaW5nX2NvdW50ID0gMDsKIAogc3RhdGljIGludCBzZW5kX3Jl
amVjdGlvbihjb25zdCBjaGFyICpvcmlnaWQsCkBAIC03NzMsNiArODM3LDE4IEBACiAJZmF0YWwo
InNpZXZlX3JlZ2lzdGVyX3ZhY2F0aW9uKCkiLCBFQ19TT0ZUV0FSRSk7CiAgICAgfQogCisgICAg
cmVzID0gc2lldmVfcmVnaXN0ZXJfc3BhbXRlc3QoaW50ZXJwLCAmZ2V0c3BhbXRlc3QpOworICAg
IGlmIChyZXMgIT0gU0lFVkVfT0spIHsKKwlzeXNsb2coTE9HX0VSUiwgInNpZXZlX3JlZ2lzdGVy
X3NwYW10ZXN0KCkgcmV0dXJucyAlZFxuIiwgcmVzKTsKKwlmYXRhbCgic2lldmVfcmVnaXN0ZXJf
c3BhbXRlc3QoKSIsIEVDX1NPRlRXQVJFKTsKKyAgICB9CisKKyAgICByZXMgPSBzaWV2ZV9yZWdp
c3Rlcl92aXJ1c3Rlc3QoaW50ZXJwLCAmZ2V0dmlydXN0ZXN0KTsKKyAgICBpZiAocmVzICE9IFNJ
RVZFX09LKSB7CisJc3lzbG9nKExPR19FUlIsICJzaWV2ZV9yZWdpc3Rlcl92aXJ1c3Rlc3QoKSBy
ZXR1cm5zICVkXG4iLCByZXMpOworCWZhdGFsKCJzaWV2ZV9yZWdpc3Rlcl92aXJ1c3Rlc3QoKSIs
IEVDX1NPRlRXQVJFKTsKKyAgICB9CisKICAgICByZXMgPSBzaWV2ZV9yZWdpc3Rlcl9wYXJzZV9l
cnJvcihpbnRlcnAsICZzaWV2ZV9wYXJzZV9lcnJvcl9oYW5kbGVyKTsKICAgICBpZiAocmVzICE9
IFNJRVZFX09LKSB7CiAJc3lzbG9nKExPR19FUlIsICJzaWV2ZV9yZWdpc3Rlcl9wYXJzZV9lcnJv
cigpIHJldHVybnMgJWRcbiIsIHJlcyk7CkBAIC03ODcsNiArODYzLDQzIEBACiAgICAgfQogCiAg
ICAgcmV0dXJuIGludGVycDsKK30KKwordm9pZCBzaWV2ZV9iYWNrZW5kc19pbml0KHZvaWQpCit7
CisgICAgY29uc3QgY2hhciAqYmFja2VuZF9uYW1lID0gTlVMTDsKKyAgICBzaWV2ZV9iYWNrZW5k
X3QgKnNiID0gTlVMTDsKKworICAgIGJhY2tlbmRfbmFtZSA9IGNvbmZpZ19nZXRzdHJpbmcoSU1B
UE9QVF9TSUVWRV9TUEFNVEVTVF9CQUNLRU5EKTsKKyAgICBpZiAoYmFja2VuZF9uYW1lKSB7CisJ
aWYgKChzYiA9IHNiX2Zyb21uYW1lKGJhY2tlbmRfbmFtZSkpID09IE5VTEwpCisJICAgc3lzbG9n
KExPR19FUlIsICJzcGFtdGVzdCBzaWV2ZSBiYWNrZW5kICglcykgbm90IGluc3RhbGxlZCIsIGJh
Y2tlbmRfbmFtZSk7CisJZWxzZSBpZiAoc2ItPmluaXQpIHNiLT5pbml0KCk7CisgICAgfQorCisg
ICAgYmFja2VuZF9uYW1lID0gY29uZmlnX2dldHN0cmluZyhJTUFQT1BUX1NJRVZFX1ZJUlVTVEVT
VF9CQUNLRU5EKTsKKyAgICBpZiAoYmFja2VuZF9uYW1lKSB7CisJaWYgKChzYiA9IHNiX2Zyb21u
YW1lKGJhY2tlbmRfbmFtZSkpID09IE5VTEwpCisJICAgc3lzbG9nKExPR19FUlIsICJ2aXJ1c3Rl
c3Qgc2lldmUgYmFja2VuZCAoJXMpIG5vdCBpbnN0YWxsZWQiLCBiYWNrZW5kX25hbWUpOworCWVs
c2UgaWYgKHNiLT5pbml0KSBzYi0+aW5pdCgpOworICAgIH0KKworICAgIHJldHVybjsKK30KKwor
dm9pZCBzaWV2ZV9iYWNrZW5kc19mcmVlKHZvaWQpCit7CisgICAgc2lldmVfYmFja2VuZF90ICpz
YiA9IE5VTEw7CisKKyAgICBzYiA9IHNiX2Zyb21uYW1lKGNvbmZpZ19nZXRzdHJpbmcoSU1BUE9Q
VF9TSUVWRV9TUEFNVEVTVF9CQUNLRU5EKSk7CisgICAgaWYgKHNiICE9IE5VTEwgJiYgc2ItPmZy
ZWUpCisJc2ItPmZyZWUoc2ItPmNvbnRleHQpOworCisgICAgc2IgPSBzYl9mcm9tbmFtZShjb25m
aWdfZ2V0c3RyaW5nKElNQVBPUFRfU0lFVkVfVklSVVNURVNUX0JBQ0tFTkQpKTsKKyAgICBpZiAo
c2IgIT0gTlVMTCAmJiBzYi0+ZnJlZSkKKwlzYi0+ZnJlZShzYi0+Y29udGV4dCk7CisKKyAgICBy
ZXR1cm47CiB9CiAKIHN0YXRpYyBpbnQgc2lldmVfZmluZF9zY3JpcHQoY29uc3QgY2hhciAqdXNl
ciwgY29uc3QgY2hhciAqZG9tYWluLApJbmRleDogbG10cF9zaWV2ZS5oCj09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNT
IGZpbGU6IC9jdnMvc3JjL2N5cnVzL2ltYXAvbG10cF9zaWV2ZS5oLHYKcmV0cmlldmluZyByZXZp
c2lvbiAxLjIKZGlmZiAtdSAtcjEuMiBsbXRwX3NpZXZlLmgKLS0tIGxtdHBfc2lldmUuaAkxMiBG
ZWIgMjAwNCAwMjozMjoyMyAtMDAwMAkxLjIKKysrIGxtdHBfc2lldmUuaAkyNiBBcHIgMjAwNSAy
MDo0NTowNSAtMDAwMApAQCAtNzEsNSArNzEsMjYgQEAKIHNpZXZlX2ludGVycF90ICpzZXR1cF9z
aWV2ZSh2b2lkKTsKIGludCBydW5fc2lldmUoY29uc3QgY2hhciAqdXNlciwgY29uc3QgY2hhciAq
ZG9tYWluLCBjb25zdCBjaGFyICptYWlsYm94LAogCSAgICAgIHNpZXZlX2ludGVycF90ICppbnRl
cnAsIHNpZXZlX21zZ2RhdGFfdCAqbXlkYXRhKTsKK3ZvaWQgc2lldmVfYmFja2VuZHNfaW5pdCh2
b2lkKTsKK3ZvaWQgc2lldmVfYmFja2VuZHNfZnJlZSh2b2lkKTsKKworI2lmIDAKKyNkZWZpbmUg
U0lFVkVfU1BBTVRFU1QgMAorI2RlZmluZSBTSUVWRV9WSVJVU1RFU1QgMQorI2VuZGlmCisKK3R5
cGVkZWYgc3RydWN0IHNpZXZlX2JhY2tlbmQgeworICAgIGNvbnN0IGNoYXIgKm5hbWU7CisjaWYg
MAorICAgIGNvbnN0IGludCB0eXBlOworI2VuZGlmCisgICAgdm9pZCAqY29udGV4dDsKKworICAg
IGludCAoKmluaXQpKCk7CisgICAgaW50ICgqc2Nhbikodm9pZCAqY29udGV4dCwgbWVzc2FnZV9k
YXRhX3QgKm0sIGNoYXIgKip2YWwpOworICAgIHZvaWQgKCpmcmVlKSh2b2lkICpjb250ZXh0KTsK
K30gc2lldmVfYmFja2VuZF90OworCitleHRlcm4gc2lldmVfYmFja2VuZF90IHNpZXZlX2NsYW1h
djsKIAogI2VuZGlmIC8qIExNVFBfU0lFVkVfSCAqLwpJbmRleDogbG10cGQuYwo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
ClJDUyBmaWxlOiAvY3ZzL3NyYy9jeXJ1cy9pbWFwL2xtdHBkLmMsdgpyZXRyaWV2aW5nIHJldmlz
aW9uIDEuMTQwCmRpZmYgLXUgLXIxLjE0MCBsbXRwZC5jCi0tLSBsbXRwZC5jCTE3IERlYyAyMDA0
IDE2OjMyOjE1IC0wMDAwCTEuMTQwCisrKyBsbXRwZC5jCTI2IEFwciAyMDA1IDIwOjQ1OjA1IC0w
MDAwCkBAIC0xNjQsNiArMTY0LDcgQEAKIAogICAgIC8qIHNldHVwIHNpZXZlIHN1cHBvcnQgKi8K
ICAgICBzaWV2ZV9pbnRlcnAgPSBzZXR1cF9zaWV2ZSgpOworICAgIHNpZXZlX2JhY2tlbmRzX2lu
aXQoKTsKICNlbHNlCiAgICAgaWYgKGR1cGVsaW0pCiAjZW5kaWYKQEAgLTQ3OCw2ICs0NzksNyBA
QAogdm9pZCBzaHV0X2Rvd24oaW50IGNvZGUpCiB7CiAjaWZkZWYgVVNFX1NJRVZFCisgICAgc2ll
dmVfYmFja2VuZHNfZnJlZSgpOwogICAgIHNpZXZlX2ludGVycF9mcmVlKCZzaWV2ZV9pbnRlcnAp
OwogI2Vsc2UKICAgICBpZiAoZHVwZWxpbSkKSW5kZXg6IHNjcmlwdHRlc3QuYwo9PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
ClJDUyBmaWxlOiAvY3ZzL3NyYy9jeXJ1cy90aW1zaWV2ZWQvc2NyaXB0dGVzdC5jLHYKcmV0cmll
dmluZyByZXZpc2lvbiAxLjIzCmRpZmYgLXUgLXIxLjIzIHNjcmlwdHRlc3QuYwotLS0gc2NyaXB0
dGVzdC5jCTExIE1hciAyMDA0IDE1OjIzOjIxIC0wMDAwCTEuMjMKKysrIHNjcmlwdHRlc3QuYwky
NiBBcHIgMjAwNSAyMDo0NTo0MSAtMDAwMApAQCAtMTY1LDYgKzE2NSwxOCBAQAogCXJldHVybiBU
SU1TSUVWRV9GQUlMOwogICAgIH0KIAorICAgIHJlcyA9IHNpZXZlX3JlZ2lzdGVyX3NwYW10ZXN0
KGksIChzaWV2ZV9nZXRfc3BhbXRlc3QgKikgJmZvbyk7CisgICAgaWYgKHJlcyAhPSBTSUVWRV9P
SykgeworCXN5c2xvZyhMT0dfRVJSLCAic2lldmVfcmVnaXN0ZXJfc3BhbXRlc3QoKSByZXR1cm5z
ICVkXG4iLCByZXMpOworCXJldHVybiBUSU1TSUVWRV9GQUlMOworICAgIH0KKworICAgIHJlcyA9
IHNpZXZlX3JlZ2lzdGVyX3ZpcnVzdGVzdChpLCAoc2lldmVfZ2V0X3ZpcnVzdGVzdCAqKSAmZm9v
KTsKKyAgICBpZiAocmVzICE9IFNJRVZFX09LKSB7CisJc3lzbG9nKExPR19FUlIsICJzaWV2ZV9y
ZWdpc3Rlcl92aXJ1c3Rlc3QoKSByZXR1cm5zICVkXG4iLCByZXMpOworCXJldHVybiBUSU1TSUVW
RV9GQUlMOworICAgIH0KKwogICAgIHJlcyA9IHNpZXZlX3JlZ2lzdGVyX25vdGlmeShpLCAmc2ll
dmVfbm90aWZ5KTsKICAgICBpZiAocmVzICE9IFNJRVZFX09LKSB7CiAJc3lzbG9nKExPR19FUlIs
ICJzaWV2ZV9yZWdpc3Rlcl9ub3RpZnkoKSByZXR1cm5zICVkXG4iLCByZXMpOwoAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AGNsYW1hdi5tNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwNjQ0ADAwMDAw
MDAAMDAwMDAwMQAwMDAwMDAwMTc0NAAxMDIzMzUyNDQxNAAwMTE0MjQAIDAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIgIAByb290AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAG90aGVyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
ZG5sCmRubCBtYWNyb3MgZm9yIGNvbmZpZ3VyZS5pbiB0byBkZXRlY3Qgb3BlbnNzbApkbmwgJElk
JApkbmwKCkFDX0RFRlVOKFtDTVVfQ0xBTUFWXSwgWwpBQ19BUkdfV0lUSChjbGFtYXYsWyAgLS13
aXRoLWNsYW1hdj1ESVIJdXNlIENsYW1BViBmcm9tIFBBVEggKHllcyldLAoJd2l0aF9jbGFtYXY9
JHdpdGh2YWwsIHdpdGhfY2xhbWF2PXllcykKICBpZiB0ZXN0ICIkd2l0aF9jbGFtYXYiICE9IG5v
OyB0aGVuCglpZiB0ZXN0IC1kICR3aXRoX2NsYW1hdjsgdGhlbgoJCXNhdmVfQ1BQRkxBR1M9IiRD
UFBGTEFHUyIKCQlzYXZlX0xERkxBR1M9IiRMREZMQUdTIgoJCXNhdmVfTElCUz0iJExJQlMiCgoJ
CUNQUEZMQUdTPSIke0NQUEZMQUdTfSAtSSR7d2l0aF9jbGFtYXZ9L2luY2x1ZGUiCgkJTERGTEFH
Uz0iJExERkxBR1MgLUwke3dpdGhfY2xhbWF2fS9saWIiCgkJQUNfQ0hFQ0tfTElCKHdyYXAsIHJl
cXVlc3RfaW5pdCwgWwoJCQlBQ19DSEVDS19IRUFERVIoY2xhbWF2LmgsLCB3aXRoX2NsYW1hdj1u
byldLAoJCQl3aXRoX2NsYW1hdj1ubywgKQoKCQlDUFBGTEFHUz0iJHNhdmVfQ1BQRkxBR1MiCgkJ
TERGTEFHUz0iJHNhdmVfTERGTEFHUyIKCQlMSUJTPSIkc2F2ZV9MSUJTIgogICAgICAgIGZpCiAg
IGZpCgogICBBQ19NU0dfQ0hFQ0tJTkcoQ2xhbUFWIHN1cHBvcnQpCiAgIEFDX01TR19SRVNVTFQo
JHdpdGhfY2xhbWF2KQogICBMSUJfQ0xBTUFWPSIiCiAgIGlmIHRlc3QgIiR3aXRoX2NsYW1hdiIg
IT0gIm5vIjsgdGhlbgoJQUNfREVGSU5FKEhBVkVfQ0xBTUFWLFtdLFtEbyB3ZSBoYXZlIENsYW1B
Vj9dKQoJaWYgdGVzdCAtZCAiJHdpdGhfY2xhbWF2IjsgdGhlbgoJCUNQUEZMQUdTPSIke0NQUEZM
QUdTfSAtSSR7d2l0aF9jbGFtYXZ9L2luY2x1ZGUiCgkJTElCX0NMQU1BVj0iLUwke3dpdGhfY2xh
bWF2fS9saWIgLWxjbGFtYXYiCgllbHNlCgkJTElCX0NMQU1BVj0iLWxjbGFtYXYiCglmaQogIGZp
CiAgQUNfU1VCU1QoTElCX0NMQU1BVikKXSkKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHNp
ZXZlX2NsYW1hdi5jAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwMDAwNjQ0ADAwMDAwMDAA
MDAwMDAwMQAwMDAwMDAxMDUyNgAxMDIzMzUyNDQ2NwAwMTI1MjcAIDAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdXN0YXIgIAByb290AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAG90aGVyAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALyog
Q09QWVJJR0hUCiAqIENvcHlyaWdodCAoYykgMjAwMi0yMDA1IElnb3IgQnJlemFjCiAqIEFsbCBy
aWdodHMgcmVzZXJ2ZWQuCiAqCiAqIFJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFu
ZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dAogKiBtb2RpZmljYXRpb24sIGFyZSBwZXJt
aXR0ZWQgcHJvdmlkZWQgdGhhdCB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnMKICogYXJlIG1ldDoK
ICogMS4gUmVkaXN0cmlidXRpb25zIG9mIHNvdXJjZSBjb2RlIG11c3QgcmV0YWluIHRoZSBhYm92
ZSBjb3B5cmlnaHQKICogICAgbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhl
IGZvbGxvd2luZyBkaXNjbGFpbWVyLgogKiAyLiBSZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZv
cm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlIGNvcHlyaWdodAogKiAgICBub3RpY2UsIHRoaXMg
bGlzdCBvZiBjb25kaXRpb25zIGFuZCB0aGUgZm9sbG93aW5nIGRpc2NsYWltZXIgaW4gdGhlCiAq
ICAgIGRvY3VtZW50YXRpb24gYW5kL29yIG90aGVyIG1hdGVyaWFscyBwcm92aWRlZCB3aXRoIHRo
ZSBkaXN0cmlidXRpb24uCiAqCiAqIFRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgSUdPUiBC
UkVaQUMuIGBgQVMgSVMnJyBBTkQgQU5ZCiAqIEVYUFJFU1MgT1IgSU1QTElFRCBXQVJSQU5USUVT
LCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFCiAqIElNUExJRUQgV0FSUkFOVElF
UyBPRiBNRVJDSEFOVEFCSUxJVFkgQU5EIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUgogKiBQVVJQ
T1NFIEFSRSBESVNDTEFJTUVELiAgSU4gTk8gRVZFTlQgU0hBTEwgSUdPUiBCUkVaQUMgT1IKICog
SVRTIEVNUExPWUVFUyBPUiBBR0VOVFMgQkUgTElBQkxFIEZPUiBBTlkgRElSRUNULCBJTkRJUkVD
VCwKICogSU5DSURFTlRBTCwgU1BFQ0lBTCwgRVhFTVBMQVJZLCBPUiBDT05TRVFVRU5USUFMIERB
TUFHRVMgKElOQ0xVRElORywKICogQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBT
VUJTVElUVVRFIEdPT0RTIE9SIFNFUlZJQ0VTOyBMT1NTCiAqIE9GIFVTRSwgREFUQSwgT1IgUFJP
RklUUzsgT1IgQlVTSU5FU1MgSU5URVJSVVBUSU9OKSBIT1dFVkVSIENBVVNFRCBBTkQKICogT04g
QU5ZIFRIRU9SWSBPRiBMSUFCSUxJVFksIFdIRVRIRVIgSU4gQ09OVFJBQ1QsIFNUUklDVCBMSUFC
SUxJVFksIE9SCiAqIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJ
U0lORyBJTiBBTlkgV0FZIE9VVCBPRiBUSEUKICogVVNFIE9GIFRISVMgU09GVFdBUkUsIEVWRU4g
SUYgQURWSVNFRCBPRiBUSEUgUE9TU0lCSUxJVFkgT0YgU1VDSAogKiBEQU1BR0UuCiAqIEVORCBD
T1BZUklHSFQgKi8KCi8qICRJZCQgKi8KCiNpbmNsdWRlIDxjb25maWcuaD4KCiNpZmRlZiBIQVZF
X1VOSVNURF9ICiNpbmNsdWRlIDx1bmlzdGQuaD4KI2VuZGlmCgojaW5jbHVkZSA8c3lzbG9nLmg+
CiNpbmNsdWRlIDxzdHJpbmcuaD4KI2luY2x1ZGUgPHN0ZGxpYi5oPgojaW5jbHVkZSA8c3lzL3R5
cGVzLmg+CgojaW5jbHVkZSAiYXBwZW5kLmgiCiNpbmNsdWRlICJhdXRoLmgiCiNpbmNsdWRlICJk
dXBsaWNhdGUuaCIKI2luY2x1ZGUgImV4aXRjb2Rlcy5oIgojaW5jbHVkZSAiZ2xvYmFsLmgiCiNp
bmNsdWRlICJsbXRwX3NpZXZlLmgiCiNpbmNsdWRlICJsbXRwZW5naW5lLmgiCiNpbmNsdWRlICJs
bXRwc3RhdHMuaCIKI2luY2x1ZGUgInNpZXZlX2ludGVyZmFjZS5oIgojaW5jbHVkZSAicHJvdC5o
IgojaW5jbHVkZSAidXRpbC5oIgojaW5jbHVkZSAidmVyc2lvbi5oIgojaW5jbHVkZSAieG1hbGxv
Yy5oIgoKI2lmZGVmIEhBVkVfQ0xBTUFWCgojaW5jbHVkZSA8Y2xhbWF2Lmg+Cgp0eXBlZGVmIHN0
cnVjdCBjbGFtYXZfY3R4IHsKCXN0cnVjdCBjbF9ub2RlICpyb290OwoJc3RydWN0IGNsX2xpbWl0
cyBsaW1pdHM7CgljaGFyICpkYmRpcjsKfSBjbGFtYXZfY3R4OwoKc3RhdGljIGludCBjbGFtYXZf
aW5pdCgpCnsKCWNsYW1hdl9jdHggKmMsIHRtcDsKCWludCByZXQsIG5vPTA7CgoJbWVtc2V0KCZ0
bXAsIDAsIHNpemVvZih0bXApKTsKCgl0bXAuZGJkaXIgPSAoY2hhciAqKWNvbmZpZ19nZXRzdHJp
bmcoSU1BUE9QVF9TSUVWRV9DTEFNQVZfQkFDS0VORF9EQkRJUik7CglpZiAoIXRtcC5kYmRpcikK
CQl0bXAuZGJkaXIgPSAoY2hhciAqKWNsX3JldGRiZGlyKCk7CgoJcmV0ID0gY2xfbG9hZGRiZGly
KHRtcC5kYmRpciwgJih0bXAucm9vdCksICZubyk7CglpZiAocmV0KSB7CgkJc3lzbG9nKExPR19F
UlIsICJjbGFtYXYgZXJyb3IgY2xfbG9hZGRiZGlyOiAlcyIsIGNsX3BlcnJvcihyZXQpKTsKCQly
ZXR1cm4gU0lFVkVfRkFJTDsKCX0KCglyZXQgPSBjbF9idWlsZCh0bXAucm9vdCk7CglpZiAocmV0
KSB7CgkJc3lzbG9nKExPR19FUlIsICJjbGFtYXYgZGF0YWJhc2UgaW5pdGlhbGl6YXRpb24gZXJy
b3I6ICVzIiwgY2xfc3RyZXJyb3IocmV0KSk7OwoJCWNsX2ZyZWUodG1wLnJvb3QpOwoJCXJldHVy
biBTSUVWRV9GQUlMOwoJfQoKCXRtcC5saW1pdHMubWF4ZmlsZXMgPSBjb25maWdfZ2V0aW50KElN
QVBPUFRfU0lFVkVfQ0xBTUFWX0JBQ0tFTkRfTUFYRklMRVMpOwoJdG1wLmxpbWl0cy5tYXhmaWxl
c2l6ZSA9IGNvbmZpZ19nZXRpbnQoSU1BUE9QVF9TSUVWRV9DTEFNQVZfQkFDS0VORF9NQVhGSUxF
U0laRSk7Cgl0bXAubGltaXRzLm1heHJlY2xldmVsID0gY29uZmlnX2dldGludChJTUFQT1BUX1NJ
RVZFX0NMQU1BVl9CQUNLRU5EX01BWFJFQ0xFVkVMKTsKCXRtcC5saW1pdHMubWF4cmF0aW8gPSBj
b25maWdfZ2V0aW50KElNQVBPUFRfU0lFVkVfQ0xBTUFWX0JBQ0tFTkRfTUFYUkFUSU8pOwoJdG1w
LmxpbWl0cy5hcmNoaXZlbWVtbGltID0gY29uZmlnX2dldHN3aXRjaChJTUFQT1BUX1NJRVZFX0NM
QU1BVl9CQUNLRU5EX0FSQ0hJVkVNRU1MSU0pOwoKCWMgPSB4bWFsbG9jKHNpemVvZihjbGFtYXZf
Y3R4KSk7CglpZiAoIWMpIHsKCQlzeXNsb2coTE9HX0VSUiwgImNhbm5vdCBhbGxvY2F0ZSBtZW1l
b3J5Iik7OwoJCWNsX2ZyZWUodG1wLnJvb3QpOwoJCXJldHVybiBTSUVWRV9GQUlMOwoJfQoJKmMg
PSB0bXA7CglzaWV2ZV9jbGFtYXYuY29udGV4dCA9IGM7CgkKCXJldHVybiBTSUVWRV9PSzsKfQoK
c3RhdGljIGludCBjbGFtYXZfc2NhbigKICAgIHZvaWQgKmNvbnRleHQsIAogICAgbWVzc2FnZV9k
YXRhX3QgKm0sCiAgICBjaGFyICoqdmFsKQp7CglpbnQgZmQ7CglpbnQgcmV0LCBzaXplID0gMDsK
CWNvbnN0IGNoYXIgKnZpcm5hbWU7CgljbGFtYXZfY3R4ICpjID0gY29udGV4dDsKCgkqdmFsID0g
IjAiOwoKCWlmICghYyB8fCAhYy0+cm9vdCkgewoJCXN5c2xvZyhMT0dfRVJSLCAiY2xhbWF2IGVu
dmlyb25tZW50IG5vdCBpbml0aWFsaXplZCIpOzsKCQlyZXR1cm4gU0lFVkVfRkFJTDsKCX0KCglw
cm90X3Jld2luZChtLT5kYXRhKTsKCXJldCA9IGNsX3NjYW5kZXNjKG0tPmRhdGEtPmZkLCAmdmly
bmFtZSwgJnNpemUsIGMtPnJvb3QsICYoYy0+bGltaXRzKSwgQ0xfU0NBTl9TVERPUFQpOwoJaWYg
KHJldCA9PSBDTF9WSVJVUykgewoJCSp2YWwgPSAiMTAiOwoJCXN5c2xvZyhMT0dfTk9USUNFLCAi
Y2xhbWF2IGRldGVjdGVkIHZpcnVzICglcykiLCB2aXJuYW1lKTsKCQlyZXR1cm4gU0lFVkVfT0s7
Cgl9CgoJaWYgKHJldCAhPSBDTF9DTEVBTikgewoJCXN5c2xvZyhMT0dfTk9USUNFLCAiY2xhbWF2
IGVycm9yIGluIHZpcnVzIGRldGVjdGlvbjogJXMiLCBjbF9wZXJyb3IocmV0KSk7CgkJcmV0dXJu
IFNJRVZFX09LOwoJfQoKCSp2YWwgPSAiMSI7CglyZXR1cm4gU0lFVkVfT0s7Cn0KCnN0YXRpYyB2
b2lkIGNsYW1hdl9mcmVlKAogICAgY2hhciAqY29udGV4dCkKewoJY2xhbWF2X2N0eCAqYyA9IChj
bGFtYXZfY3R4ICopY29udGV4dDsKCglpZiAoYykgewoJCWlmIChjLT5yb290KQoJCQljbF9mcmVl
KGMtPnJvb3QpOwoJCWZyZWUoYyk7Cgl9CgoJcmV0dXJuOwp9IAoKc2lldmVfYmFja2VuZF90IHNp
ZXZlX2NsYW1hdiA9IAp7CiAgICAiY2xhbWF2IiwKICAgIE5VTEwsCiAgICAmY2xhbWF2X2luaXQs
CiAgICAmY2xhbWF2X3NjYW4sCiAgICAmY2xhbWF2X2ZyZWUgCn07CgojZWxzZSAvKiBIQVZFX0NM
QU1BViAqLwoKc3RhdGljIGludCBjbGFtYXZfc2NhbigKICAgIHZvaWQgKmNvbnRleHQgX19hdHRy
aWJ1dGVfXygodW51c2VkKSksIAogICAgbWVzc2FnZV9kYXRhX3QgKm0gX19hdHRyaWJ1dGVfXyAo
KHVudXNlZCkpLAogICAgY2hhciAqKnZhbCkKewoJc3lzbG9nKExPR19FUlIsICJjbGFtYXYgc2ll
dmUgYmFja2VuZCBub3QgY29tcGlsZWQtaW4iKTsKCXJldHVybiBTSUVWRV9GQUlMOwp9CgpzaWV2
ZV9iYWNrZW5kX3Qgc2lldmVfY2xhbWF2ID0gCnsKICAgICJjbGFtYXYiLAogICAgTlVMTCwKICAg
IE5VTEwsCiAgICAmY2xhbWF2X3NjYW4sCiAgICBOVUxMIAp9OwoKI2VuZGlmCgAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</data>        

          </attachment>
      

    </bug>

</bugzilla>