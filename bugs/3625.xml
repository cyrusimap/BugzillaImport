<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3625</bug_id>
          
          <creation_ts>2012-01-11 16:04 EDT</creation_ts>
          <short_desc>_sasl_auxprop_lookup is broken in 2.1.25 if no auxprop modules are built</short_desc>
          <delta_ts>2012-02-08 09:41:20 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus SASL</product>
          <component>plugins</component>
          <version>2.1.25</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>DUPLICATE</resolution>
          <dup_id>3590</dup_id>
          
          
          
          <priority>P1</priority>
          <bug_severity>blocker</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Quanah Gibson-Mount">quanah@zimbra.com</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          <cc>Alexey.Melnikov@isode.com</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Quanah Gibson-Mount">quanah@zimbra.com</who>
            <bug_when>2012-01-11 16:04:07 EDT</bug_when>
            <thetext>The reworking of _sasl_auxprop_lookup in 2.1.25 is completely broken.  By creating a return status that defaults to SASL_NOMECH, if someone builds cyrus-sasl with no auxprop mechanisms, all authentications fail because this one function cannot load the auxprop modules, since they don&apos;t exist.

This is even somewhat noted in one comment in the function itself:

        /* TODO: Ideally, each auxprop plugin should be marked if its failure
           should be ignored or treated as a fatal error of the whole lookup. */


I was able to get 2.1.25 to correctly work when there are no auxprop plugins with the following patch:

--- auxprop.c.orig      2012-01-11 12:34:03.948477379 -0800
+++ auxprop.c   2012-01-11 12:34:45.878474663 -0800
@@ -917,7 +917,10 @@
                         (sasl_callback_ft *)&amp;getopt,
                         &amp;context) == SASL_OK) {
        ret = getopt(context, NULL, &quot;auxprop_plugin&quot;, &amp;plist, NULL);
-       if(ret != SASL_OK) plist = NULL;
+       if(ret != SASL_OK) {
+               plist = NULL;
+               result = SASL_OK;
+       }
     }

     if(!plist) {


I.e., if we are not able to load the aux prop plugins when we call getopt, set plist to NULL and set the result to SASL_OK.

This is probably not the best solution in the world, as I imagine there may be other reasons why the getopt call here may fail, but it does return the behavior of the function to matching 2.1.23, and allows builds w/o auxprop to function correctly.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Alexey Melnikov">Alexey.Melnikov@isode.com</who>
            <bug_when>2012-02-08 09:41:20 EDT</bug_when>
            <thetext>

*** This bug has been marked as a duplicate of bug 3590 ***</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>