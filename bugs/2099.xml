<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2099</bug_id>
          
          <creation_ts>2003-07-03 12:23 EDT</creation_ts>
          <short_desc>crypt() support for auxprop password verifier</short_desc>
          <delta_ts>2009-03-04 02:36:02 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus SASL</product>
          <component>SASL</component>
          <version>2.1.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>NEW</bug_status>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rob Siemborski">rjs3@andrew.cmu.edu</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          <cc>bfg@noviforum.si</cc>
    
    <cc>opi@gmx.at</cc>
    
    <cc>tomasz@brzezina.pl</cc>
    
    <cc>vvk@altlinux.org</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-03 12:23:03 EDT</bug_when>
            <thetext>Branko F. Granar&gt;&gt;

Attached patch adds the following functionality to cyrus sasl 2.1.14:

checkpw:
        + crypt(3) passwords support
        (supported types are:
                + md5 crypt (12 char salt)
                + blowfish crypt (16 char salt)
                + traditional crypt (2 char salt)

New configuration directives:
        + password_format

        valid values are:
        + crypt (this turns on modular crypt format (md5, blowfish))
        + crypt_trad (traditional crypt format)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-03 12:26:05 EDT</bug_when>
            <thetext>Created an attachment (id=200)
patch as submitted

This is probably something we would like to have, even if it is pretty big and
hairy.	I think most of my concerns are sylistic (we could be using an enum,
and a switch statement).  I&apos;d also like the cleartext default to have a
well-known value.  That&apos;s mostly a documentation thing though.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-03 12:27:27 EDT</bug_when>
            <thetext>We want documentation in doc/options.html also.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-26 12:49:33 EDT</bug_when>
            <thetext>and autoconf detection of how to properly link in the crypt() function</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-28 12:19:48 EDT</bug_when>
            <thetext>We also probably want to use a different property name than userPassword for this.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-08-25 14:47:41 EDT</bug_when>
            <thetext>I&apos;m also now pretty much convinced that the goal here should be &apos;SQL saslauthd
module&apos; so that we don&apos;t confuse the issue of auxprop and saslauthd any further.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-08-25 15:50:04 EDT</bug_when>
            <thetext>From: \&quot;Branko F. Graènar\&quot;&quot; &lt;bfg@noviforum.si&gt;

Well, i disagree with this issue.

Therefore i will need to run saslauthd in order to check crypt(3)
passwords?!? This is silly, IMHO.

My arguments AGAINST integration with saslauthd are:

1.) saslauthd can&apos;t utilize mysql auxprop plugin as far i know:

# /export/software/cyrus-sasl/sbin/saslauthd -a mysql
saslauthd[95065] :set_auth_mech   : unknown authentication mechanism:
mysql

This means, that i will be unable to check crypted passwords from my
mysql database.

2.) saslauthd is another point of failure in system. If someone kills
saslauthd, authentication is not possible, even password backend
(file, sql, ldap) is available and ready. I think, that this is a
really important issue.

3.) saslauthd is difficult to use from chroot(3) environments. It&apos;s
nearly impossible to configure several chrooted daemons (each in it&apos;s
own chroot) to use saslauthd simultaneously.

What are arguments FOR integration in saslauthd? What is wrong with
new configuration parameter for PLAIN/LOGIN authentication mechanism,
which would specify password format (really cleartext, traditional
crypt, md5 crypt, blowfish crypt and possible more)?
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-08-25 15:54:28 EDT</bug_when>
            <thetext>To answer your questions:

(1) would obviously need to be solved to make this useful at all.  
but I don&apos;t consider it a serious issue.

(2) saslauthd can maintain a single connection to the mysql server, as opposed
to continually constructing and tearing them down like an auxprop plugin has to

&gt; What are arguments FOR integration in saslauthd?

Right now we have a hard enough time with users who don&apos;t understand that
saslauthd does password verification and auxprop plugins are necessary for the
shared secret mechanisms.  Changing this to be &quot;saslauthd for most of the time
with password verification, except for when you want to use crypted passwords
out of mysql, and then you need auxprop, which works for shared secret methods,
unless you are storing crypted versions, which will cause shared secrets to
break&quot; is a support disaster waiting to happen.

Encouraging people to store passwords that are accessed by an auxprop method but
aren&apos;t useful for anything but straight verification is going to cause us
further headaches.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Alexander Opitz">opi@gmx.at</who>
            <bug_when>2004-08-17 19:57:59 EDT</bug_when>
            <thetext>Will this patch included in the near feature?

There are so many (partly stupid) patches around in the world and many documents
(some with mistakes) but when will this problem be resolved on the side of SASL?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Vladimir V. Kamarzin">vvk@altlinux.org</who>
            <bug_when>2008-11-10 11:46:04 EDT</bug_when>
            <thetext>Hey, what status of this bug now? There is the patch for latest stable cyrus-sasl2:
http://netilium.org/~mad/cyrus-sasl-2.1.22-crypt.patch</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Tomasz Brzezina">tomasz@brzezina.pl</who>
            <bug_when>2009-03-04 02:36:02 EDT</bug_when>
            <thetext>For some reason this patch brokes compilation - but I can&apos;t find why</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>200</attachid>
            <date>2003-07-03 12:26 EDT</date>
            <desc>patch as submitted</desc>
            <filename>thepatch.diff</filename>
            <type>text/plain</type>
            <size>8749</size>
            <attacher>rjs3@andrew.cmu.edu</attacher>
            
              <data encoding="base64">ZGlmZiAtciAtQyAxMCBjeXJ1cy1zYXNsLTIuMS4xNC5vcmlnL2xpYi9jaGVja3B3LmMgY3lydXMt
c2FzbC0yLjEuMTQvbGliL2NoZWNrcHcuYwoqKiogY3lydXMtc2FzbC0yLjEuMTQub3JpZy9saWIv
Y2hlY2twdy5jCVdlZCBNYXIgMTkgMTk6MjU6MjcgMjAwMwotLS0gY3lydXMtc2FzbC0yLjEuMTQv
bGliL2NoZWNrcHcuYwlUaHUgSnVsICAzIDE3OjM2OjA2IDIwMDMKKioqKioqKioqKioqKioqCioq
KiA4NiwxMDUgKioqKgotLS0gODYsMTEwIC0tLS0KICAKICAjaWYgZGVmaW5lZChIQVZFX1BXQ0hF
Q0spIHx8IGRlZmluZWQoSEFWRV9TQVNMQVVUSEQpCiAgIyBpbmNsdWRlIDxlcnJuby5oPgogICMg
aW5jbHVkZSA8c3lzL3R5cGVzLmg+CiAgIyBpbmNsdWRlIDxzeXMvc29ja2V0Lmg+CiAgIyBpbmNs
dWRlIDxzeXMvdW4uaD4KICAjIGlmZGVmIEhBVkVfVU5JU1REX0gKICAjICBpbmNsdWRlIDx1bmlz
dGQuaD4KICAjIGVuZGlmCiAgCisgLyogY2xlYXJ0ZXh0IHBhc3N3b3JkIGZvcm1hdHMgKi8KKyAj
ZGVmaW5lIFBBU1NXT1JEX0ZPUk1BVF9DTEVBUlRFWFQgMQorICNkZWZpbmUgUEFTU1dPUkRfRk9S
TUFUX0NSWVBUIDIKKyAjZGVmaW5lIFBBU1NXT1JEX0ZPUk1BVF9DUllQVFRSQUQgMworIAogIGV4
dGVybiBpbnQgZXJybm87CiAgI2VuZGlmCiAgCiAgCiAgLyogd2Ugc3RvcmUgdGhlIGZvbGxvd2lu
ZyBzZWNyZXQgdG8gY2hlY2sgcGxhaW50ZXh0IHBhc3N3b3JkczoKICAgKgogICAqIDxzYWx0PiBc
MCA8c2VjcmV0PgogICAqCiAgICogd2hlcmUgPHNlY3JldD4gPSBNRDUoPHNhbHQ+LCAic2FzbGRi
IiwgPHBhc3M+KQogICAqLwoqKioqKioqKioqKioqKioKKioqIDEyMSwxNTggKioqKgogICAgICBf
c2FzbF9NRDVVcGRhdGUoJmN0eCwgInNhc2xkYiIsIDYpOwogICAgICBfc2FzbF9NRDVVcGRhdGUo
JmN0eCwgcGFzc3dkLCBwYXNzbGVuKTsKICAgICAgbWVtY3B5KCgqc2VjcmV0KS0+ZGF0YSwgc2Fs
dCwgMTYpOwogICAgICAoKnNlY3JldCktPmRhdGFbMTZdID0gJ1wwJzsKICAgICAgX3Nhc2xfTUQ1
RmluYWwoKCpzZWNyZXQpLT5kYXRhICsgMTcsICZjdHgpOwogICAgICAoKnNlY3JldCktPmxlbiA9
IHNlY19sZW47CiAgICAgIAogICAgICByZXR1cm4gU0FTTF9PSzsKICB9CiAgCiAgLyogZXJhc2Ug
JiBkaXNwb3NlIG9mIGEgc2FzbF9zZWNyZXRfdAogICAqLwogIHN0YXRpYyBpbnQgYXV4cHJvcF92
ZXJpZnlfcGFzc3dvcmQoc2FzbF9jb25uX3QgKmNvbm4sCiAgCQkJCSAgIGNvbnN0IGNoYXIgKnVz
ZXJzdHIsCiAgCQkJCSAgIGNvbnN0IGNoYXIgKnBhc3N3ZCwKICAJCQkJICAgY29uc3QgY2hhciAq
c2VydmljZSBfX2F0dHJpYnV0ZV9fKCh1bnVzZWQpKSwKICAJCQkJICAgY29uc3QgY2hhciAqdXNl
cl9yZWFsbSBfX2F0dHJpYnV0ZV9fKCh1bnVzZWQpKSkKICB7CiAgICAgIGludCByZXQgPSBTQVNM
X0ZBSUw7CiAgICAgIGNoYXIgKnVzZXJpZCA9IE5VTEw7CiAgICAgIGNoYXIgKnJlYWxtID0gTlVM
TDsKICAgICAgaW50IHJlc3VsdCA9IFNBU0xfT0s7CiAgICAgIHNhc2xfc2VydmVyX2Nvbm5fdCAq
c2Nvbm4gPSAoc2FzbF9zZXJ2ZXJfY29ubl90ICopY29ubjsKICAgICAgY29uc3QgY2hhciAqcGFz
c3dvcmRfcmVxdWVzdFtdID0geyBTQVNMX0FVWF9QQVNTV09SRCwKICAJCQkJICAgICAgICIqY211
c2FzbHNlY3JldFBMQUlOIiwKICAJCQkJICAgICAgIE5VTEwgfTsKICAgICAgc3RydWN0IHByb3B2
YWwgYXV4cHJvcF92YWx1ZXNbM107CiEgICAgIAogICAgICBpZiAoIWNvbm4gfHwgIXVzZXJzdHIp
CiAgCXJldHVybiBTQVNMX0JBRFBBUkFNOwogIAogICAgICAvKiBXZSBuZWVkIHRvIGNsZWFyIGFu
eSBwcmV2aW91cyByZXN1bHRzIGFuZCByZS1jYW5vbmlmeSB0byAKICAgICAgICogZW5zdXJlIGNv
cnJlY3RuZXNzICovCiAgCiAgICAgIHByb3BfY2xlYXIoc2Nvbm4tPnNwYXJhbXMtPnByb3BjdHgs
IDApOwogIAkKICAgICAgLyogZW5zdXJlIGl0cyByZXF1ZXN0ZWQgKi8KICAgICAgcmVzdWx0ID0g
cHJvcF9yZXF1ZXN0KHNjb25uLT5zcGFyYW1zLT5wcm9wY3R4LCBwYXNzd29yZF9yZXF1ZXN0KTsK
LS0tIDEyNiwyMjEgLS0tLQogICAgICBfc2FzbF9NRDVVcGRhdGUoJmN0eCwgInNhc2xkYiIsIDYp
OwogICAgICBfc2FzbF9NRDVVcGRhdGUoJmN0eCwgcGFzc3dkLCBwYXNzbGVuKTsKICAgICAgbWVt
Y3B5KCgqc2VjcmV0KS0+ZGF0YSwgc2FsdCwgMTYpOwogICAgICAoKnNlY3JldCktPmRhdGFbMTZd
ID0gJ1wwJzsKICAgICAgX3Nhc2xfTUQ1RmluYWwoKCpzZWNyZXQpLT5kYXRhICsgMTcsICZjdHgp
OwogICAgICAoKnNlY3JldCktPmxlbiA9IHNlY19sZW47CiAgICAgIAogICAgICByZXR1cm4gU0FT
TF9PSzsKICB9CiAgCisgLyogd2VlZHMgb3V0IGNyeXB0KDMpIHBhc3N3b3JkJ3Mgc2FsdCAqLwor
IGludCBnZXRfc2FsdCAoY2hhciAqZGVzdCwgY2hhciAqc3JjLCBpbnQgZm9ybWF0KSB7CisgCS8q
IGhvdyBtYW55IGNoYXJhY3RlcnMgaXMgc2FsdCBsb25nPyAqLworIAlpbnQgbnVtOworIAorIAlp
ZiAoZm9ybWF0ID09IFBBU1NXT1JEX0ZPUk1BVF9DUllQVCkgeworIAkJaWYgKHNyY1sxXSA9PSAn
MScpCisgCQkJbnVtID0gMTI7CS8vIG1kNSBjcnlwdAorIAkJZWxzZSBpZiAoc3JjWzFdID09ICcy
JykKKyAJCQludW0gPSAxNjsJLy8gYmxvd2Zpc2ggY3J5cHQKKyAJCWVsc2UKKyAJCQludW0gPSAy
OwkvLyB0cmFkaXRpb25hbCBjcnlwdAorIAl9CisgCWVsc2UgaWYgKGZvcm1hdCA9PSBQQVNTV09S
RF9GT1JNQVRfQ1JZUFRUUkFEKSB7CisgCQludW0gPSAyOworIAl9CisgCisgCS8qIHdlZWQgaXQg
b3V0ICEgKi8KKyAJc3RybmNweShkZXN0LCBzcmMsIG51bSk7CisgCisgCS8qIHRlcm1pbmF0ZSBz
dHJpbmcgKi8KKyAJZGVzdFtudW1dID0gJ1wwJzsKKyAKKyAJcmV0dXJuIDE7CisgfQorIAogIC8q
IGVyYXNlICYgZGlzcG9zZSBvZiBhIHNhc2xfc2VjcmV0X3QKICAgKi8KICBzdGF0aWMgaW50IGF1
eHByb3BfdmVyaWZ5X3Bhc3N3b3JkKHNhc2xfY29ubl90ICpjb25uLAogIAkJCQkgICBjb25zdCBj
aGFyICp1c2Vyc3RyLAogIAkJCQkgICBjb25zdCBjaGFyICpwYXNzd2QsCiAgCQkJCSAgIGNvbnN0
IGNoYXIgKnNlcnZpY2UgX19hdHRyaWJ1dGVfXygodW51c2VkKSksCiAgCQkJCSAgIGNvbnN0IGNo
YXIgKnVzZXJfcmVhbG0gX19hdHRyaWJ1dGVfXygodW51c2VkKSkpCiAgewogICAgICBpbnQgcmV0
ID0gU0FTTF9GQUlMOwogICAgICBjaGFyICp1c2VyaWQgPSBOVUxMOwogICAgICBjaGFyICpyZWFs
bSA9IE5VTEw7CiAgICAgIGludCByZXN1bHQgPSBTQVNMX09LOwogICAgICBzYXNsX3NlcnZlcl9j
b25uX3QgKnNjb25uID0gKHNhc2xfc2VydmVyX2Nvbm5fdCAqKWNvbm47CiAgICAgIGNvbnN0IGNo
YXIgKnBhc3N3b3JkX3JlcXVlc3RbXSA9IHsgU0FTTF9BVVhfUEFTU1dPUkQsCiAgCQkJCSAgICAg
ICAiKmNtdXNhc2xzZWNyZXRQTEFJTiIsCiAgCQkJCSAgICAgICBOVUxMIH07CiAgICAgIHN0cnVj
dCBwcm9wdmFsIGF1eHByb3BfdmFsdWVzWzNdOwohIAohICAgICAvKiBmb3IgcGFzc3dvcmQgZm9y
bWF0IGNoZWNrICovCiEgICAgIHNhc2xfZ2V0b3B0X3QgKmdldG9wdDsKISAgICAgdm9pZCAqY29u
dGV4dDsKISAgICAgY29uc3QgY2hhciAqcCA9IE5VTEw7CiEgICAgIGNoYXIgcGFzc19mb3JtYXRf
c3RyWzExXTsKISAgICAgLyoKISAgICAgICogTUQ1OiAxMiBjaGFyIHNhbHQKISAgICAgICogQkxP
V0ZJU0g6IDE2IGNoYXIgc2FsdAohICAgICAgKi8KISAgICAgY2hhciBzYWx0WzE3XTsKISAgICAg
aW50IHBhc3N3b3JkX2Zvcm1hdDsKISAKISAKISAJLyogY2hlY2sgZm9yIHBhc3N3b3JkIGZvcm1h
dCAqLwohIAlpZiAoX3Nhc2xfZ2V0Y2FsbGJhY2soY29ubiwgU0FTTF9DQl9HRVRPUFQsICZnZXRv
cHQsICZjb250ZXh0KSA9PSBTQVNMX09LKSB7CiEgCQlnZXRvcHQoY29udGV4dCwgTlVMTCwgInBh
c3N3b3JkX2Zvcm1hdCIsICZwLCBOVUxMKTsKISAJfQohIAlpZiAocCkgewohIAkJc3RybmNweShw
YXNzX2Zvcm1hdF9zdHIsIHAsIDkpOwohIAohIAkJaWYgKHN0cm5jbXAocGFzc19mb3JtYXRfc3Ry
LCAiY3J5cHQiLCAxMSkgPT0gMCkKISAJCQlwYXNzd29yZF9mb3JtYXQgPSBQQVNTV09SRF9GT1JN
QVRfQ1JZUFQ7CiEgCQllbHNlIGlmIChzdHJuY21wKHBhc3NfZm9ybWF0X3N0ciwgImNyeXB0X3Ry
YWQiLCAxMSkgPT0gMCkKISAJCQlwYXNzd29yZF9mb3JtYXQgPSBQQVNTV09SRF9GT1JNQVRfQ1JZ
UFRUUkFEOwohIAkJZWxzZQohIAkJCXBhc3N3b3JkX2Zvcm1hdCA9IFBBU1NXT1JEX0ZPUk1BVF9D
TEVBUlRFWFQ7CiEgCiEgCX0gZWxzZSB7CiEgCQlwYXNzd29yZF9mb3JtYXQgPSBQQVNTV09SRF9G
T1JNQVRfQ0xFQVJURVhUOwohIAl9CiEgCQohIAkKICAgICAgaWYgKCFjb25uIHx8ICF1c2Vyc3Ry
KQogIAlyZXR1cm4gU0FTTF9CQURQQVJBTTsKICAKICAgICAgLyogV2UgbmVlZCB0byBjbGVhciBh
bnkgcHJldmlvdXMgcmVzdWx0cyBhbmQgcmUtY2Fub25pZnkgdG8gCiAgICAgICAqIGVuc3VyZSBj
b3JyZWN0bmVzcyAqLwogIAogICAgICBwcm9wX2NsZWFyKHNjb25uLT5zcGFyYW1zLT5wcm9wY3R4
LCAwKTsKICAJCiAgICAgIC8qIGVuc3VyZSBpdHMgcmVxdWVzdGVkICovCiAgICAgIHJlc3VsdCA9
IHByb3BfcmVxdWVzdChzY29ubi0+c3BhcmFtcy0+cHJvcGN0eCwgcGFzc3dvcmRfcmVxdWVzdCk7
CioqKioqKioqKioqKioqKgoqKiogMTc3LDIyNyAqKioqCiAgICAgICAgICAKICAgICAgLyogSXQg
aXMgcG9zc2libGUgZm9yIHVzIHRvIGdldCB1c2VmdWwgaW5mb3JtYXRpb24gb3V0IG9mIGp1c3QK
ICAgICAgICogdGhlIGxvb2t1cCwgc28gd2Ugd29uJ3QgY2hlY2sgdGhhdCB3ZSBoYXZlIGEgcGFz
c3dvcmQgdW50aWwgbm93ICovCiAgICAgIGlmKCFwYXNzd2QpIHsKICAJcmV0ID0gU0FTTF9CQURQ
QVJBTTsKICAJZ290byBkb25lOwogICAgICB9CiAgCiAgICAgIC8qIEF0IHRoZSBwb2ludCB0aGlz
IGhhcyBiZWVuIGNhbGxlZCwgdGhlIHVzZXJuYW1lIGhhcyBiZWVuIGNhbm9uaWZpZWQKICAgICAg
ICogYW5kIHdlJ3ZlIGRvbmUgdGhlIGF1eHByb3AgbG9va3VwLiAgVGhpcyBzaG91bGQgYmUgZWFz
eS4gKi8KLSAgICAgaWYoYXV4cHJvcF92YWx1ZXNbMF0ubmFtZQotICAgICAgICAmJiBhdXhwcm9w
X3ZhbHVlc1swXS52YWx1ZXMKLSAgICAgICAgJiYgYXV4cHJvcF92YWx1ZXNbMF0udmFsdWVzWzBd
Ci0gICAgICAgICYmICFzdHJjbXAoYXV4cHJvcF92YWx1ZXNbMF0udmFsdWVzWzBdLCBwYXNzd2Qp
KSB7Ci0gCS8qIFdlIGhhdmUgYSBwbGFpbnRleHQgdmVyc2lvbiBhbmQgaXQgbWF0Y2hlZCEgKi8K
LSAJcmV0dXJuIFNBU0xfT0s7Ci0gICAgIH0gZWxzZSBpZihhdXhwcm9wX3ZhbHVlc1sxXS5uYW1l
Ci0gCSAgICAgICYmIGF1eHByb3BfdmFsdWVzWzFdLnZhbHVlcwotIAkgICAgICAmJiBhdXhwcm9w
X3ZhbHVlc1sxXS52YWx1ZXNbMF0pIHsKLSAJY29uc3QgY2hhciAqZGJfc2VjcmV0ID0gYXV4cHJv
cF92YWx1ZXNbMV0udmFsdWVzWzBdOwotIAlzYXNsX3NlY3JldF90ICpjb25zdHJ1Y3Q7Ci0gCQot
IAlyZXQgPSBfc2FzbF9tYWtlX3BsYWluX3NlY3JldChkYl9zZWNyZXQsIHBhc3N3ZCwKLSAJCQkJ
ICAgICAgc3RybGVuKHBhc3N3ZCksCi0gCQkJCSAgICAgICZjb25zdHJ1Y3QpOwotIAlpZiAocmV0
ICE9IFNBU0xfT0spIHsKLSAJICAgIGdvdG8gZG9uZTsKLSAJfQogIAohIAlpZiAoIW1lbWNtcChk
Yl9zZWNyZXQsIGNvbnN0cnVjdC0+ZGF0YSwgY29uc3RydWN0LT5sZW4pKSB7CiEgCSAgICAvKiBw
YXNzd29yZCB2ZXJpZmllZCEgKi8KISAJICAgIHJldCA9IFNBU0xfT0s7CiEgCX0gZWxzZSB7CiEg
CSAgICAvKiBwYXNzd29yZHMgZG8gbm90IG1hdGNoICovCiEgCSAgICByZXQgPSBTQVNMX0JBREFV
VEg7CiEgCX0KISAKISAJc2FzbF9GUkVFKGNvbnN0cnVjdCk7CiEgICAgIH0gZWxzZSB7CiAgCS8q
IHBhc3N3b3JkcyBkbyBub3QgbWF0Y2ggKi8KISAJcmV0ID0gU0FTTF9CQURBVVRIOwogICAgICB9
CiAgCiAgIGRvbmU6CiAgICAgIGlmICh1c2VyaWQpIHNhc2xfRlJFRSh1c2VyaWQpOwogICAgICBp
ZiAocmVhbG0pICBzYXNsX0ZSRUUocmVhbG0pOwogIAogICAgICAvKiBXZSdyZSBub3QgZ29pbmcg
dG8gZXJhc2UgdGhlIHByb3BlcnR5IGhlcmUgYmVjYXVzZSBvdGhlciBwZW9wbGUKICAgICAgICog
bWF5IHdhbnQgaXQgKi8KICAgICAgcmV0dXJuIHJldDsKICB9Ci0tLSAyNDAsMzI0IC0tLS0KICAg
ICAgICAgIAogICAgICAvKiBJdCBpcyBwb3NzaWJsZSBmb3IgdXMgdG8gZ2V0IHVzZWZ1bCBpbmZv
cm1hdGlvbiBvdXQgb2YganVzdAogICAgICAgKiB0aGUgbG9va3VwLCBzbyB3ZSB3b24ndCBjaGVj
ayB0aGF0IHdlIGhhdmUgYSBwYXNzd29yZCB1bnRpbCBub3cgKi8KICAgICAgaWYoIXBhc3N3ZCkg
ewogIAlyZXQgPSBTQVNMX0JBRFBBUkFNOwogIAlnb3RvIGRvbmU7CiAgICAgIH0KICAKICAgICAg
LyogQXQgdGhlIHBvaW50IHRoaXMgaGFzIGJlZW4gY2FsbGVkLCB0aGUgdXNlcm5hbWUgaGFzIGJl
ZW4gY2Fub25pZmllZAogICAgICAgKiBhbmQgd2UndmUgZG9uZSB0aGUgYXV4cHJvcCBsb29rdXAu
ICBUaGlzIHNob3VsZCBiZSBlYXN5LiAqLwogIAohICAgICAvKiBjaGVjayBwYXNzd29yZCwgYnV0
IHdpdGggc3BlY2lmaWVkIHBhc3N3b3JkIGZvcm1hdCAqLwohICAgICBpZiAocGFzc3dvcmRfZm9y
bWF0ID09IFBBU1NXT1JEX0ZPUk1BVF9DUllQVCkgewohIAkgICAgZ2V0X3NhbHQoc2FsdCwgYXV4
cHJvcF92YWx1ZXNbMF0udmFsdWVzWzBdLCBQQVNTV09SRF9GT1JNQVRfQ1JZUFQpOwohIAohIAkg
ICAgLyogY29tcGFyZSBwYXNzd29yZHMgKi8KISAJICAgIGlmIChhdXhwcm9wX3ZhbHVlc1swXS5u
YW1lICYmCiEgCSAgICAgICAgYXV4cHJvcF92YWx1ZXNbMF0udmFsdWVzICYmCiEgCQlhdXhwcm9w
X3ZhbHVlc1swXS52YWx1ZXNbMF0gJiYKISAJCXN0cmNtcChjcnlwdChwYXNzd2QsIHNhbHQpLCBh
dXhwcm9wX3ZhbHVlc1swXS52YWx1ZXNbMF0pID09IDAKISAJICAgICAgICkgewohIAkJICAgIHJl
dHVybiBTQVNMX09LOwohIAkJIH0KISAgICAgfQohICAgICBlbHNlIGlmIChwYXNzd29yZF9mb3Jt
YXQgPT0gUEFTU1dPUkRfRk9STUFUX0NSWVBUVFJBRCkgewohIAkgICAgZ2V0X3NhbHQoc2FsdCwg
YXV4cHJvcF92YWx1ZXNbMF0udmFsdWVzWzBdLCBQQVNTV09SRF9GT1JNQVRfQ1JZUFRUUkFEKTsK
ISAJICAgIAohIAkgICAgLyogY29tcGFyZSBwYXNzd29yZHMgKi8KISAJICAgIGlmIChhdXhwcm9w
X3ZhbHVlc1swXS5uYW1lICYmCiEgCSAgICAgICAgYXV4cHJvcF92YWx1ZXNbMF0udmFsdWVzICYm
CiEgCQlhdXhwcm9wX3ZhbHVlc1swXS52YWx1ZXNbMF0gJiYKISAJCXN0cmNtcChjcnlwdChwYXNz
d2QsIHNhbHQpLCBhdXhwcm9wX3ZhbHVlc1swXS52YWx1ZXNbMF0pID09IDAKISAJICAgICAgICkg
ewohIAkJICAgIHJldHVybiBTQVNMX09LOwohIAkJIH0KISAgICAgfQohICAgICBlbHNlIGlmIChw
YXNzd29yZF9mb3JtYXQgPT0gUEFTU1dPUkRfRk9STUFUX0NMRUFSVEVYVCkgewohIAkgICAgCiEg
CSAgICAvKiBjb21wYXJlIHBhc3N3b3JkcyAqLwohIAkgICAgaWYgKGF1eHByb3BfdmFsdWVzWzBd
Lm5hbWUgJiYKISAJICAgICAgICBhdXhwcm9wX3ZhbHVlc1swXS52YWx1ZXMgJiYKISAJCWF1eHBy
b3BfdmFsdWVzWzBdLnZhbHVlc1swXSAmJgohIAkJc3RyY21wKGF1eHByb3BfdmFsdWVzWzBdLnZh
bHVlc1swXSwgcGFzc3dkKSA9PSAwCiEgCSAgICAgICApIHsKISAJCSAgICByZXR1cm4gU0FTTF9P
SzsKISAJCSB9CiEgICAgIH0KISAgICAgLyogb3JpZ2luYWwgU0FTTCBjaGVja3MgY29udGludWUg
aGVyZSAqLwohICAgICBlbHNlIGlmIChhdXhwcm9wX3ZhbHVlc1sxXS5uYW1lICYmCiEgCSAgICAg
YXV4cHJvcF92YWx1ZXNbMV0udmFsdWVzICYmCiEgCSAgICAgYXV4cHJvcF92YWx1ZXNbMV0udmFs
dWVzWzBdKSB7CiEgCiEgCSAgICBjb25zdCBjaGFyICpkYl9zZWNyZXQgPSBhdXhwcm9wX3ZhbHVl
c1sxXS52YWx1ZXNbMF07CiEgCSAgICBzYXNsX3NlY3JldF90ICpjb25zdHJ1Y3Q7CiEgCiEgCSAg
ICByZXQgPSBfc2FzbF9tYWtlX3BsYWluX3NlY3JldChkYl9zZWNyZXQsIHBhc3N3ZCwKISAJCQkg
ICAgc3RybGVuKHBhc3N3ZCksICZjb25zdHJ1Y3QpOwohIAohIAkgICAgaWYgKHJldCAhPSBTQVNM
X09LKSB7CiEgCQkgICAgZ290byBkb25lOwohICAgICAgICAgICAgIH0KISAJICAgIAohIAkgICAg
aWYgKCFtZW1jbXAoZGJfc2VjcmV0LCBjb25zdHJ1Y3QtPmRhdGEsIGNvbnN0cnVjdC0+bGVuKSkg
ewohIAkJICAgIC8qIHBhc3N3b3JkIHZlcmlmaWVkISAqLwohIAkJICAgIHJldCA9IFNBU0xfT0s7
CiEgCSAgICB9IGVsc2UgewohIAkJICAgIC8qIHBhc3N3b3JkcyBkbyBub3QgbWF0Y2ggKi8KISAJ
CSAgICByZXQgPSBTQVNMX0JBREFVVEg7CiEgCSAgICB9CiEgCQkgICAgCiEgCSAgICBzYXNsX0ZS
RUUoY29uc3RydWN0KTsKISAgICAgfQohICAgICBlbHNlIHsKICAJLyogcGFzc3dvcmRzIGRvIG5v
dCBtYXRjaCAqLwohICAgICAgICAgcmV0ID0gU0FTTF9CQURBVVRIOwogICAgICB9CiAgCiAgIGRv
bmU6CiAgICAgIGlmICh1c2VyaWQpIHNhc2xfRlJFRSh1c2VyaWQpOwogICAgICBpZiAocmVhbG0p
ICBzYXNsX0ZSRUUocmVhbG0pOwogIAogICAgICAvKiBXZSdyZSBub3QgZ29pbmcgdG8gZXJhc2Ug
dGhlIHByb3BlcnR5IGhlcmUgYmVjYXVzZSBvdGhlciBwZW9wbGUKICAgICAgICogbWF5IHdhbnQg
aXQgKi8KICAgICAgcmV0dXJuIHJldDsKICB9Cg==
</data>        

          </attachment>
      

    </bug>

</bugzilla>