<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2367</bug_id>
          
          <creation_ts>2004-02-11 15:49 EDT</creation_ts>
          <short_desc>cyrus sasl uses ldap_initialize</short_desc>
          <delta_ts>2010-10-25 18:46:34 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus SASL</product>
          <component>plugins</component>
          <version>2.1.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>Solaris</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Seth Hettich">sjh@google.com</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          <cc>igor@ipass.net</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Seth Hettich">sjh@google.com</who>
            <bug_when>2004-02-11 15:49:56 EDT</bug_when>
            <thetext>ldap_initialize() is not in RFC 1823, and some (many?) implementations do
not support it (like solaris).  Until it&apos;s part of the standard (I think
it&apos;s even marken experimental in openldap) you should test to see if it&apos;s
there, and then only try to use it if available (work around not having
it if it&apos;s not).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Igor Brezac">igor@ipass.net</who>
            <bug_when>2004-02-11 16:55:42 EDT</bug_when>
            <thetext>openldap recommends ldap_initialize() over ldap_init (according to openldap man 
pages ldap(3)).  ldap_initialize() is extensively used in the openldap tools 
and other helper programs.  

saslauthd man pages and LDAP_SASLAUTHD note the openldap dependency.  

saslauthd configure script does test for ldap_initialize(), if not available 
ldap support is not compiled in.

Do you need non-openldap api support?

Did you have problems building sasl?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Seth Hettich">sjh@google.com</who>
            <bug_when>2004-02-11 16:58:33 EDT</bug_when>
            <thetext>Yes.  I would like to be able to build saslauthd w/ LDAP using any ldap
implementation that conforms to RFC 1823 (Solaris, Novel, etc)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Igor Brezac">igor@ipass.net</who>
            <bug_when>2004-02-11 17:56:46 EDT</bug_when>
            <thetext>I personally am against this effort.  RFC 1823 is very old and it does not 
cover any V3 features, most notably STARTTLS and SASL.  If anything, ldap-c-api 
draft should be followed (Solaris and Novell (I think) comply with ldap-c-api-
draft)

If you have a patch for rfc 1823 compliance, please feel free to contribute.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Seth Hettich">sjh@google.com</who>
            <bug_when>2004-02-11 17:59:20 EDT</bug_when>
            <thetext>ldap-c-api-draft would be fine, just something.  Does ldap-c-api-draft
include ldap_initialize()?

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Igor Brezac">igor@ipass.net</who>
            <bug_when>2004-02-11 18:08:26 EDT</bug_when>
            <thetext>No.  

Is openldap api not an option for you?  

sasl will certainly be a problem here.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Seth Hettich">sjh@google.com</who>
            <bug_when>2004-02-11 19:15:32 EDT</bug_when>
            <thetext>Well, openldap is what we are doing, but from a cross-platform/standards
point of view it would be good if you would build without experimental
extensions.  It&apos;s not a big deal tho.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2004-02-12 00:51:28 EDT</bug_when>
            <thetext>Supporting more than one implementation only increases the number of ways things
can break or be misdetected by autoconf.

I&apos;d rather not see us going out of our way to support lots of different
implementations unless there is a very compelling reason to.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Derrick">shadow@andrew.cmu.edu</who>
            <bug_when>2005-05-06 23:03:30 EDT</bug_when>
            <thetext>As no compelling reason was forthcoming, closing as WONTFIX.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>