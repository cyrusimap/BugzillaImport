<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2911</bug_id>
          
          <creation_ts>2007-02-23 08:56 EDT</creation_ts>
          <short_desc>Buffer overflows in copy_msg</short_desc>
          <delta_ts>2010-10-18 12:43:11 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.1.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          <bug_file_loc>http://stuff.mit.edu/afs/sipb/user/golem/src/thornhump/cyrus-imapd-2.1.5/imap/lmtpengine.c</bug_file_loc>
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rick van Rein">rick@openfortress.nl</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          <cc>rick@openfortress.nl</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Rick van Rein">rick@openfortress.nl</who>
            <bug_when>2007-02-23 08:56:56 EDT</bug_when>
            <thetext>The routine copy_msg contains potential buffer overflows in:

if (p[0] == &apos;\n&apos; &amp;&amp; p[-1] != &apos;\r&apos;) {
	    /* found an \n without a \r */
	    p[0] = &apos;\r&apos;;
	    p[1] = &apos;\n&apos;;
	    p[2] = &apos;\0&apos;;
}

1. It is not known at the start of this test if p[-1] exists.  It may refer
   to a byte before the stack-allocated buffer array into which p points.
2. It is not known at the writing of values into p[1] and p[2] if these
   bytes are actually available at the buffer position at which p points in
   the stack-allocated buffer.

Haven&apos;t checked later versions of the source code, just stumbled over this
problem in some code that I happened to find online at the given URL.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">murch@andrew.cmu.edu</who>
            <bug_when>2007-05-10 13:47:29 EDT</bug_when>
            <thetext>The test has been changed to the following in 2.2+.  The 2.1 branch is dead.

else if (p[0] == &apos;\n&apos; &amp;&amp; (p == buf || p[-1] != &apos;\r&apos;)) {</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>