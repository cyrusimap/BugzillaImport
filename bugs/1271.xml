<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>1271</bug_id>
          
          <creation_ts>2002-06-06 20:49 EDT</creation_ts>
          <short_desc>skiplist recover should also checkpoint</short_desc>
          <delta_ts>2010-10-18 12:42:57 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>lib</component>
          <version>2.1.x</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P1</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rob Siemborski">rjs3@andrew.cmu.edu</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          <cc>brong@fastmail.fm</cc>
    
    <cc>wes@umich.edu</cc>
          

      

      

      
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-06-06 20:49:38 EDT</bug_when>
            <thetext>as long as we are traversing the entire skiplist, we might as well checkpoint
the thing.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2008-09-11 21:26:55 EDT</bug_when>
            <thetext>That actually does sound semi-sane, except....

_every_ single skiplist gets recovered every time you restart cyrus.  I was going to make a &quot;write IO&quot; argument here, but then I remember that recovery actually does a pile of random scribbles all over the place anyway because it replaces all the pointers.  Ouch.

You&apos;re right - we may as well just checkpoint the thing!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Wes Craig">wes@umich.edu</who>
            <bug_when>2008-10-07 13:44:36 EDT</bug_when>
            <thetext>Are you thinking of doing this, Bron?  If not, I&apos;m going to close this report.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2008-10-08 09:41:52 EDT</bug_when>
            <thetext>Created an attachment (id=1031)
Always checkpoint after a recovery

You mean something like this?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2009-03-15 19:17:54 EDT</bug_when>
            <thetext>This has been running happily at FastMail for a while now.  I&apos;ll queue it up after 2.3.14 is released.</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1031</attachid>
            <date>2008-10-08 09:41 EDT</date>
            <desc>Always checkpoint after a recovery</desc>
            <filename>cyrus-skiplist-always-checkpoint-2.3.13.diff</filename>
            <type>text/plain</type>
            <size>2843</size>
            <attacher>brong@fastmail.fm</attacher>
            
              <data encoding="base64">SW5kZXg6IGN5cnVzLWltYXBkLTIuMy4xM3JjMi9saWIvY3lydXNkYl9za2lwbGlzdC5jCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT0KLS0tIGN5cnVzLWltYXBkLTIuMy4xM3JjMi5vcmlnL2xpYi9jeXJ1c2RiX3NraXBsaXN0
LmMJMjAwOC0wOS0yNiAwODoxNTozMC4wMDAwMDAwMDAgLTA0MDAKKysrIGN5cnVzLWltYXBkLTIu
My4xM3JjMi9saWIvY3lydXNkYl9za2lwbGlzdC5jCTIwMDgtMTAtMDggMDk6MzM6MDUuMDAwMDAw
MDAwIC0wNDAwCkBAIC0yMzMwLDYgKzIzMzAsMjAgQEAgc3RhdGljIGludCByZWNvdmVyeShzdHJ1
Y3QgZGIgKmRiLCBpbnQgZgogCW9mZnNldCArPSBSRUNTSVpFKHB0cik7CiAgICAgfQogCisgICAg
aWYgKGxpYmN5cnVzX2NvbmZpZ19nZXRzd2l0Y2goQ1lSVVNPUFRfU0tJUExJU1RfQUxXQVlTX0NI
RUNLUE9JTlQpKSB7CisJLyogcmVmcmVzaCBtYXAsIHNvIHdlIHNlZSB0aGUgd3JpdGVzIHdlJ3Zl
IGp1c3QgZG9uZSAqLworCW1hcF9yZWZyZXNoKGRiLT5mZCwgMCwgJmRiLT5tYXBfYmFzZSwgJmRi
LT5tYXBfbGVuLCBkYi0+bWFwX3NpemUsCisJCSAgICBkYi0+Zm5hbWUsIDApOworCisJciA9IG15
Y2hlY2twb2ludChkYiwgMSk7CisKKwlpZiAociB8fCAhKGZsYWdzICYgUkVDT1ZFUllfQ0FMTEVS
X0xPQ0tFRCkpIHsKKwkgICAgdW5sb2NrKGRiKTsKKwl9CisgICAgCisJcmV0dXJuIHI7CisgICAg
fQorCiAgICAgLyogZnN5bmMgdGhlIHJlY292ZXJlZCBkYXRhYmFzZSAqLwogICAgIGlmICghciAm
JiBET19GU1lOQyAmJiAoZmRhdGFzeW5jKGRiLT5mZCkgPCAwKSkgewogCXN5c2xvZyhMT0dfRVJS
LCAKSW5kZXg6IGN5cnVzLWltYXBkLTIuMy4xM3JjMi9saWIvaW1hcG9wdGlvbnMKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQotLS0gY3lydXMtaW1hcGQtMi4zLjEzcmMyLm9yaWcvbGliL2ltYXBvcHRpb25zCTIwMDgtMTAt
MDIgMDk6MzY6NTYuMDAwMDAwMDAwIC0wNDAwCisrKyBjeXJ1cy1pbWFwZC0yLjMuMTNyYzIvbGli
L2ltYXBvcHRpb25zCTIwMDgtMTAtMDggMDk6MzI6MDMuMDAwMDAwMDAwIC0wNDAwCkBAIC05NTks
NiArOTU5LDEyIEBAIHByb2R1Y3QgdmVyc2lvbiBpbiB0aGUgY2FwYWJpbGl0aWVzICovCiAgICBv
ZiBhIG1lc3NhZ2UgcGVyIHBhcnRpdGlvbiBhbmQgY3JlYXRlIGhhcmQgbGlua3MsIHJlc3VsdGlu
ZyBpbiBhCiAgICBwb3RlbnRpYWxseSBsYXJnZSBkaXNrIHNhdmluZ3MuICovCiAKK3sgInNraXBs
aXN0X2Fsd2F5c19jaGVja3BvaW50IiwgMSwgU1dJVENIIH0KKy8qIElmIGVuYWJsZWQsIHRoaXMg
b3B0aW9uIGZvcmNlcyB0aGUgc2tpcGxpc3QgY3lydXNkYiBiYWNrZW5kIHRvCisgICBhbHdheXMg
Y2hlY2twb2ludCB3aGVuIGRvaW5nIGEgcmVjb3ZlcnkuICBUaGlzIGNhdXNlcyBzbGlnaHRseQor
ICAgbW9yZSBJTywgYnV0IG9uIHRoZSBvdGhlciBoYW5kIGxlYWRzIHRvIG1vcmUgZWZmaWNpZW50
IGRhdGFiYXNlcywKKyAgIGFuZCB0aGUgZW50aXJlIGZpbGUgaXMgYWxyZWFkeSAiaG90Ii4gKi8K
KwogeyAic2tpcGxpc3RfdW5zYWZlIiwgMCwgU1dJVENIIH0KIC8qIElmIGVuYWJsZWQsIHRoaXMg
b3B0aW9uIGZvcmNlcyB0aGUgc2tpcGxpc3QgY3lydXNkYiBiYWNrZW5kIHRvCiAgICBub3Qgc3lu
YyB3cml0ZXMgdG8gdGhlIGRpc2suICBFbmFibGluZyB0aGlzIG9wdGlvbiBpcyBOT1QgUkVDT01N
RU5ERUQuICovCkluZGV4OiBjeXJ1cy1pbWFwZC0yLjMuMTNyYzIvbGliL2xpYmN5cl9jZmcuYwo9
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09Ci0tLSBjeXJ1cy1pbWFwZC0yLjMuMTNyYzIub3JpZy9saWIvbGliY3lyX2NmZy5j
CTIwMDgtMTAtMDggMDk6MzI6MTcuMDAwMDAwMDAwIC0wNDAwCisrKyBjeXJ1cy1pbWFwZC0yLjMu
MTNyYzIvbGliL2xpYmN5cl9jZmcuYwkyMDA4LTEwLTA4IDA5OjMyOjMyLjAwMDAwMDAwMCAtMDQw
MApAQCAtMTUwLDYgKzE1MCwxMCBAQCBzdHJ1Y3QgY3lydXNvcHRfcyBjeXJ1c19vcHRpb25zW10g
PSB7CiAgICAgICBDRkdWQUwobG9uZywgMCksCiAgICAgICBDWVJVU19PUFRfU1dJVENIIH0sCiAK
KyAgICB7IENZUlVTT1BUX1NLSVBMSVNUX0FMV0FZU19DSEVDS1BPSU5ULAorICAgICAgQ0ZHVkFM
KGxvbmcsIDEpLAorICAgICAgQ1lSVVNfT1BUX1NXSVRDSCB9LAorCiAgICAgeyBDWVJVU09QVF9M
QVNULCB7IE5VTEwgfSwgQ1lSVVNfT1BUX05PVE9QVCB9CiB9OwogCkluZGV4OiBjeXJ1cy1pbWFw
ZC0yLjMuMTNyYzIvbGliL2xpYmN5cl9jZmcuaAo9PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBjeXJ1cy1pbWFwZC0y
LjMuMTNyYzIub3JpZy9saWIvbGliY3lyX2NmZy5oCTIwMDgtMTAtMDggMDk6MzI6MTcuMDAwMDAw
MDAwIC0wNDAwCisrKyBjeXJ1cy1pbWFwZC0yLjMuMTNyYzIvbGliL2xpYmN5cl9jZmcuaAkyMDA4
LTEwLTA4IDA5OjMyOjMzLjAwMDAwMDAwMCAtMDQwMApAQCAtMTEyLDYgKzExMiw4IEBAIGVudW0g
Y3lydXNfb3B0IHsKICAgICBDWVJVU09QVF9TUUxfUEFTU1dELAogICAgIC8qIFNlY3VyZSBTUUwg
Y29ubmVjdGlvbiAoT0ZGKSAqLwogICAgIENZUlVTT1BUX1NRTF9VU0VTU0wsCisgICAgLyogQ2hl
Y2twb2ludCBhZnRlciBldmVyeSByZWNvdmVyeSAoT0ZGKSAqLworICAgIENZUlVTT1BUX1NLSVBM
SVNUX0FMV0FZU19DSEVDS1BPSU5ULAogCiAgICAgQ1lSVVNPUFRfTEFTVAogICAgIAo=
</data>        

          </attachment>
      

    </bug>

</bugzilla>