<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3542</bug_id>
          
          <creation_ts>2011-08-29 00:58 EDT</creation_ts>
          <short_desc>CID 393: STRING_OVERFLOW in kick_mupdate</short_desc>
          <delta_ts>2011-08-29 00:58:22 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.4.x (next)</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          
          
          
          
          
          <priority>P5</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Greg Banks">gnb@fastmail.fm</reporter>
          <assigned_to name="Bron Gondwana">brong@fastmail.fm</assigned_to>
          
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Greg Banks">gnb@fastmail.fm</who>
            <bug_when>2011-08-29 00:58:22 EDT</bug_when>
            <thetext>Found by Coverity.  kick_mupdate() builds a struct sockaddr_un using a string from the imapd.conf, placing an effective limit of 86 chars on the value of the &apos;configdirectory&apos; option but not enforcing it properly.

647  	    char buf[2048];
648  	    struct sockaddr_un srvaddr;
...
658  	    strlcpy(buf, config_dir, sizeof(buf));
659  	    strlcat(buf, FNAME_MUPDATE_TARGET_SOCK, sizeof(buf));
660  	    memset((char *)&amp;srvaddr, 0, sizeof(srvaddr));
661  	    srvaddr.sun_family = AF_UNIX;
Event string_overflow: You might overrun the 108 byte destination string &quot;srvaddr.sun_path&quot; by writing 2048 bytes from &quot;buf&quot;.
662  	    strcpy(srvaddr.sun_path, buf);
663  	    len = sizeof(srvaddr.sun_family) + strlen(srvaddr.sun_path) + 1;
664  	
665  	    r = connect(s, (struct sockaddr *)&amp;srvaddr, len);

and

#define FNAME_MUPDATE_TARGET_SOCK &quot;/socket/mupdate.target&quot;</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>