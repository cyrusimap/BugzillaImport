<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>338</bug_id>
          
          <creation_ts>2000-10-18 12:21 EDT</creation_ts>
          <short_desc>proxyd doesn&apos;t deal with idle connections being closed on it</short_desc>
          <delta_ts>2010-10-18 12:10:07 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Murder</component>
          <version>2.0.x</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P1</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>2.1.x</target_milestone>
          
          <blocked>1115</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</reporter>
          <assigned_to name="Rob Siemborski">rjs3@andrew.cmu.edu</assigned_to>
          
          

      

      

      
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2000-10-18 12:21:58 EDT</bug_when>
            <thetext>if proxyd has two outgoing connections and the one not in a currently selected
mailbox gets closed on it, it doesn&apos;t deal well.

needs to smoothly close and reopen the connection.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2000-10-18 12:24:13 EDT</bug_when>
            <thetext>*** Bug 339 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-02-27 12:08:24 EDT</bug_when>
            <thetext>Hrm, we probabally should test this.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2002-02-28 15:42:28 EDT</bug_when>
            <thetext>this probably ties into the fact that active individual proxyds don&apos;t notice
when a backend comes back after being down.

perhaps:
. if the backend server that is actively selected goes down, we give the client
a * BYE

. if a cached connection doesn&apos;t seem to work, we attempt to reconnect.

. if an initial connection/reconnect fails, we mark the connection as &quot;bad&quot; and
don&apos;t retry it for N seconds (N possibly increases?), and instead give NOs to
all attempts to use it.

thoughts?
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-02-28 17:05:21 EDT</bug_when>
            <thetext>okay, so currently we correctly handle the case where:

-we are connecting/reconnecting to a server and it is not there

when we do an operation and discover that a server is down, we call
proxyd_downserver on it, so that it is marked as bad.

We should still detect if we have lost the SELECT state for the user, and if so,
we should issue a BYE and hang up.  HOWEVER, if the SELECT state for the user is
unaffected by the command (or if the command is a SELECT to a differnt mailbox),
we should try to reconnect.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-03-01 15:48:09 EDT</bug_when>
            <thetext>just committed code to say BYE if we lose connection to backend_current, (unless
doing an unselect to it).

I&apos;m going to close this bug now and open a new one to handle the &quot;should we ping
a server when we are finding it again&quot; case.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>