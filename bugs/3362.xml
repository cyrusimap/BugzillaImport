<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3362</bug_id>
          
          <creation_ts>2010-12-01 15:04 EDT</creation_ts>
          <short_desc>return code is not checked when calling xfer_addmbox</short_desc>
          <delta_ts>2011-03-23 06:31:38 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Murder</component>
          <version>2.4.5</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>2.4.7</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dave McMurtrie">dave64@andrew.cmu.edu</reporter>
          <assigned_to name="Bron Gondwana">brong@fastmail.fm</assigned_to>
          <cc>vanmeeuwen@kolabsys.com</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Dave McMurtrie">dave64@andrew.cmu.edu</who>
            <bug_when>2010-12-01 15:04:12 EDT</bug_when>
            <thetext>Created an attachment (id=1328)
Patch to check the return status of xfer_addmbox

xfer_addmbox() is called from cmd_xfer() and from xfer_user_cb() without checking the return code.

We ran into a case where attempting to XFER a mailbox with 150+ subfolders failed in several different ways.  First, these messages were logged:

Dec  1 09:30:24 cyrusbe-d04 imap[30568]: IOERROR: locking user.cstest01.test31: Too many open files

This was the result of xfer_addmbox() calling mailbox_open_iwl(), which would fail when it attempted to open and lock the mailbox due to exceeding the default rlimit of 256.

Since the return code of xfer_addmbox() was not checked the XFER continued to progress, eventually failing in a more catastrophic manner.  I&apos;ll open a separate bugzilla for the rest of the catastrophe.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2010-12-02 06:00:16 EDT</bug_when>
            <thetext>Fixed by making xfer_addmbox return void ;)

More seriously, fixed by not holding multiple mailboxes open at once, and not
even opening the mailbox at that point.  There are still opportunities to back out later, but nothing that can fail and be ignored any more.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2011-03-15 08:41:54 EDT</bug_when>
            <thetext>Marking this resolved, the new way works OK</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1328</attachid>
            <date>2010-12-01 15:04 EDT</date>
            <desc>Patch to check the return status of xfer_addmbox</desc>
            <filename>imapd.c.patch</filename>
            <type>text/plain</type>
            <size>721</size>
            <attacher>dave64@andrew.cmu.edu</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL2ltYXAvaW1hcGQuYyBiL2ltYXAvaW1hcGQuYwppbmRleCA3ZGRhNzcyLi4z
NWJhNGJkIDEwMDY0NAotLS0gYS9pbWFwL2ltYXBkLmMKKysrIGIvaW1hcC9pbWFwZC5jCkBAIC04
NzQ2LDggKzg3NDYsOSBAQCBzdGF0aWMgaW50IHhmZXJfdXNlcl9jYihjaGFyICpuYW1lLAogICAg
IC8qIFNraXAgcmVtb3RlIG1haWxib3ggKi8KICAgICBpZiAobWJlbnRyeS5tYnR5cGUgJiBNQlRZ
UEVfUkVNT1RFKSByZXR1cm4gMDsKIAotICAgIHhmZXJfYWRkbWJveCh4ZmVyLCBuYW1lKTsKLQor
ICAgIHIgPSB4ZmVyX2FkZG1ib3goeGZlciwgbmFtZSk7CisgICAgaWYgKHIpIHJldHVybiByOwor
ICAgIAogICAgIHJldHVybiAwOwogfQogCkBAIC04ODc0LDcgKzg4NzUsOCBAQCB2b2lkIGNtZF94
ZmVyKGNoYXIgKnRhZywgY2hhciAqbmFtZSwgY2hhciAqdG9zZXJ2ZXIsIGNoYXIgKnRvcGFydCkK
ICAgICBpZiAocikgZ290byBkb25lOwogCiAgICAgLyogd2UncmUgYWx3YXlzIG1vdmluZyB0aGlz
IG1haWxib3ggKi8KLSAgICB4ZmVyX2FkZG1ib3goeGZlciwgbWFpbGJveG5hbWUpOworICAgIHIg
PSB4ZmVyX2FkZG1ib3goeGZlciwgbWFpbGJveG5hbWUpOworICAgIGlmIChyKSBnb3RvIGRvbmU7
CiAKICAgICAvKiBpZiB3ZSBhcmUgbm90IG1vdmluZyBhIHVzZXIsIGp1c3QgbW92ZSB0aGUgb25l
IG1haWxib3ggKi8KICAgICBpZiAoIW1vdmluZ191c2VyKSB7Cg==
</data>        

          </attachment>
      

    </bug>

</bugzilla>