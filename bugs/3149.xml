<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3149</bug_id>
          
          <creation_ts>2009-04-16 10:26 EDT</creation_ts>
          <short_desc>mupdate database sync hack</short_desc>
          <delta_ts>2015-03-03 04:05:21 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Murder</component>
          <version>2.3.x</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>ASSIGNED</bug_status>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>2.6-next</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="External User">wcw@cmu.edu</reporter>
          <assigned_to name="Bron Gondwana">brong@fastmail.fm</assigned_to>
          <cc>brong@fastmail.fm</cc>
          

      

      

      
          <long_desc isprivate="0">
            <who name="External User">wcw@cmu.edu</who>
            <bug_when>2009-04-16 10:26:03 EDT</bug_when>
            <thetext>the current behavior of mupdate synchronization is to do a full dump each time.  A minor improvement on this would be to have a counter that is incremented on every write operation on the  database.  When a replica connects to the master, it can compare the local counter with the master and if the counter is the same then a sync operation is not required.

This should help mitigate some of the problems we&apos;re seeing with Qatar when the network between here and there gets borked so that the entire database doesn&apos;t have to get transferred each time the TCP connection dies.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">murch@andrew.cmu.edu</who>
            <bug_when>2009-04-16 10:45:27 EDT</bug_when>
            <thetext>I had just mentioned such a thing to Dave 5min ago.  This would work just like the NNTP NEWNEWS command.

Another solution is to have mupdate slaves continue to respond to lookups during a sync.  If a mailbox doesn&apos;t exist in the slave then we must wait (or temp fail) until the sync is done.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2012-10-29 11:06:00 EDT</bug_when>
            <thetext>This is basically metadata modseqs.  I&apos;m not sure how it would look globally within a murder - maybe the mupdate-master would need to be responsible for allocating them.

There would need to be a key in the mailboxes.db which stored the maximum value for transactional updates.  That&apos;s easy enough, just prefix it with an illegal character and make sure everything which does a foreach knows to skip it.

This would also be very useful for replication purposes, reducing IO.

I think actually maybe there needs to be a per-server change version, so each record has just its local change number.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2012-10-29 11:07:46 EDT</bug_when>
            <thetext>Oh - just to add to this.  This is definitely a MUPDATE protocol change.  It would be best achieved by adding a new command or two, so the existing commands still work the same way.  At the same time we can sync other interesting information (like specialuse flags) for use by the frontends.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>