<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3238</bug_id>
          
          <creation_ts>2010-06-04 07:34 EDT</creation_ts>
          <short_desc>SRS implementation upon sieve script redirect action</short_desc>
          <delta_ts>2011-02-09 13:05:14 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>LMTP</component>
          <version>2.3.x</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>NEW</bug_status>
          
          
          
          
          
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Julien Coloos">julien.coloos@atos.net</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          <cc>rafael.varela+cyrus@gmail.com</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Julien Coloos">julien.coloos@atos.net</who>
            <bug_when>2010-06-04 07:34:22 EDT</bug_when>
            <thetext>Created an attachment (id=1285)
basic SRS implementation upon sieve redirect action

Some mail platforms use the Sender Policy Framework to (try to) prevent source address spoofing. A drawback with SPF is mail forwarding, and a way to fix it is SRS.

The proposed attached patch (against current trunk) is a basic implementation of SRS for the SIEVE redirect action inside cyrus.
It adds the following things:
 - compilation: new --enable-srs switch, which checks the srs2 library is present or fails otherwise
 - configuration: new options to manage the srs2 library
   - srs_alwaysrewrite: switch allowing to force address rewriting in all cases
     -&gt; default: off
   - srs_domain: domain name to use
     -&gt; default: NULL ; which disables SRS
   - srs_hashlength: hash length in rewritten addresses
     -&gt; default: 0 ; leaves srs2 library use its default value, which is 4 in the current implementation
   - srs_secrets: list of secrets to use when generating hash
     -&gt; default: NULL
   - srs_separator: separator to use after leading SRS[01] in rewritten addresses
     -&gt; default: NULL ; leaves srs2 library use its default value, which is the &apos;=&apos; character in the current implementation
 - code: the LMTP sieve script redirect action uses SRS if enabled

Since the redirect action is currently only performed by the LMTP process, the SRS functions were added right next to the action code (instead of using new dedicated .h/.c file). SRS engine is initialized upon LMTP service creation, and freed upon shutdown.

To be enabled at runtime, a non-empty srs_domain have to be configured; and actually at least one secret string has to be configured, otherwise the srs2 library will not perform address rewriting.</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1285</attachid>
            <date>2010-06-04 07:34 EDT</date>
            <desc>basic SRS implementation upon sieve redirect action</desc>
            <filename>cyrus-srs.patch</filename>
            <type>text/plain</type>
            <size>8033</size>
            <attacher>julien.coloos@atos.net</attacher>
            
              <data encoding="base64">ZGlmZiAtciAtdSBjeXJ1cy1pbWFwZC1zdm4vY29uZmlndXJlLmluIGN5cnVzLWltYXBkLXN2bi5z
cnMvY29uZmlndXJlLmluCi0tLSBjeXJ1cy1pbWFwZC1zdm4vY29uZmlndXJlLmluCTIwMTAtMDEt
MDYgMTg6MDE6MjYuMDAwMDAwMDAwICswMTAwCisrKyBjeXJ1cy1pbWFwZC1zdm4uc3JzL2NvbmZp
Z3VyZS5pbgkyMDEwLTA2LTAzIDEzOjU5OjQxLjAwMDAwMDAwMCArMDIwMApAQCAtNDEyLDYgKzQx
MiwyNSBAQAogCiBBQ19TVUJTVChTSUVWRV9TVUJESVJTKQogCitkbmwKK2RubCBzZWUgaWYgd2Un
cmUgY29tcGlsaW5nIHdpdGggU1JTCitkbmwKK1NSU19DUFBGTEFHUz0iIgorRU5BQkxFX1NSUz1u
bworQUNfQVJHX0VOQUJMRShzcnMsCisgICAgWyAgLS1lbmFibGUtc3JzICAgICAgICAgICAgZW5h
YmxlIFNSUyBzdXBwb3J0XSwKKyAgICBFTkFCTEVfU1JTPSRlbmFibGV2YWwpCitpZiB0ZXN0ICIk
RU5BQkxFX1NSUyIgIT0gbm87IHRoZW4KKyAgICBBQ19DSEVDS19IRUFERVIoW3NyczIuaF0sLAor
ICAgICAgICBbQUNfTVNHX0VSUk9SKFtjYW5ub3QgZmluZCBTUlMgaGVhZGVyc10pXSkKKyAgICBB
Q19DSEVDS19MSUIoc3JzMiwgc3JzX2ZvcndhcmQsLAorICAgICAgICBbQUNfTVNHX0VSUk9SKFtj
YW5ub3QgZmluZCBTUlMgbGliXSldKQorICAgIFNSU19DUFBGTEFHUz0iLWxzcnMyIgorICAgIEFD
X0RFRklORShVU0VfU1JTLFtdLFtCdWlsZCB3aXRoIFNSUz9dKQorZmkKKworQUNfU1VCU1QoU1JT
X0NQUEZMQUdTKQorCiBkbmwgZm9yIGV0IHJvdXRpbmVzCiBBQ19GVU5DX0NIRUNLKHN0cmVycm9y
LEFDX0RFRklORShIQVNfU1RSRVJST1IsW10sW0RvIHdlIGhhdmUgc3RyZXJyb3IoKT9dKSwKICAg
ICAgICAgICAgICAgQUNfREVGSU5FKE5FRURfU1lTX0VSUkxJU1QsW10sW0RvIHdlIGhhdmUgYSBz
eXNfZXJybGlzdD9dKSkKZGlmZiAtciAtdSBjeXJ1cy1pbWFwZC1zdm4vaW1hcC9sbXRwZC5jIGN5
cnVzLWltYXBkLXN2bi5zcnMvaW1hcC9sbXRwZC5jCi0tLSBjeXJ1cy1pbWFwZC1zdm4vaW1hcC9s
bXRwZC5jCTIwMTAtMDUtMjUgMjI6NTk6MTkuMDAwMDAwMDAwICswMjAwCisrKyBjeXJ1cy1pbWFw
ZC1zdm4uc3JzL2ltYXAvbG10cGQuYwkyMDEwLTA2LTAzIDE0OjAyOjQwLjAwMDAwMDAwMCArMDIw
MApAQCAtMjA1LDYgKzIwNSw5IEBACiAKIAkvKiBzZXR1cCBzaWV2ZSBzdXBwb3J0ICovCiAJc2ll
dmVfaW50ZXJwID0gc2V0dXBfc2lldmUoKTsKKyNpZmRlZiBVU0VfU1JTCisJc2lldmVfc3JzX2lu
aXQoKTsKKyNlbmRpZgogI2Vsc2UKIAlpZiAoZHVwZWxpbSkKICNlbmRpZgpAQCAtOTQ3LDYgKzk1
MCw5IEBACiAJbXVwZGF0ZV9kaXNjb25uZWN0KCZtaGFuZGxlKTsKICAgICB9IGVsc2UgewogI2lm
ZGVmIFVTRV9TSUVWRQorI2lmZGVmIFVTRV9TUlMKKwlzaWV2ZV9zcnNfZnJlZSgpOworI2VuZGlm
CiAJc2lldmVfaW50ZXJwX2ZyZWUoJnNpZXZlX2ludGVycCk7CiAjZWxzZQogCWlmIChkdXBlbGlt
KQpkaWZmIC1yIC11IGN5cnVzLWltYXBkLXN2bi9pbWFwL2xtdHBfc2lldmUuYyBjeXJ1cy1pbWFw
ZC1zdm4uc3JzL2ltYXAvbG10cF9zaWV2ZS5jCi0tLSBjeXJ1cy1pbWFwZC1zdm4vaW1hcC9sbXRw
X3NpZXZlLmMJMjAxMC0wMS0wNiAxODowMTozNS4wMDAwMDAwMDAgKzAxMDAKKysrIGN5cnVzLWlt
YXBkLXN2bi5zcnMvaW1hcC9sbXRwX3NpZXZlLmMJMjAxMC0wNi0wNCAxMzozMDozOS4wMDAwMDAw
MDAgKzAyMDAKQEAgLTUzLDYgKzUzLDkgQEAKICNpbmNsdWRlIDxzdHJpbmcuaD4KICNpbmNsdWRl
IDxzeXNsb2cuaD4KICNpbmNsdWRlIDx0aW1lLmg+CisjaWZkZWYgVVNFX1NSUworI2luY2x1ZGUg
PHNyczIuaD4KKyNlbmRpZgogI2luY2x1ZGUgPHN5cy90eXBlcy5oPgogI2luY2x1ZGUgPHN5cy93
YWl0Lmg+CiAKQEAgLTMwMyw2ICszMDYsMTAxIEBACiAgICAgcmV0dXJuIHNtX3N0YXQ7CS8qIHNl
bmRtYWlsIGV4aXQgdmFsdWUgKi8KIH0KIAorI2lmZGVmIFVTRV9TUlMKKworc3RhdGljIHNyc190
ICpzcnNfZW5naW5lID0gTlVMTDsKKworI2RlZmluZSBTUlNfSU5JVF9GQUlMX1VOTEVTUyh4KSAg
ICAgICAgICAgICAgICAgXAorICAgIGlmICgoc3JzX3N0YXR1cyA9ICh4KSkgIT0gU1JTX1NVQ0NF
U1MpIHsgICAgXAorICAgICAgICBnb3RvIEVORDsgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgXAorICAgIH0KKwordm9pZCBzaWV2ZV9zcnNfaW5pdCh2b2lkKSB7CisgICAgY29uc3QgY2hh
ciAqc3JzX2RvbWFpbiA9IGNvbmZpZ19nZXRzdHJpbmcoSU1BUE9QVF9TUlNfRE9NQUlOKTsKKyAg
ICBjaGFyICpzYXZlZF9zZWNyZXRzID0gTlVMTDsKKyAgICBpbnQgc3JzX3N0YXR1cyA9IFNSU19T
VUNDRVNTOworCisgICAgaWYgKCFzcnNfZW5naW5lICYmIHNyc19kb21haW4gJiYgKnNyc19kb21h
aW4pIHsKKyAgICAgICAgLyogU1JTIGVuYWJsZWQgYW5kIG5vdCB5ZXQgaW5pdGlhbGl6ZWQgKi8K
KyAgICAgICAgaW50IHNyc19hbHdheXNyZXdyaXRlID0gY29uZmlnX2dldHN3aXRjaChJTUFQT1BU
X1NSU19BTFdBWVNSRVdSSVRFKTsKKyAgICAgICAgaW50IHNyc19oYXNobGVuZ3RoID0gY29uZmln
X2dldGludChJTUFQT1BUX1NSU19IQVNITEVOR1RIKTsKKyAgICAgICAgY29uc3QgY2hhciAqc3Jz
X3NlcGFyYXRvciA9IGNvbmZpZ19nZXRzdHJpbmcoSU1BUE9QVF9TUlNfU0VQQVJBVE9SKTsKKyAg
ICAgICAgY29uc3QgY2hhciAqc3JzX3NlY3JldHMgPSBjb25maWdfZ2V0c3RyaW5nKElNQVBPUFRf
U1JTX1NFQ1JFVFMpOworCisgICAgICAgIFNSU19JTklUX0ZBSUxfVU5MRVNTKHNyc19zZXRfbWFs
bG9jKChzcnNfbWFsbG9jX3QpeG1hbGxvYywgKHNyc19yZWFsbG9jX3QpeHJlYWxsb2MsIChzcnNf
ZnJlZV90KWZyZWUpKTsKKworICAgICAgICBzcnNfZW5naW5lID0gc3JzX25ldygpOworICAgICAg
ICBTUlNfSU5JVF9GQUlMX1VOTEVTUyhzcnNfc2V0X2Fsd2F5c3Jld3JpdGUoc3JzX2VuZ2luZSwg
c3JzX2Fsd2F5c3Jld3JpdGUpKTsKKworICAgICAgICBpZiAoc3JzX2hhc2hsZW5ndGggPiAwKQor
ICAgICAgICAgICAgU1JTX0lOSVRfRkFJTF9VTkxFU1Moc3JzX3NldF9oYXNobGVuZ3RoKHNyc19l
bmdpbmUsIHNyc19oYXNobGVuZ3RoKSk7CisgICAgICAgIGlmIChzcnNfc2VwYXJhdG9yKQorICAg
ICAgICAgICAgU1JTX0lOSVRfRkFJTF9VTkxFU1Moc3JzX3NldF9zZXBhcmF0b3Ioc3JzX2VuZ2lu
ZSwgc3JzX3NlcGFyYXRvclswXSkpOworCisgICAgICAgIGlmIChzcnNfc2VjcmV0cykgeworICAg
ICAgICAgICAgY2hhciAqc2VjcmV0ID0gTlVMTDsKKworICAgICAgICAgICAgc2F2ZWRfc2VjcmV0
cyA9IHhzdHJkdXAoc3JzX3NlY3JldHMpOworICAgICAgICAgICAgc2VjcmV0ID0gc3RydG9rKHNh
dmVkX3NlY3JldHMsICIsIFx0XHJcbiIpOworICAgICAgICAgICAgd2hpbGUgKHNlY3JldCkgewor
ICAgICAgICAgICAgICAgIFNSU19JTklUX0ZBSUxfVU5MRVNTKHNyc19hZGRfc2VjcmV0KHNyc19l
bmdpbmUsIHNlY3JldCkpOworICAgICAgICAgICAgICAgIHNlY3JldCA9IHN0cnRvayhOVUxMLCAi
LCBcdFxyXG4iKTsKKyAgICAgICAgICAgIH0KKyAgICAgICAgfQorICAgIH0KKworICBFTkQ6Cisg
ICAgaWYgKHNhdmVkX3NlY3JldHMpCisgICAgICAgIGZyZWUoc2F2ZWRfc2VjcmV0cyk7CisKKyAg
ICBpZiAoc3JzX3N0YXR1cyAhPSBTUlNfU1VDQ0VTUykgeworICAgICAgICBzaWV2ZV9zcnNfZnJl
ZSgpOworCisgICAgICAgIHN5c2xvZyhMT0dfRVJSLCAic2lldmUgU1JTIGNvbmZpZ3VyYXRpb24g
ZXJyb3I6ICVzIiwgc3JzX3N0cmVycm9yKHNyc19zdGF0dXMpKTsKKyAgICB9Cit9CisKK3ZvaWQg
c2lldmVfc3JzX2ZyZWUodm9pZCkgeworICAgIGlmIChzcnNfZW5naW5lKSB7CisgICAgICAgIHNy
c19mcmVlKHNyc19lbmdpbmUpOworICAgICAgICBzcnNfZW5naW5lID0gTlVMTDsKKyAgICB9Cit9
CisKKy8qKgorICogUGVyZm9ybXMgU1JTIGZvcndhcmQgcmV3cml0aW5nLgorICogSWYgcmV3cml0
aW5nIGZhaWxlZCwgb3IgU1JTIGlzIGRpc2FibGVkLCBOVUxMIHBvaW50ZXIgaXMgcmV0dXJuZWQu
IE90aGVyd2lzZQorICogY2FsbGVyIGlzIHJlc3BvbnNpYmxlIG9mIGZyZWVpbmcgdGhlIHJlc3Vs
dGluZyBhZGRyZXNzLgorICoKKyAqIEBwYXJhbSByZXR1cm5fcGF0aCAgIGFkZHJlc3MgdG8gcmV3
cml0ZQorICogQHJldHVybiByZXdyaXR0ZW4gYWRkcmVzcywgb3IgTlVMTAorICovCitzdGF0aWMg
Y2hhciAqc2lldmVfc3JzX2ZvcndhcmQoY2hhciAqcmV0dXJuX3BhdGgpIHsKKyAgICBjb25zdCBj
aGFyICpzcnNfZG9tYWluID0gY29uZmlnX2dldHN0cmluZyhJTUFQT1BUX1NSU19ET01BSU4pOwor
ICAgIGNoYXIgKnNyc19yZXR1cm5fcGF0aCA9IE5VTEw7CisgICAgaW50IHNyc19zdGF0dXM7CisK
KyAgICBpZiAoIXNyc19lbmdpbmUpIHsKKyAgICAgICAgLyogU1JTIG5vdCBlbmFibGVkICovCisg
ICAgICAgIHJldHVybiBOVUxMOworICAgIH0KKworICAgIHNyc19zdGF0dXMgPSBzcnNfZm9yd2Fy
ZF9hbGxvYyhzcnNfZW5naW5lLCAmc3JzX3JldHVybl9wYXRoLAorICAgICAgICByZXR1cm5fcGF0
aCwgc3JzX2RvbWFpbik7CisKKyAgICBpZiAoc3JzX3N0YXR1cyAhPSBTUlNfU1VDQ0VTUykgewor
ICAgICAgICBzeXNsb2coTE9HX0VSUiwgInNpZXZlIFNSUyBmb3J3YXJkIGZhaWxlZCAoJXMsICVz
KTogJXMiLAorICAgICAgICAgICAgcmV0dXJuX3BhdGgsIHNyc19kb21haW4sIHNyc19zdHJlcnJv
cihzcnNfc3RhdHVzKSk7CisgICAgICAgIGlmIChzcnNfcmV0dXJuX3BhdGgpIHsKKyAgICAgICAg
ICAgIGZyZWUoc3JzX3JldHVybl9wYXRoKTsKKyAgICAgICAgICAgIHNyc19yZXR1cm5fcGF0aCA9
IE5VTEw7CisgICAgICAgIH0KKyAgICB9CisKKyAgICByZXR1cm4gc3JzX3JldHVybl9wYXRoOwor
fQorCisjZW5kaWYKIHN0YXRpYyBpbnQgc2VuZF9mb3J3YXJkKGNvbnN0IGNoYXIgKmZvcndhcmR0
bywKIAkJCWNoYXIgKnJldHVybl9wYXRoLAogCQkJc3RydWN0IHByb3RzdHJlYW0gKmZpbGUpCkBA
IC0zMTMsMTIgKzQxMSwyMCBAQAogICAgIGNoYXIgYnVmWzEwMjRdOwogICAgIHBpZF90IHNtX3Bp
ZDsKICAgICBpbnQgYm9keSA9IDAsIHNraXA7CisjaWZkZWYgVVNFX1NSUworICAgIGNoYXIgKnNy
c19yZXR1cm5fcGF0aCA9IE5VTEw7CisjZW5kaWYKIAogICAgIHNtYnVmWzBdID0gInNlbmRtYWls
IjsKICAgICBzbWJ1ZlsxXSA9ICItaSI7CQkvKiBpZ25vcmUgZG90cyAqLwogICAgIGlmIChyZXR1
cm5fcGF0aCAmJiAqcmV0dXJuX3BhdGgpIHsKIAlzbWJ1ZlsyXSA9ICItZiI7CisjaWZkZWYgVVNF
X1NSUworCXNyc19yZXR1cm5fcGF0aCA9IHNpZXZlX3Nyc19mb3J3YXJkKHJldHVybl9wYXRoKTsK
KwlzbWJ1ZlszXSA9IHNyc19yZXR1cm5fcGF0aCA/IHNyc19yZXR1cm5fcGF0aCA6IHJldHVybl9w
YXRoOworI2Vsc2UKIAlzbWJ1ZlszXSA9IHJldHVybl9wYXRoOworI2VuZGlmCiAgICAgfSBlbHNl
IHsKIAlzbWJ1ZlsyXSA9ICItZiI7CiAJc21idWZbM10gPSAiPD4iOwpAQCAtMzI4LDYgKzQzNCwx
MyBAQAogICAgIHNtYnVmWzZdID0gTlVMTDsKICAgICBzbV9waWQgPSBvcGVuX3NlbmRtYWlsKHNt
YnVmLCAmc20pOwogCQorI2lmZGVmIFVTRV9TUlMKKyAgICBpZiAoc3JzX3JldHVybl9wYXRoKSB7
CisJZnJlZShzcnNfcmV0dXJuX3BhdGgpOworCXNyc19yZXR1cm5fcGF0aCA9IE5VTEw7CisgICAg
fQorCisjZW5kaWYKICAgICBpZiAoc20gPT0gTlVMTCkgewogCXJldHVybiAtMTsKICAgICB9CmRp
ZmYgLXIgLXUgY3lydXMtaW1hcGQtc3ZuL2ltYXAvbG10cF9zaWV2ZS5oIGN5cnVzLWltYXBkLXN2
bi5zcnMvaW1hcC9sbXRwX3NpZXZlLmgKLS0tIGN5cnVzLWltYXBkLXN2bi9pbWFwL2xtdHBfc2ll
dmUuaAkyMDEwLTAxLTA2IDE4OjAxOjM1LjAwMDAwMDAwMCArMDEwMAorKysgY3lydXMtaW1hcGQt
c3ZuLnNycy9pbWFwL2xtdHBfc2lldmUuaAkyMDEwLTA2LTAzIDE0OjAyOjMxLjAwMDAwMDAwMCAr
MDIwMApAQCAtNTEsNSArNTEsMTAgQEAKIHNpZXZlX2ludGVycF90ICpzZXR1cF9zaWV2ZSh2b2lk
KTsKIGludCBydW5fc2lldmUoY29uc3QgY2hhciAqdXNlciwgY29uc3QgY2hhciAqZG9tYWluLCBj
b25zdCBjaGFyICptYWlsYm94LAogCSAgICAgIHNpZXZlX2ludGVycF90ICppbnRlcnAsIGRlbGl2
ZXJfZGF0YV90ICpteWRhdGEpOworI2lmZGVmIFVTRV9TUlMKKwordm9pZCBzaWV2ZV9zcnNfaW5p
dCh2b2lkKTsKK3ZvaWQgc2lldmVfc3JzX2ZyZWUodm9pZCk7CisjZW5kaWYKIAogI2VuZGlmIC8q
IExNVFBfU0lFVkVfSCAqLwpkaWZmIC1yIC11IGN5cnVzLWltYXBkLXN2bi9pbWFwL01ha2VmaWxl
LmluIGN5cnVzLWltYXBkLXN2bi5zcnMvaW1hcC9NYWtlZmlsZS5pbgotLS0gY3lydXMtaW1hcGQt
c3ZuL2ltYXAvTWFrZWZpbGUuaW4JMjAxMC0wNC0yMiAxOToyOTo1My4wMDAwMDAwMDAgKzAyMDAK
KysrIGN5cnVzLWltYXBkLXN2bi5zcnMvaW1hcC9NYWtlZmlsZS5pbgkyMDEwLTA2LTAzIDEzOjQ2
OjM4LjAwMDAwMDAwMCArMDIwMApAQCAtNjAsNyArNjAsNyBAQAogQ1lSVVNfR1JPVVA9QGN5cnVz
X2dyb3VwQAogCiBERUZTID0gQERFRlNAIEBMT0NBTERFRlNACi1DUFBGTEFHUyA9IC1JLi4gLUkk
KHNyY2RpcikvLi4vbGliIEBDT01fRVJSX0NQUEZMQUdTQCBAU0lFVkVfQ1BQRkxBR1NAIEBDUFBG
TEFHU0AgQFNBU0xGTEFHU0AKK0NQUEZMQUdTID0gLUkuLiAtSSQoc3JjZGlyKS8uLi9saWIgQENP
TV9FUlJfQ1BQRkxBR1NAIEBTUlNfQ1BQRkxBR1NAIEBTSUVWRV9DUFBGTEFHU0AgQENQUEZMQUdT
QCBAU0FTTEZMQUdTQAogSU1BUF9MSUJTID0gQElNQVBfTElCU0AgQExJQl9SVEAKIFNJRVZFX09C
SlMgPSBAU0lFVkVfT0JKU0AKIFNJRVZFX0xJQlMgPSBAU0lFVkVfTElCU0AKZGlmZiAtciAtdSBj
eXJ1cy1pbWFwZC1zdm4vbGliL2ltYXBvcHRpb25zIGN5cnVzLWltYXBkLXN2bi5zcnMvbGliL2lt
YXBvcHRpb25zCi0tLSBjeXJ1cy1pbWFwZC1zdm4vbGliL2ltYXBvcHRpb25zCTIwMTAtMDQtMTkg
MjE6NTQ6MjUuMDAwMDAwMDAwICswMjAwCisrKyBjeXJ1cy1pbWFwZC1zdm4uc3JzL2xpYi9pbWFw
b3B0aW9ucwkyMDEwLTA2LTAzIDEzOjUzOjA0LjAwMDAwMDAwMCArMDIwMApAQCAtMTA4NSw2ICsx
MDg1LDIzIEBACiB7ICJzcWxfdXNlc3NsIiwgMCwgU1dJVENIIH0KIC8qIElmIGVuYWJsZWQsIGEg
c2VjdXJlIGNvbm5lY3Rpb24gd2lsbCBiZSBtYWRlIHRvIHRoZSBTUUwgc2VydmVyLiAqLwogCit7
ICJzcnNfYWx3YXlzcmV3cml0ZSIsIDAsICBTV0lUQ0ggfQorLyogSWYgdHJ1ZSwgcGVyZm9ybSBT
UlMgcmV3cml0aW5nIGZvciBBTEwgZm9yd2FyZGluZywgZXZlbiB3aGVuIG5vdCByZXF1aXJlZC4g
Ki8KKworeyAic3JzX2RvbWFpbiIsIE5VTEwsIFNUUklORyB9CisvKiBUaGUgZG9tYWluIHRvIHVz
ZSBpbiByZXdyaXR0ZW4gYWRkcmVzc2VzLiBUaGlzIG11c3QgcG9pbnQgb25seSB0byBtYWNoaW5l
cworICAgd2hpY2gga25vdyB0aGUgZW5jb2Rpbmcgc2VjcmV0IHVzZWQgYnkgdGhpcyBzeXN0ZW0u
IFdoZW4gcHJlc2VudCwgU1JTIGlzCisgICBlbmFibGVkLiAqLworCit7ICJzcnNfaGFzaGxlbmd0
aCIsIDAsIElOVCB9CisvKiBUaGUgaGFzaCBsZW5ndGggdG8gZ2VuZXJhdGUgaW4gYSByZXdyaXR0
ZW4gYWRkcmVzcy4gKi8KKworeyAic3JzX3NlY3JldHMiLCBOVUxMLCBTVFJJTkcgfQorLyogQSBs
aXN0IG9mIHNlY3JldHMgd2l0aCB3aGljaCB0byBnZW5lcmF0ZSBhZGRyZXNzZXMuICovCisKK3sg
InNyc19zZXBhcmF0b3IiLCBOVUxMLCBTVFJJTkcgfQorLyogVGhlIHNlcGFyYXRvciB0byBhcHBl
YXIgaW1tZWRpYXRlbHkgYWZ0ZXIgU1JTWzAxXSBpbiByZXdyaXR0ZW4gYWRkcmVzc2VzLiAqLwor
CiB7ICJzcnZ0YWIiLCAiIiwgU1RSSU5HIH0KIC8qIFRoZSBwYXRobmFtZSBvZiBcZklzcnZ0YWJc
ZlIgZmlsZSBjb250YWluaW5nIHRoZSBzZXJ2ZXIncyBwcml2YXRlCiAgICBrZXkuICBUaGlzIG9w
dGlvbiBpcyBwYXNzZWQgdG8gdGhlIFNBU0wgbGlicmFyeSBhbmQgb3ZlcnJpZGVzIGl0cwo=
</data>        

          </attachment>
      

    </bug>

</bugzilla>