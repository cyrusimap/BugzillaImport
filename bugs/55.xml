<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>55</bug_id>
          
          <creation_ts>2000-07-19 09:32 EDT</creation_ts>
          <short_desc>MIME decoding can produce incorrect SEARCH/SORT/THREAD results</short_desc>
          <delta_ts>2010-10-19 14:55:05 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.0.x</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ken Murchison">ken@oceana.com</reporter>
          <assigned_to name="Bron Gondwana">brong@fastmail.fm</assigned_to>
          <cc>brong@fastmail.fm</cc>
    
    <cc>vanmeeuwen@kolabsys.com</cc>
          

      

      

      
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2000-07-19 09:32:07 EDT</bug_when>
            <thetext>the whitespace eating behavior of the MIME decoding function can cause sorting
by subject or threading to produce incorrect results.  for example, if we have 
the strings &quot;cat food&quot; and &quot;catalog&quot;, these *should* be sorted in the order 
given.  but after decoding, they will be sorted as &quot;catalog&quot; and &quot;catfood&quot;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2001-01-30 22:16:53 EDT</bug_when>
            <thetext>also will produce incorrect results for SEARCH especially when searching 
multiple word keys, ie &quot;cyrus imapd&quot; won&apos;t be found because the decoded text 
will actually be &quot;cyrusimapd&quot;.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2001-01-30 22:20:00 EDT</bug_when>
            <thetext>shouldn&apos;t fixing SEARCH by canonicalizing what we&apos;re searching for to
&quot;cyrusimapd&quot; be easy?  is there any reason not to do this?
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2001-01-31 00:01:46 EDT</bug_when>
            <thetext>well, it would solve THIS problem by masking it, but wouldn&apos;t fix the problem of 
false positives.  consider that I&apos;m searching for &quot;imaps&quot; OR &quot;simap&quot; -- I&apos;ll get 
a hit on &quot;cyrus imap&quot; incorrectly.  IIRC, you said that you think jgm wrote the 
code to eat whitespace because some languages/charsets don&apos;t use whitespace or 
it has no meaning in them.  but isn&apos;t this catering to the exception instead of 
the rule?  I&apos;m guessing that the vast majority of traffic passing through Cyrus 
servers does not contain Kanji chars or the like.  IMHO, I think we should 
convert all tabs and continuations to space and then convert all multiple spaces 
to a single space (and perhaps do the same with the search text).  I *think* 
this is what UW does and would fix the SEARCH/SORT/THREAD interoperability 
problems.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2001-01-31 15:17:41 EDT</bug_when>
            <thetext>so we have two problems here: 

1) the MIME decoding problem generates incorrect results for SORTing and
THREADing purposes.

2) BODY searches aren&apos;t working right

#2 is a seperate problem from #1; #2 seems pretty easy to fix though i didn&apos;t
see it jump out at me when i looked at the code for 5 minutes yesterday.
i&apos;ll open a new bug for #2.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2001-01-31 15:32:37 EDT</bug_when>
            <thetext>actually, the summary line is incorrect.  the MIME decoding function which as a 
side effect eats whitespace causes problems with SEARCH/SORT/THREAD.  it will 
break headers SEARCHes just as much as it will BODY searches.  i see this as one 
bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2001-01-31 15:37:19 EDT</bug_when>
            <thetext>SEARCH SUBJECT &quot;cyrus foo&quot; works as expected.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2009-03-15 19:09:30 EDT</bug_when>
            <thetext>So anyway, this is the oldest open bug - and my latest charset code will fix it :)

Unfortunately, it&apos;s going to need a complete reconstruct first... since every cyrus.cache file contains search normalised strings.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2010-10-19 07:16:18 EDT</bug_when>
            <thetext>This is fixed in Cyrus 2.4.  You do need to reconstruct to get the new search strings in the .cache files though.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>