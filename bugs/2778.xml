<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2778</bug_id>
          
          <creation_ts>2006-01-16 13:43 EDT</creation_ts>
          <short_desc>GSSAPI plug-in limits OpenLDAP to attributes smaller than 64K</short_desc>
          <delta_ts>2010-10-25 18:46:37 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus SASL</product>
          <component>gssapi</component>
          <version>2.1.x</version>
          <rep_platform>Macintosh</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Steven Simon">simon.s@apple.com</reporter>
          <assigned_to name="Alexey Melnikov">Alexey.Melnikov@isode.com</assigned_to>
          <cc>Alexey.Melnikov@isode.com</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Steven Simon">simon.s@apple.com</who>
            <bug_when>2006-01-16 13:43:02 EDT</bug_when>
            <thetext>The gss_wrap calculation does not take into account the maxbufsize in the sasl_security_properties_t 
structure. I have written a fix that does two things: 1) it allows the encode/decode buffer to expand if 
necessary, and shrink back down to reduce memory pressure, and 2) adjusts the GSSAPI wrap calculation 
to fit inside the limits.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Steven Simon">simon.s@apple.com</who>
            <bug_when>2006-01-16 13:44:08 EDT</bug_when>
            <thetext>Created an attachment (id=411)
diffs with proposed fix
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Steven Simon">simon.s@apple.com</who>
            <bug_when>2006-01-16 14:35:06 EDT</bug_when>
            <thetext>When OpenLDAP initializes SASL, it is using 64K for the maximum buffer size in the security properties. 
If a single attribute-value exceeds this limit, and GSSAPI is used for security, SASL returns an error from 
the encode or decode function and OpenLDAP chokes. Bumping the OpenLDAP buffer size is not a real 
solution because we will hit the limit sooner or later. The problem is in the GSSAPI SASL plug-in which 
adds the gss_wrap amount onto maxbufsize, thereby making the return sizes exceed the maximum 
amount of data that can be encoded at one time.

Our bug report had these steps to reproduce:
* STEPS TO REPRODUCE
1. Install Mac OS X Server, setup an Open Directory Master
2. Open Directory Access and set up authenticated binding to the LDAP server
3. Add more than 1820 user accounts to a single group.
4. authenticate one of the users in the group

*RESULTS
LDAP becomes unresponsive, users can&apos;t do anything.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="">ahasenack@terra.com.br</who>
            <bug_when>2006-01-17 06:02:26 EDT</bug_when>
            <thetext>IIRC coorectly, there was/is a GSSAPI issue with openldap and active directory
related to buffer size. The openldap folks dismissed it as an MS bug. Perhaps
this could be related?

I&apos;ll try to apply the patch and test as soon as I can.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Steven Simon">simon.s@apple.com</who>
            <bug_when>2006-01-17 16:37:33 EDT</bug_when>
            <thetext>I made a mistake on this bug. Apparently, Mac OS X 10.4.x is still based on 2.1.18 which is missing some 
fixes (I thought it was 2.1.20). I tried the qualification again with a clean, no-patch 2.1.22 and did not find 
any problems. If my little _plug_decode patch fixes the Active Directory problem, all the better. However, I 
think this bug can be closed. </thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>411</attachid>
            <date>2006-01-16 13:44 EDT</date>
            <desc>diffs with proposed fix</desc>
            <filename>postback.txt</filename>
            <type>text/plain</type>
            <size>7865</size>
            <attacher>simon.s@apple.com</attacher>
            
              <data encoding="base64">ZGlmZiAtcnV3IGN5cnVzLXNhc2wtMi4xLjIyL3BsdWdpbnMvZ3NzYXBpLmMgY3lydXMtc2FzbC0y
LjEuMjItbW9kcy9wbHVnaW5zL2dzc2FwaS5jCi0tLSBjeXJ1cy1zYXNsLTIuMS4yMi9wbHVnaW5z
L2dzc2FwaS5jCTIwMDQtMDctMjEgMDc6Mzk6MDYuMDAwMDAwMDAwIC0wNzAwCisrKyBjeXJ1cy1z
YXNsLTIuMS4yMi1tb2RzL3BsdWdpbnMvZ3NzYXBpLmMJMjAwNi0wMS0xMiAxMzozNzowOS4wMDAw
MDAwMDAgLTA4MDAKQEAgLTE5Myw2ICsxOTMsOCBAQAogICAgIHNpemVfdCBsZW4sIGN1cmxlbiA9
IDA7CiAgICAgY29uc3QgY2hhciBwcmVmaXhbXSA9ICJHU1NBUEkgRXJyb3I6ICI7CiAgICAgCisg
ICAgaWYoIXV0aWxzKSByZXR1cm47CisgICAgCiAgICAgbGVuID0gc2l6ZW9mKHByZWZpeCk7CiAg
ICAgcmV0ID0gX3BsdWdfYnVmX2FsbG9jKHV0aWxzLCAmb3V0LCAmY3VybGVuLCAyNTYpOwogICAg
IGlmKHJldCAhPSBTQVNMX09LKSByZXR1cm4gU0FTTF9PSzsKQEAgLTkzNCwxNSArOTM2LDI5IEBA
CiAJICAgIHRleHQtPnJlcXVpcmVzc2YgPSBwYXJhbXMtPnByb3BzLm1pbl9zc2YgLSBwYXJhbXMt
PmV4dGVybmFsX3NzZjsKIAl9CiAJCisJbWFqX3N0YXQgPSBnc3Nfd3JhcF9zaXplX2xpbWl0KCAm
bWluX3N0YXQsCisJCQkJCSAgICB0ZXh0LT5nc3NfY3R4LAorCQkJCQkgICAgMSwKKwkJCQkJICAg
IEdTU19DX1FPUF9ERUZBVUxULAorCQkJCQkgICAgKE9NX3VpbnQzMikgcGFyYW1zLT5wcm9wcy5t
YXhidWZzaXplLAorCQkJCQkgICAgJm1heF9pbnB1dCk7CisJaWYgKEdTU19FUlJPUihtYWpfc3Rh
dCkpIHsKKwkgICAgc2FzbF9nc3Nfc2V0ZXJyb3IodGV4dC0+dXRpbHMsIG1hal9zdGF0LCBtaW5f
c3RhdCk7CisJICAgIHNhc2xfZ3NzX2ZyZWVfY29udGV4dF9jb250ZW50cyh0ZXh0KTsKKwkgICAg
aWYgKG91dHB1dF90b2tlbi0+dmFsdWUpCisJCQlnc3NfcmVsZWFzZV9idWZmZXIoJm1pbl9zdGF0
LCBvdXRwdXRfdG9rZW4pOworCSAgICByZXR1cm4gU0FTTF9GQUlMOworCX0KKwkKIAkvKiBidWls
ZCB1cCBvdXIgc2VjdXJpdHkgcHJvcGVydGllcyB0b2tlbiAqLwotICAgICAgICBpZiAocGFyYW1z
LT5wcm9wcy5tYXhidWZzaXplID4gMHhGRkZGRkYpIHsKKwlpZiAobWF4X2lucHV0ID4gMHhGRkZG
RkYpIHsKICAgICAgICAgICAgIC8qIG1ha2Ugc3VyZSBtYXhidWZzaXplIGlzbid0IHRvbyBsYXJn
ZSAqLwogICAgICAgICAgICAgLyogbWF4YnVmc2l6ZSA9IDB4RkZGRkZGICovCiAgICAgICAgICAg
ICBzYXNsZGF0YVsxXSA9IHNhc2xkYXRhWzJdID0gc2FzbGRhdGFbM10gPSAweEZGOwogICAgICAg
ICB9IGVsc2UgewotICAgICAgICAgICAgc2FzbGRhdGFbMV0gPSAocGFyYW1zLT5wcm9wcy5tYXhi
dWZzaXplID4+IDE2KSAmIDB4RkY7Ci0gICAgICAgICAgICBzYXNsZGF0YVsyXSA9IChwYXJhbXMt
PnByb3BzLm1heGJ1ZnNpemUgPj4gOCkgJiAweEZGOwotICAgICAgICAgICAgc2FzbGRhdGFbM10g
PSAocGFyYW1zLT5wcm9wcy5tYXhidWZzaXplID4+IDApICYgMHhGRjsKKwkJc2FzbGRhdGFbMV0g
PSAobWF4X2lucHV0ID4+IDE2KSAmIDB4RkY7CisJCXNhc2xkYXRhWzJdID0gKG1heF9pbnB1dCA+
PiA4KSAmIDB4RkY7CisJCXNhc2xkYXRhWzNdID0gKG1heF9pbnB1dCA+PiAwKSAmIDB4RkY7CiAg
ICAgICAgIH0KIAlzYXNsZGF0YVswXSA9IDA7CiAJaWYodGV4dC0+cmVxdWlyZXNzZiAhPSAwICYm
ICFwYXJhbXMtPnByb3BzLm1heGJ1ZnNpemUpIHsKQEAgLTExNTAsOSArMTE2Niw3IEBACiAJdGV4
dC0+c3RhdGUgPSBTQVNMX0dTU0FQSV9TVEFURV9BVVRIRU5USUNBVEVEOwogCQogCS8qIHVzZWQg
YnkgbGF5ZXJzICovCi0JX3BsdWdfZGVjb2RlX2luaXQoJnRleHQtPmRlY29kZV9jb250ZXh0LCB0
ZXh0LT51dGlscywKLQkJCSAgKHBhcmFtcy0+cHJvcHMubWF4YnVmc2l6ZSA+IDB4RkZGRkZGKSA/
IDB4RkZGRkZGIDoKLQkJCSAgcGFyYW1zLT5wcm9wcy5tYXhidWZzaXplKTsKKwlfcGx1Z19kZWNv
ZGVfaW5pdCgmdGV4dC0+ZGVjb2RlX2NvbnRleHQsIHRleHQtPnV0aWxzLCBvcGFyYW1zLT5tYXhv
dXRidWYpOwogCQogCW9wYXJhbXMtPmRvbmVmbGFnID0gMTsKIAkKQEAgLTE2MzEsNiArMTY0NSw5
IEBACiAJCW9wYXJhbXMtPm1heG91dGJ1ZiA9IG1heF9pbnB1dDsKIAkgICAgfQogCX0KKwllbHNl
IHsKKwkJbWF4X2lucHV0ID0gb3BhcmFtcy0+bWF4b3V0YnVmOworCX0KIAkKIAlHU1NfTE9DS19N
VVRFWChwYXJhbXMtPnV0aWxzKTsKIAlnc3NfcmVsZWFzZV9idWZmZXIoJm1pbl9zdGF0LCBvdXRw
dXRfdG9rZW4pOwpAQCAtMTY1NywxOSArMTY3NCwxNiBAQAogCSAgICBtZW1jcHkoKGNoYXIgKilp
bnB1dF90b2tlbi0+dmFsdWUrNCxvcGFyYW1zLT51c2VyLGFsZW4pOwogCiAJLyogYnVpbGQgdXAg
b3VyIHNlY3VyaXR5IHByb3BlcnRpZXMgdG9rZW4gKi8KLSAgICAgICAgaWYgKHBhcmFtcy0+cHJv
cHMubWF4YnVmc2l6ZSA+IDB4RkZGRkZGKSB7CisJaWYgKG1heF9pbnB1dCA+IDB4RkZGRkZGKSB7
CiAgICAgICAgICAgICAvKiBtYWtlIHN1cmUgbWF4YnVmc2l6ZSBpc24ndCB0b28gbGFyZ2UgKi8K
ICAgICAgICAgICAgIC8qIG1heGJ1ZnNpemUgPSAweEZGRkZGRiAqLwogICAgICAgICAgICAgKCh1
bnNpZ25lZCBjaGFyICopaW5wdXRfdG9rZW4tPnZhbHVlKVsxXSA9IDB4RkY7CiAgICAgICAgICAg
ICAoKHVuc2lnbmVkIGNoYXIgKilpbnB1dF90b2tlbi0+dmFsdWUpWzJdID0gMHhGRjsKICAgICAg
ICAgICAgICgodW5zaWduZWQgY2hhciAqKWlucHV0X3Rva2VuLT52YWx1ZSlbM10gPSAweEZGOwog
ICAgICAgICB9IGVsc2UgewotICAgICAgICAgICAgKCh1bnNpZ25lZCBjaGFyICopaW5wdXRfdG9r
ZW4tPnZhbHVlKVsxXSA9IAotICAgICAgICAgICAgICAgIChwYXJhbXMtPnByb3BzLm1heGJ1ZnNp
emUgPj4gMTYpICYgMHhGRjsKLSAgICAgICAgICAgICgodW5zaWduZWQgY2hhciAqKWlucHV0X3Rv
a2VuLT52YWx1ZSlbMl0gPSAKLSAgICAgICAgICAgICAgICAocGFyYW1zLT5wcm9wcy5tYXhidWZz
aXplID4+IDgpICYgMHhGRjsKLSAgICAgICAgICAgICgodW5zaWduZWQgY2hhciAqKWlucHV0X3Rv
a2VuLT52YWx1ZSlbM10gPSAKLSAgICAgICAgICAgICAgICAocGFyYW1zLT5wcm9wcy5tYXhidWZz
aXplID4+IDApICYgMHhGRjsKKwkJKCh1bnNpZ25lZCBjaGFyICopaW5wdXRfdG9rZW4tPnZhbHVl
KVsxXSA9IChtYXhfaW5wdXQgPj4gMTYpICYgMHhGRjsKKwkJKCh1bnNpZ25lZCBjaGFyICopaW5w
dXRfdG9rZW4tPnZhbHVlKVsyXSA9IChtYXhfaW5wdXQgPj4gOCkgJiAweEZGOworCQkoKHVuc2ln
bmVkIGNoYXIgKilpbnB1dF90b2tlbi0+dmFsdWUpWzNdID0gKG1heF9pbnB1dCA+PiAwKSAmIDB4
RkY7CiAgICAgICAgIH0KIAkoKHVuc2lnbmVkIGNoYXIgKilpbnB1dF90b2tlbi0+dmFsdWUpWzBd
ID0gbXljaG9pY2U7CiAJCkBAIC0xNzI0LDkgKzE3MzgsNyBAQAogCW9wYXJhbXMtPmRvbmVmbGFn
ID0gMTsKIAkKIAkvKiB1c2VkIGJ5IGxheWVycyAqLwotCV9wbHVnX2RlY29kZV9pbml0KCZ0ZXh0
LT5kZWNvZGVfY29udGV4dCwgdGV4dC0+dXRpbHMsCi0JCQkgIChwYXJhbXMtPnByb3BzLm1heGJ1
ZnNpemUgPiAweEZGRkZGRikgPyAweEZGRkZGRiA6Ci0JCQkgIHBhcmFtcy0+cHJvcHMubWF4YnVm
c2l6ZSk7CisJX3BsdWdfZGVjb2RlX2luaXQoJnRleHQtPmRlY29kZV9jb250ZXh0LCB0ZXh0LT51
dGlscywgTUFYQlVGRl9ISVdBVEVSKTsKIAkKIAlyZXR1cm4gU0FTTF9PSzsKICAgICB9CkBAIC0x
NzQwLDcgKzE3NTIsNyBAQAogICAgIHJldHVybiBTQVNMX0ZBSUw7IC8qIHNob3VsZCBuZXZlciBn
ZXQgaGVyZSAqLwogfQogCi1zdGF0aWMgY29uc3QgbG9uZyBnc3NhcGlfcmVxdWlyZWRfcHJvbXB0
c1tdID0geworc3RhdGljIGNvbnN0IHVuc2lnbmVkIGxvbmcgZ3NzYXBpX3JlcXVpcmVkX3Byb21w
dHNbXSA9IHsKICAgICBTQVNMX0NCX0xJU1RfRU5ECiB9OyAgCiAKZGlmZiAtcnV3IGN5cnVzLXNh
c2wtMi4xLjIyL3BsdWdpbnMvcGx1Z2luX2NvbW1vbi5jIGN5cnVzLXNhc2wtMi4xLjIyLW1vZHMv
cGx1Z2lucy9wbHVnaW5fY29tbW9uLmMKLS0tIGN5cnVzLXNhc2wtMi4xLjIyL3BsdWdpbnMvcGx1
Z2luX2NvbW1vbi5jCTIwMDQtMDYtMjMgMTE6NDM6MzcuMDAwMDAwMDAwIC0wNzAwCisrKyBjeXJ1
cy1zYXNsLTIuMS4yMi1tb2RzL3BsdWdpbnMvcGx1Z2luX2NvbW1vbi5jCTIwMDYtMDEtMTIgMTM6
MzM6MjIuMDAwMDAwMDAwIC0wODAwCkBAIC0yOTAsNyArMjkwLDcgQEAKIHsKICAgICBpZighdXRp
bHMgfHwgIXNlY3JldCB8fCAhKCpzZWNyZXQpKSByZXR1cm47CiAKLSAgICB1dGlscy0+ZXJhc2Vi
dWZmZXIoKCpzZWNyZXQpLT5kYXRhLCAoKnNlY3JldCktPmxlbik7CisgICAgdXRpbHMtPmVyYXNl
YnVmZmVyKChjaGFyICopKCpzZWNyZXQpLT5kYXRhLCAoKnNlY3JldCktPmxlbik7CiAgICAgdXRp
bHMtPmZyZWUoKnNlY3JldCk7CiAgICAgKnNlY3JldCA9IE5VTEw7CiB9CkBAIC02MTIsNyArNjEy
LDkgQEAKIAogICAgIHRleHQtPnV0aWxzID0gdXRpbHM7CiAgICAgdGV4dC0+bmVlZHNpemUgPSA0
OwotICAgIHRleHQtPmluX21heGJ1ZiA9IGluX21heGJ1ZjsKKwkKKwkvKiBzdGFydCB3aXRoIGEg
MTZLIGNhcCAqLworICAgIHRleHQtPmluX21heGJ1ZiA9IChpbl9tYXhidWYgPCBNQVhCVUZGX0xP
V0FURVIpID8gaW5fbWF4YnVmIDogTUFYQlVGRl9MT1dBVEVSOwogfQogCiAvKgpAQCAtNjM0LDEx
ICs2MzYsMTEgQEAKICAgICBjaGFyICp0bXA7CiAgICAgdW5zaWduZWQgdG1wbGVuOwogICAgIGlu
dCByZXQ7Ci0gICAgCi0gICAgKm91dHB1dGxlbiA9IDA7CisJY2hhciAqbmV3YnVmZmVyID0gTlVM
TDsKIAogICAgIHdoaWxlIChpbnB1dGxlbikgeyAvKiBtb3JlIGlucHV0ICovCiAJaWYgKHRleHQt
Pm5lZWRzaXplKSB7IC8qIG5lZWQgdG8gZ2V0IHRoZSByZXN0IG9mIHRoZSA0LWJ5dGUgc2l6ZSAq
LworCQkqb3V0cHV0bGVuID0gMDsKIAogCSAgICAvKiBjb3B5IGFzIG1hbnkgYnl0ZXMgKHVwIHRv
IDQpIGFzIHdlIGhhdmUgaW50byBzaXplIGJ1ZmZlciAqLwogCSAgICB0b2NvcHkgPSAoaW5wdXRs
ZW4gPiB0ZXh0LT5uZWVkc2l6ZSkgPyB0ZXh0LT5uZWVkc2l6ZSA6IGlucHV0bGVuOwpAQCAtNjUy
LDE0ICs2NTQsMzkgQEAKIAkJbWVtY3B5KCYodGV4dC0+c2l6ZSksIHRleHQtPnNpemVidWYsIDQp
OwogCQl0ZXh0LT5zaXplID0gbnRvaGwodGV4dC0+c2l6ZSk7CiAJCi0JCWlmICghdGV4dC0+c2l6
ZSkgLyogc2hvdWxkIG5ldmVyIGhhcHBlbiAqLworCQlpZiAoIXRleHQtPnNpemUpIHsgLyogc2hv
dWxkIG5ldmVyIGhhcHBlbiAqLworCQkJdGV4dC0+dXRpbHMtPmxvZyhOVUxMLCBTQVNMX0xPR19F
UlIsICJ0ZXh0LT5zaXplID0gMCIpOwogCQkgICAgcmV0dXJuIFNBU0xfRkFJTDsKKwkgICAgfQog
CSAgICAKLQkJaWYgKHRleHQtPnNpemUgPiB0ZXh0LT5pbl9tYXhidWYpIHsKKwkJaWYgKHRleHQt
PnNpemUgPiB0ZXh0LT5pbl9tYXhidWYpCisJCXsKKwkJCS8qIGRvbid0IHByaW50IHRoaXMgb25l
IGluIHByb2R1Y3Rpb24gY29kZSAqLworCQkgICAgLyoKIAkJICAgIHRleHQtPnV0aWxzLT5sb2co
TlVMTCwgU0FTTF9MT0dfRVJSLCAKLQkJCQkgICAgICJlbmNvZGVkIHBhY2tldCBzaXplIHRvbyBi
aWcgKCVkID4gJWQpIiwKKwkJCQkgICAgICJsYXJnZSBlbmNvZGVkIHBhY2tldCwgZXhwYW5kaW5n
IGJ1ZmZlciAxICglZCA+ICVkKSIsCiAJCQkJICAgICB0ZXh0LT5zaXplLCB0ZXh0LT5pbl9tYXhi
dWYpOwotCQkgICAgcmV0dXJuIFNBU0xfRkFJTDsKKwkJCSovCisJCQl0ZXh0LT5pbl9tYXhidWYg
PSB0ZXh0LT5zaXplICsgTUFYQlVGRl9IRUFEUk9PTTsKKwkJCW5ld2J1ZmZlciA9IHRleHQtPnV0
aWxzLT5tYWxsb2ModGV4dC0+aW5fbWF4YnVmKTsKKwkJCWlmIChuZXdidWZmZXIgPT0gTlVMTCkg
cmV0dXJuIFNBU0xfTk9NRU07CisJCQlpZiAodGV4dC0+YnVmZmVyICE9IE5VTEwpIHsKKwkJCQlt
ZW1jcHkobmV3YnVmZmVyLCB0ZXh0LT5idWZmZXIsIHRleHQtPmN1cnNpemUpOworCQkJCXRleHQt
PnV0aWxzLT5mcmVlKHRleHQtPmJ1ZmZlcik7CisJCQl9CisJCQl0ZXh0LT5idWZmZXIgPSBuZXdi
dWZmZXI7CisJCX0KKwkJZWxzZSBpZiAodGV4dC0+aW5fbWF4YnVmID4gTUFYQlVGRl9ISVdBVEVS
ICYmIHRleHQtPnNpemUgPCBNQVhCVUZGX0hJV0FURVIpCisJCXsKKwkJCS8qIHJlZHVjZSBiYWNr
IHRvIDY0SyB0byBhdm9pZCBtZW1vcnkgcHJlc3N1cmUgKi8JCQkKKwkJCXRleHQtPmluX21heGJ1
ZiA9IE1BWEJVRkZfSElXQVRFUjsKKwkJCW5ld2J1ZmZlciA9IHRleHQtPnV0aWxzLT5tYWxsb2Mo
dGV4dC0+aW5fbWF4YnVmKTsKKwkJCWlmIChuZXdidWZmZXIgPT0gTlVMTCkgcmV0dXJuIFNBU0xf
Tk9NRU07CisJCQlpZiAodGV4dC0+YnVmZmVyICE9IE5VTEwpIHsKKwkJCQltZW1jcHkobmV3YnVm
ZmVyLCB0ZXh0LT5idWZmZXIsIHRleHQtPmN1cnNpemUpOworCQkJCXRleHQtPnV0aWxzLT5mcmVl
KHRleHQtPmJ1ZmZlcik7CisJCQl9CisJCQl0ZXh0LT5idWZmZXIgPSBuZXdidWZmZXI7CiAJCX0K
IAkgICAgCiAJCWlmICghdGV4dC0+YnVmZmVyKQpAQCAtNjc0LDYgKzcwMSwyMyBAQAogCSAgICB9
CiAJfQogCisJLyogbmVlZCB0byBjaGVjayBldmVyeSB0aW1lICovCisJaWYgKHRleHQtPnNpemUg
PiB0ZXh0LT5pbl9tYXhidWYpIHsKKwkJLyogdGhpcyBvbmUgaXMgdW51c3VhbCwgd2FudCB0aGUg
bG9nZ2luZyAqLworCQl0ZXh0LT51dGlscy0+bG9nKE5VTEwsIFNBU0xfTE9HX0VSUiwgCisJCQkJ
ICJsYXJnZSBlbmNvZGVkIHBhY2tldCwgZXhwYW5kaW5nIGJ1ZmZlciAyICglZCA+ICVkKSIsCisJ
CQkJIHRleHQtPnNpemUsIHRleHQtPmluX21heGJ1Zik7CisJCQorCQl0ZXh0LT5pbl9tYXhidWYg
PSB0ZXh0LT5zaXplICsgTUFYQlVGRl9IRUFEUk9PTTsKKwkJbmV3YnVmZmVyID0gdGV4dC0+dXRp
bHMtPm1hbGxvYyh0ZXh0LT5pbl9tYXhidWYpOworCQlpZiAobmV3YnVmZmVyID09IE5VTEwpIHJl
dHVybiBTQVNMX05PTUVNOworCQlpZiAodGV4dC0+YnVmZmVyICE9IE5VTEwpIHsKKwkJCW1lbWNw
eShuZXdidWZmZXIsIHRleHQtPmJ1ZmZlciwgdGV4dC0+Y3Vyc2l6ZSk7CisJCQl0ZXh0LT51dGls
cy0+ZnJlZSh0ZXh0LT5idWZmZXIpOworCQl9CisJCXRleHQtPmJ1ZmZlciA9IG5ld2J1ZmZlcjsK
Kwl9CisJCiAJZGlmZiA9IHRleHQtPnNpemUgLSB0ZXh0LT5jdXJzaXplOyAvKiBieXRlcyBuZWVk
ZWQgZm9yIGZ1bGwgcGFja2V0ICovCiAKIAlpZiAoaW5wdXRsZW4gPCBkaWZmKSB7CS8qIG5vdCBh
IGNvbXBsZXRlIHBhY2tldCwgbmVlZCBtb3JlIGlucHV0ICovCmRpZmYgLXJ1dyBjeXJ1cy1zYXNs
LTIuMS4yMi9wbHVnaW5zL3BsdWdpbl9jb21tb24uaCBjeXJ1cy1zYXNsLTIuMS4yMi1tb2RzL3Bs
dWdpbnMvcGx1Z2luX2NvbW1vbi5oCi0tLSBjeXJ1cy1zYXNsLTIuMS4yMi9wbHVnaW5zL3BsdWdp
bl9jb21tb24uaAkyMDA0LTA2LTIzIDExOjQzOjM3LjAwMDAwMDAwMCAtMDcwMAorKysgY3lydXMt
c2FzbC0yLjEuMjItbW9kcy9wbHVnaW5zL3BsdWdpbl9jb21tb24uaAkyMDA2LTAxLTEyIDEzOjMz
OjM1LjAwMDAwMDAwMCAtMDgwMApAQCAtNjMsNiArNjMsMTEgQEAKICNpbmNsdWRlIDxzYXNsdXRp
bC5oPgogI2luY2x1ZGUgPHNhc2xwbHVnLmg+CiAKKy8qIHNldHBvaW50cyBmb3IgbWF4YnVmZiAq
LworI2RlZmluZSBNQVhCVUZGX0xPV0FURVIJCSgweDQwMDApCisjZGVmaW5lIE1BWEJVRkZfSElX
QVRFUgkJKDB4MTAwMDApCisjZGVmaW5lIE1BWEJVRkZfSEVBRFJPT00JKDB4NDAwKQorCiAjaWZk
ZWYgV0lOMzIKICNkZWZpbmUgUExVR19BUEkgX19kZWNsc3BlYyhkbGxleHBvcnQpCiAjZWxzZQo=
</data>        

          </attachment>
      

    </bug>

</bugzilla>