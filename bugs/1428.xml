<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>1428</bug_id>
          
          <creation_ts>2002-10-01 16:59 EDT</creation_ts>
          <short_desc>pop3d shouldn&apos;t advertise APOP without auxprop support</short_desc>
          <delta_ts>2010-10-18 12:42:58 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>POP</component>
          <version>2.1.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>blocker</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ken Murchison">ken@oceana.com</reporter>
          <assigned_to name="Ken Murchison">ken@oceana.com</assigned_to>
          <cc>rjs3@andrew.cmu.edu</cc>
          

      

      

      
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2002-10-01 16:59:45 EDT</bug_when>
            <thetext>pop3d just checks to see if SASL supports APOP, but doesn&apos;t check to see if the 
pwcheck_method can privide us with a plaintext password (ie, auxprop)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2002-10-01 20:36:09 EDT</bug_when>
            <thetext>After a second look all of the other mechs behave in the same way, the only 
difference is the error string.  I also forgot that pwcheck_method just 
specifies how to verify plaintext passwords.  So, this isn&apos;t really a bug at 
all.  However, should we make the error from APOP be similar to the other 
mechs, ie &quot;user not found&quot; instead of &quot;another step is needed in 
authentication&quot;?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2002-10-01 20:52:18 EDT</bug_when>
            <thetext>Should we allow APOP to be disabled at runtime via the config file?  Should we 
just use mech_list, or should we create a new option?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-10-02 09:51:21 EDT</bug_when>
            <thetext>question 1: change the error code from SASL_NOTDONE to SASL_BADAUTH.  So just
find where&apos; we&apos;re returning the wrong thing.

Perhaps sasl_checkapop(NULL) should be a bit more clever and find out if we have
a n auxprop plugin or something.  I&apos;m not really sure what the right thing is.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2002-10-02 09:55:57 EDT</bug_when>
            <thetext>I thought about checking for auxprop, but none of the other mechs do this.  
That is why I thought about allowing the admin to disable it.  Actually, since 
APOP only effects POP, perhaps it should be configurable in imapd.conf.  Or we 
just make the admin compile without APOP.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2002-10-02 11:53:13 EDT</bug_when>
            <thetext>Committed a fix to the error code.  I&apos;ve also convinced myself that disabling 
APOP at runtime should be done in the application.  Closing bug.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>