<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3887</bug_id>
          
          <creation_ts>2015-03-06 04:36 EDT</creation_ts>
          <short_desc>patch to address solaris compile errors and warnings</short_desc>
          <delta_ts>2015-03-06 04:36:21 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Distribution</component>
          <version>2.5.x (next)</version>
          <rep_platform>Sun</rep_platform>
          <op_sys>Solaris</op_sys>
          <bug_status>NEW</bug_status>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter>hsk@imb-jena.de</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="">hsk@imb-jena.de</who>
            <bug_when>2015-03-06 04:36:21 EDT</bug_when>
            <thetext>Created an attachment (id=1554)
patches to cyrus-imapd-2.5.0 to address solaris10/studio12 issues

having compiled cyrus-imapd-2.5.0 on solaris10 using the sunstudio12
compiler, i wanted to share the following:

1) sunstudio&apos;s cc chokes on the supplied lib/imapopts.c.  i had to
remove it so it could be re-made and then compiled.
proposed change:  do not supply lib/imapopts.c (nor lib/imapopts.h),
and, as in 2.4.x, add it&apos;s removal to clean (or at least distclean)
target.  see part 1 of the patch file.

2) lib/vparse.c calls strndup() which is not available on solaris10,
resulting in an undefined symbol in libcyrus_min.so, and in failing
compilation of the imap executables (imtest, imapd, ...).
xstrndup() should be used instead.  see part 2 of the patch file.

3) tools/vzic/vzic-parse.c calls strnlen() which is not available on
solaris10.  i did not bother to add a replacement function and some
autoconf checks, but just added a one-liner that eliminates strnlen().
see part 3 of the patch file.

4) in master/master.c, i eliminated a spurious &quot;;&quot; (the compiler warned
about an error :-)

5) to eliminate &quot;initializer will be sign-extended&quot;, &quot;argument is
incompatible with prototype&quot;, and &quot;implicit function declaration&quot;
compiler warnings, i changed some &quot;-1&quot; initializers to &quot;~0U&quot;, changed
some &quot;unsigned long&quot; declarations to &quot;size_t&quot;, and added some #include
directives.  also i changed lib/stristr.c to avoid a &quot;typedef redeclared&quot;
warning:  uint is typedef&apos;ed in &lt;sys/types.h&gt; which is included by
&quot;config.h&quot; (in 2.4.x not in lib/stristr.c).

kind regards,
fritz</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1554</attachid>
            <date>2015-03-06 04:36 EDT</date>
            <desc>patches to cyrus-imapd-2.5.0 to address solaris10/studio12 issues</desc>
            <filename>patchfile</filename>
            <type>text/plain</type>
            <size>7473</size>
            <attacher>hsk@imb-jena.de</attacher>
            
              <data encoding="base64">Cj09PT09PQpwYXJ0IDE6Cj09PT09PQoKLS0tIGEvTWFrZWZpbGUuYW0JVHVlIE1hciAgMyAyMzo0
NjoxMiAyMDE1CisrKyBiL01ha2VmaWxlLmFtCVRodSBNYXIgIDUgMTU6MDI6MDEgMjAxNQpAQCAt
NzcsNiArNzcsOCBAQAogCWltYXAvdHpfZXJyLmMgXAogCWltYXAvdHpfZXJyLmggXAogCWNvbV9l
cnIvZXQvY29tcGlsZV9ldCBcCisJbGliL2ltYXBvcHRzLmMgXAorCWxpYi9pbWFwb3B0cy5oIFwK
IAlwZXJsL2Fubm90YXRvci9NYWtlZmlsZSBcCiAJcGVybC9hbm5vdGF0b3IvTWFrZWZpbGUuUEwg
XAogCXBlcmwvaW1hcC9NYWtlZmlsZSBcCkBAIC05OCw3ICsxMDAsNiBAQAogCWltYXAvbG10cHN0
YXRzLmggXAogCWltYXAvcHVzaHN0YXRzLmggXAogCWxpYi9jaGFydGFibGUuYyBcCi0JbGliL2lt
YXBvcHRzLmggXAogCXNpZXZlL2FkZHIuaCBcCiAJc2lldmUvc2lldmUuaAogCi0tLSBhL01ha2Vm
aWxlLmluCVR1ZSBNYXIgIDMgMjM6NTY6MTYgMjAxNQorKysgYi9NYWtlZmlsZS5pbglUaHUgTWFy
ICA1IDE1OjAyOjI4IDIwMTUKQEAgLTE1OTAsNiArMTU5MCw4IEBACiAJaW1hcC90el9lcnIuYyBc
CiAJaW1hcC90el9lcnIuaCBcCiAJY29tX2Vyci9ldC9jb21waWxlX2V0IFwKKwlsaWIvaW1hcG9w
dHMuYyBcCisJbGliL2ltYXBvcHRzLmggXAogCXBlcmwvYW5ub3RhdG9yL01ha2VmaWxlIFwKIAlw
ZXJsL2Fubm90YXRvci9NYWtlZmlsZS5QTCBcCiAJcGVybC9pbWFwL01ha2VmaWxlIFwKQEAgLTE2
MTEsNyArMTYxMyw2IEBACiAJaW1hcC9sbXRwc3RhdHMuaCBcCiAJaW1hcC9wdXNoc3RhdHMuaCBc
CiAJbGliL2NoYXJ0YWJsZS5jIFwKLQlsaWIvaW1hcG9wdHMuaCBcCiAJc2lldmUvYWRkci5oIFwK
IAlzaWV2ZS9zaWV2ZS5oCiAKCj09PT09PQpwYXJ0IDI6Cj09PT09PQoKLS0tIGEvbGliL3ZwYXJz
ZS5jCVR1ZSBNYXIgIDMgMTM6MDk6MTcgMjAxNQorKysgYi9saWIvdnBhcnNlLmMJVGh1IE1hciAg
NSAxMTowODo1NSAyMDE1CkBAIC02LDEyICs2LDEzIEBACiAjaW5jbHVkZSA8ZmNudGwuaD4KIAog
I2luY2x1ZGUgInZwYXJzZS5oIgorI2luY2x1ZGUgInhtYWxsb2MuaCIKIAogI2RlZmluZSBMQyhz
KSBkbyB7IGNoYXIgKnA7IGZvciAocCA9IHM7ICpwOyBwKyspIGlmICgqcCA+PSAnQScgJiYgKnAg
PD0gJ1onKSAqcCArPSAoJ2EnIC0gJ0EnKTsgfSB3aGlsZSAoMCkKIAogc3RhdGljIGNoYXIgKmJ1
Zl9kdXBfY3N0cmluZyhzdHJ1Y3QgYnVmICpidWYpCiB7Ci0gICAgY2hhciAqcmV0ID0gc3RybmR1
cChidWYtPnMsIGJ1Zi0+bGVuKTsKKyAgICBjaGFyICpyZXQgPSB4c3RybmR1cChidWYtPnMsIGJ1
Zi0+bGVuKTsKICAgICAvKiBtb3JlIHNwYWNlIGVmZmljaWVudCB0aGFuIHJldHVybmluZyBvdmVy
bGVuZ3RoIGJ1ZmZlcnMsIGFuZAogICAgICAqIHlvdSB3b3VsZCBqdXN0IHdpbmQgdXAgbWFsbG9j
aW5nIGFub3RoZXIgYnVmZmVyIGFueXdheSAqLwogICAgIGJ1Zi0+bGVuID0gMDsKCj09PT09PQpw
YXJ0MzoKPT09PT09CgotLS0gYS90b29scy92emljL3Z6aWMtcGFyc2UuYwlUdWUgTWFyICAzIDIz
OjQ0OjQxIDIwMTUKKysrIGIvdG9vbHMvdnppYy92emljLXBhcnNlLmMJVGh1IE1hciAgNSAxODo0
NTo1MCAyMDE1CkBAIC0zMiw2ICszMiw3IEBACiAKICNpbmNsdWRlICJ2emljLmgiCiAjaW5jbHVk
ZSAidnppYy1wYXJzZS5oIgorI2luY2x1ZGUgInZ6aWMtb3V0cHV0LmgiCiAKIC8qIFRoaXMgaXMg
dGhlIG1heGltdW0gbGluZSBsZW5ndGggd2UgYWxsb3cuICovCiAjZGVmaW5lIE1BWF9MSU5FX0xF
TgkxMDI0CkBAIC01MDAsNyArNTAxLDggQEAKIAogI2lmIENSRUFURV9TWU1MSU5LCiAgIHsKLSAg
ICAgIGludCBsZW4gPSBzdHJubGVuKHRvLDI1NCk7CisgICAgICBpbnQgbGVuIC8qID0gc3Rybmxl
bih0bywgMjU0KSAqLyA7CisgICAgICBmb3IgKGNoYXIgKmMgPSB0bywgbGVuID0gMDsgKmMgJiYg
bGVuIDwgMjU0OyBjKyssIGxlbisrKTsKICAgICAgIGludCBkaXJzID0gMDsKICAgICAgIGludCBp
OwogICAgICAgZm9yIChpID0gMDsgaSA8IGxlbjsgaSsrKSB7Cgo9PT09PT0KcGFydDQ6Cj09PT09
PQoKLS0tIGEvbWFzdGVyL21hc3Rlci5jCVR1ZSBNYXIgIDMgMTM6MDk6MTcgMjAxNQorKysgYi9t
YXN0ZXIvbWFzdGVyLmMJVGh1IE1hciAgNSAxNzozMDoyMCAyMDE1CkBAIC0xNzAsNyArMTcwLDcg
QEAKICAgICBpbnQgc2k7CQkJLyogU2VydmljZXNbXSBpbmRleCAqLwogICAgIGNoYXIgKmRlc2M7
CQkJLyogaHVtYW4gcmVhZGFibGUgZGVzY3JpcHRpb24gZm9yIGxvZ2dpbmcgKi8KICAgICBzdHJ1
Y3QgdGltZXZhbCBzcGF3bnRpbWU7CS8qIHdoZW4gdGhlIGNlbnRyeSB3YXMgYWxsb2NhdGVkICov
Ci0gICAgdGltZV90IHNpZ2h1cHRpbWU7CQkvKiB3aGVuIGRpZCB3ZSBzZW5kIGEgU0lHSFVQICov
OworICAgIHRpbWVfdCBzaWdodXB0aW1lOwkJLyogd2hlbiBkaWQgd2Ugc2VuZCBhIFNJR0hVUCAq
LwogICAgIHN0cnVjdCBjZW50cnkgKm5leHQ7CiB9Owogc3RhdGljIHN0cnVjdCBjZW50cnkgKmN0
YWJsZVtjaGlsZF90YWJsZV9zaXplXTsKCj09PT09PQpwYXJ0NToKPT09PT09CgotLS0gYS9pbWFw
L2N0bF96b25laW5mby5jCVR1ZSBNYXIgIDMgMjM6NDQ6NDEgMjAxNQorKysgYi9pbWFwL2N0bF96
b25laW5mby5jCVRodSBNYXIgIDUgMTY6NTQ6NTIgMjAxNQpAQCAtMjM2LDcgKzIzNiw3IEBACiAJ
ICAgIC8qIFBhdGggaXMgYSByZWd1bGFyIGZpbGUgKHpvbmUpICovCiAJICAgIGludCBmZDsKIAkg
ICAgY29uc3QgY2hhciAqYmFzZSA9IE5VTEw7Ci0JICAgIHVuc2lnbmVkIGxvbmcgbGVuID0gMDsK
KwkgICAgc2l6ZV90IGxlbiA9IDA7CiAJICAgIGljYWxjb21wb25lbnQgKmljYWwsICpjb21wOwog
CSAgICBpY2FscHJvcGVydHkgKnByb3A7CiAKLS0tIGEvaW1hcC9odHRwX2NhbGRhdi5jCVR1ZSBN
YXIgIDMgMTM6MDk6MTcgMjAxNQorKysgYi9pbWFwL2h0dHBfY2FsZGF2LmMJVGh1IE1hciAgNSAx
NzowNjoyNCAyMDE1CkBAIC0zODY2LDcgKzM4NjYsNyBAQAogewogICAgIHhtbE5vZGVQdHIgcHJv
cCA9ICh4bWxOb2RlUHRyKSByb2NrOwogICAgIGNvbnN0IGNoYXIgKmRhdGEgPSBOVUxMLCAqbXNn
X2Jhc2UgPSBOVUxMOwotICAgIHVuc2lnbmVkIGxvbmcgZGF0YWxlbiA9IDA7CisgICAgc2l6ZV90
IGRhdGFsZW4gPSAwOwogICAgIGludCByID0gMDsKIAogICAgIGlmIChwcm9wc3RhdCkgewotLS0g
YS9pbWFwL2h0dHBfZGF2LmMJVHVlIE1hciAgMyAxMzowOToxNyAyMDE1CisrKyBiL2ltYXAvaHR0
cF9kYXYuYwlUaHUgTWFyICA1IDE3OjA0OjE0IDIwMTUKQEAgLTQ4MjksNyArNDgyOSw3IEBACiAg
ICAgbW9kc2VxX3QgYmFzZW1vZHNlcSA9IDA7CiAgICAgbW9kc2VxX3QgaGlnaGVzdG1vZHNlcSA9
IDA7CiAgICAgbW9kc2VxX3QgcmVzcG1vZHNlcSA9IDA7Ci0gICAgdWludDMyX3QgbGltaXQgPSAt
MTsKKyAgICB1aW50MzJfdCBsaW1pdCA9IH4wVTsKICAgICB1aW50MzJfdCByZWNubzsKICAgICB1
aW50MzJfdCBtc2dubzsKICAgICB1aW50MzJfdCBucmVzcCA9IDA7Ci0tLSBhL2ltYXAvaHR0cF9p
c2NoZWR1bGUuYwlUdWUgTWFyICAzIDEzOjA5OjE3IDIwMTUKKysrIGIvaW1hcC9odHRwX2lzY2hl
ZHVsZS5jCVRodSBNYXIgIDUgMTc6MDM6MzUgMjAxNQpAQCAtOTc0LDcgKzk3NCw3IEBACiAgICAg
c3RhdGljIHN0cnVjdCBidWYgcGF0aGJ1ZiA9IEJVRl9JTklUSUFMSVpFUjsKICAgICBzdHJ1Y3Qg
c3RhdCBzYnVmOwogICAgIGNvbnN0IGNoYXIgKm1zZ19iYXNlID0gTlVMTDsKLSAgICB1bnNpZ25l
ZCBsb25nIG1zZ19zaXplID0gMDsKKyAgICBzaXplX3QgbXNnX3NpemUgPSAwOwogICAgIHN0cnVj
dCByZXNwX2JvZHlfdCAqcmVzcF9ib2R5ID0gJnR4bi0+cmVzcF9ib2R5OwogCiAgICAgLyogU2Vl
IGlmIGZpbGUgZXhpc3RzIGFuZCBnZXQgQ29udGVudC1MZW5ndGggJiBMYXN0LU1vZGlmaWVkIHRp
bWUgKi8KLS0tIGEvaW1hcC9odHRwX3Jzcy5jCVR1ZSBNYXIgIDMgMTM6MDk6MTcgMjAxNQorKysg
Yi9pbWFwL2h0dHBfcnNzLmMJVGh1IE1hciAgNSAxNzowMjo1MSAyMDE1CkBAIC00NzksNyArNDc5
LDggQEAKIHsKICAgICBjb25zdCBjaGFyICp0ZW1wbGF0ZV9maWxlID0gY29uZmlnX2dldHN0cmlu
ZyhJTUFQT1BUX1JTU19GRUVETElTVF9URU1QTEFURSk7CiAgICAgY29uc3QgY2hhciAqdmFyID0g
TlVMTCwgKnRlbXBsYXRlID0gTlVMTCwgKnByZWZpeCwgKnN1ZmZpeDsKLSAgICB1bnNpZ25lZCBs
b25nIHRlbXBsYXRlX2xlbiA9IDAsIHByZWZpeF9sZW4sIHN1ZmZpeF9sZW47CisgICAgc2l6ZV90
IHRlbXBsYXRlX2xlbiA9IDA7CisgICAgdW5zaWduZWQgbG9uZyBwcmVmaXhfbGVuLCBzdWZmaXhf
bGVuOwogICAgIHNpemVfdCB2YXJsZW4gPSBzdHJsZW4oRkVFRExJU1RfVkFSKTsKICAgICBpbnQg
ZmQgPSAtMTsKICAgICBzdHJ1Y3QgbWVzc2FnZV9ndWlkIGd1aWQ7Ci0tLSBhL2ltYXAvaHR0cF90
aW1lem9uZS5jCVR1ZSBNYXIgIDMgMTM6MDk6MTcgMjAxNQorKysgYi9pbWFwL2h0dHBfdGltZXpv
bmUuYwlUaHUgTWFyICA1IDE2OjU5OjU3IDIwMTUKQEAgLTEwMzcsNyArMTAzNyw3IEBACiAgICAg
aWYgKHR4bi0+bWV0aCAhPSBNRVRIX0hFQUQpIHsKIAlzdGF0aWMgc3RydWN0IGJ1ZiBwYXRoYnVm
ID0gQlVGX0lOSVRJQUxJWkVSOwogCWNvbnN0IGNoYXIgKnBhdGgsICpwcm90bywgKmhvc3QsICpt
c2dfYmFzZSA9IE5VTEw7Ci0JdW5zaWduZWQgbG9uZyBtc2dfc2l6ZSA9IDA7CisJc2l6ZV90IG1z
Z19zaXplID0gMDsKIAlpY2FsY29tcG9uZW50ICppY2FsLCAqdnR6OwogCWljYWxwcm9wZXJ0eSAq
cHJvcDsKIAlpbnQgZmQ7CkBAIC0xMjUwLDcgKzEyNTAsNyBAQAogICAgIGlmICh0eG4tPm1ldGgg
IT0gTUVUSF9IRUFEKSB7CiAJc3RhdGljIHN0cnVjdCBidWYgcGF0aGJ1ZiA9IEJVRl9JTklUSUFM
SVpFUjsKIAljb25zdCBjaGFyICpwYXRoLCAqbXNnX2Jhc2UgPSBOVUxMOwotCXVuc2lnbmVkIGxv
bmcgbXNnX3NpemUgPSAwOworCXNpemVfdCBtc2dfc2l6ZSA9IDA7CiAJaWNhbGNvbXBvbmVudCAq
aWNhbCwgKnZ0ejsKIAljb25zdCBzdHJ1Y3Qgb2JzZXJ2YW5jZSAqcHJvbGVwdGljOwogCWNoYXIg
ZHRzdGFtcFsyMV07Ci0tLSBhL2ltYXAvaHR0cGQuYwlUdWUgTWFyICAzIDEzOjA5OjE3IDIwMTUK
KysrIGIvaW1hcC9odHRwZC5jCVRodSBNYXIgIDUgMTc6MTA6NTggMjAxNQpAQCAtMTY1LDcgKzE2
NSw3IEBACiAgICAgICAmZGlnZXN0X3NlbmRfc3VjY2VzcywgZGlnZXN0X3JlY3Zfc3VjY2VzcyB9
LAogICAgIHsgQVVUSF9TUE5FR08sICJOZWdvdGlhdGUiLCAiR1NTLVNQTkVHTyIsIEFVVEhfQkFT
RTY0LCBOVUxMLCBOVUxMIH0sCiAgICAgeyBBVVRIX05UTE0sICJOVExNIiwgIk5UTE0iLCBBVVRI
X05FRURfUEVSU0lTVCB8IEFVVEhfQkFTRTY0LCBOVUxMLCBOVUxMIH0sCi0gICAgeyAtMSwgTlVM
TCwgTlVMTCwgMCwgTlVMTCwgTlVMTCB9CisgICAgeyB+MFUsIE5VTEwsIE5VTEwsIDAsIE5VTEws
IE5VTEwgfQogfTsKIAogCkBAIC0zNTA5LDcgKzM1MDksNyBAQAogICAgIHN0YXRpYyBzdHJ1Y3Qg
YnVmIHBhdGhidWYgPSBCVUZfSU5JVElBTElaRVI7CiAgICAgc3RydWN0IHN0YXQgc2J1ZjsKICAg
ICBjb25zdCBjaGFyICptc2dfYmFzZSA9IE5VTEw7Ci0gICAgdW5zaWduZWQgbG9uZyBtc2dfc2l6
ZSA9IDA7CisgICAgc2l6ZV90IG1zZ19zaXplID0gMDsKICAgICBzdHJ1Y3QgcmVzcF9ib2R5X3Qg
KnJlc3BfYm9keSA9ICZ0eG4tPnJlc3BfYm9keTsKIAogICAgIC8qIENoZWNrIGlmIHRoaXMgaXMg
YSByZXF1ZXN0IGZvciAvLndlbGwta25vd24vIGxpc3RpbmcgKi8KQEAgLTM3NDcsNyArMzc0Nyw3
IEBACiB7CiAgICAgcGFyc2VfcGF0aF90IHBhcnNlX3BhdGggPSAocGFyc2VfcGF0aF90KSBwYXJh
bXM7CiAgICAgY29uc3QgY2hhciAqKmhkcjsKLSAgICB1bnNpZ25lZCBsb25nIG1heF9md2QgPSAt
MTsKKyAgICB1bnNpZ25lZCBsb25nIG1heF9md2QgPSB+MFU7CiAgICAgc3RydWN0IGJ1ZiAqbXNn
ID0gJnR4bi0+cmVzcF9ib2R5LnBheWxvYWQ7CiAKICAgICAvKiBSZXNwb25zZSBzaG91bGQgbm90
IGJlIGNhY2hlZCAqLwotLS0gYS9pbWFwL21ib3hldmVudC5jCVR1ZSBNYXIgIDMgMTM6MDk6MTcg
MjAxNQorKysgYi9pbWFwL21ib3hldmVudC5jCVRodSBNYXIgIDUgMTI6NDM6MzggMjAxNQpAQCAt
ODI5LDcgKzgyOSw3IEBACiAJCQkgICAgICAgY29uc3Qgc3RydWN0IGluZGV4X3JlY29yZCAqcmVj
b3JkLCBGSUxFKiBjb250ZW50KQogewogICAgIGNvbnN0IGNoYXIgKmJhc2UgPSBOVUxMOwotICAg
IHVuc2lnbmVkIGxvbmcgbGVuID0gMDsKKyAgICBzaXplX3QgbGVuID0gMDsKICAgICBzaXplX3Qg
b2Zmc2V0LCBzaXplLCB0cnVuY2F0ZTsKIAogICAgIGlmICghZXZlbnQpCi0tLSBhL2xpYi9jeXJ1
c2RiX3NraXBsaXN0LmMJVHVlIE1hciAgMyAxMzowOToxNyAyMDE1CisrKyBiL2xpYi9jeXJ1c2Ri
X3NraXBsaXN0LmMJVGh1IE1hciAgNSAxMzowODozNCAyMDE1CkBAIC0xMjM2LDcgKzEyMzYsNyBA
QAogICAgIHVuc2lnbmVkIG51bV9pb3Y7CiAgICAgc3RydWN0IHR4biAqdGlkOwogICAgIHN0cnVj
dCB0eG4gKmxvY2FsdGlkID0gTlVMTDsKLSAgICB1aW50MzJfdCBlbmRwYWRkaW5nID0gaHRvbmwo
LTEpOworICAgIHVpbnQzMl90IGVuZHBhZGRpbmcgPSBodG9ubCh+MFUpOwogICAgIHVpbnQzMl90
IHplcm9wYWRkaW5nWzRdID0geyAwLCAwLCAwLCAwIH07CiAgICAgdW5zaWduZWQgdXBkYXRlb2Zm
c2V0c1tTS0lQTElTVF9NQVhMRVZFTCsxXTsKICAgICB1bnNpZ25lZCBuZXdvZmZzZXRzW1NLSVBM
SVNUX01BWExFVkVMKzFdOwotLS0gYS9saWIvcHRyYXJyYXkuYwlUdWUgTWFyICAzIDEzOjA5OjE3
IDIwMTUKKysrIGIvbGliL3B0cmFycmF5LmMJVGh1IE1hciAgNSAxMToxNToyMiAyMDE1CkBAIC00
NSw2ICs0NSw3IEBACiAKICNpbmNsdWRlICJwdHJhcnJheS5oIgogI2luY2x1ZGUgPG1lbW9yeS5o
PgorI2luY2x1ZGUgPHN0cmluZy5oPgogI2luY2x1ZGUgInhtYWxsb2MuaCIKIAogRVhQT1JURUQg
cHRyYXJyYXlfdCAqcHRyYXJyYXlfbmV3KHZvaWQpCi0tLSBhL2xpYi9zdHJpc3RyLmMJTW9uIEp1
bCAyOCAxNDoxNjozNSAyMDE0CisrKyBiL2xpYi9zdHJpc3RyLmMJVGh1IE1hciAgNSAxNDo0Nzo0
OCAyMDE1CkBAIC0yMyw3ICsyMyw3IEBACiAKICNpbmNsdWRlICJjb25maWcuaCIKIAotI2lmbmRl
ZiBfQUlYCisjaWYgISBkZWZpbmVkKF9BSVgpICYmICEgZGVmaW5lZChfX3N1bikKIHR5cGVkZWYg
dW5zaWduZWQgaW50IHVpbnQ7CiAjZW5kaWYKIAotLS0gYS9saWIvdGltZXMuYwlNb24gSnVsIDI4
IDE0OjE2OjM1IDIwMTQKKysrIGIvbGliL3RpbWVzLmMJVGh1IE1hciAgNSAxMToxNzoxNCAyMDE1
CkBAIC00MSw2ICs0MSw3IEBACiAgKi8KIAogI2luY2x1ZGUgPHN0ZGlvLmg+CisjaW5jbHVkZSA8
c3RyaW5ncy5oPgogI2luY2x1ZGUgPG1lbW9yeS5oPgogI2luY2x1ZGUgPGN0eXBlLmg+CiAKCj09
PT09PQoK
</data>        

          </attachment>
      

    </bug>

</bugzilla>