<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3812</bug_id>
          
          <creation_ts>2013-09-16 11:38 EDT</creation_ts>
          <short_desc>update sieve imapflags extension to imap4flags defined in RFC 5232</short_desc>
          <delta_ts>2015-01-07 02:18:46 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Sieve</component>
          <version>2.5.x (next)</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.5-next</target_milestone>
          
          <blocked>3584</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="James Cassell">fedoraproject@cyberpear.com</reporter>
          <assigned_to name="Jeroen van Meeuwen (Kolab Systems)">vanmeeuwen@kolabsys.com</assigned_to>
          <cc>dilyan.palauzov@aegee.org</cc>
    
    <cc>fedoraproject@cyberpear.com</cc>
    
    <cc>slim@inbox.lv</cc>
    
    <cc>vanmeeuwen@kolabsys.com</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="James Cassell">fedoraproject@cyberpear.com</who>
            <bug_when>2013-09-16 11:38:40 EDT</bug_when>
            <thetext>+++ This bug was initially created as a clone of Bug #3584 +++

imapflags extension should be updated to imap4flags defined in RFC 5232</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="James Cassell">fedoraproject@cyberpear.com</who>
            <bug_when>2013-09-16 11:47:24 EDT</bug_when>
            <thetext>I&apos;m currently working on this.  I&apos;ve been trying to get familiar with the code in the past few days.  I&apos;m currently working on understanding sieve/sieve.y and sieve/sieve-lex.l (I&apos;m familiar with C, but not with yacc or bison.)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Dilyan Palauzov">dilyan.palauzov@aegee.org</who>
            <bug_when>2013-09-22 17:06:21 EDT</bug_when>
            <thetext>I this is for 2.5, as it would increase the bytecode version number and there are changes on master (vacation-seconds and include :optional), which are not on the 2.4 branch; except somebody backports these changes to 2.4 .

I can fix the code in sieve/ (including flex and bison) and timsieved/, but I am not aware how the imap part works.  If somebody is ready to deal with the mail-storage system, we can split the work.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="James Cassell">fedoraproject@cyberpear.com</who>
            <bug_when>2013-09-22 21:45:52 EDT</bug_when>
            <thetext>I&apos;ve gotten an updated sieve.y and sieve-lex.l, and I&apos;ve also gotten bc_generate.c and bc_emit.c updated and their dependencies like bytecode.h.  I still need to update script.c and whatever dependencies that might have.  I&apos;m making pretty good progress in getting this done.  I&apos;ve been working from 2.4.17, but I&apos;ll rebase my changes onto master.  (Have there been any 2.5 releases, such as an alpha or beta that I should base my work on?  I couldn&apos;t find any.)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Dilyan Palauzov">dilyan.palauzov@aegee.org</who>
            <bug_when>2013-09-24 15:29:28 EDT</bug_when>
            <thetext>There are no 2.5 releases, base your work on the master-branch.

If you need the feature in 2.4, the procedure is first to implement it on master and then to backport it on 2.4.  However, as BYTECODE_VERSION from sieve/bytecode.h was increased on master to 7, after the vacations-sieve and include :optional extensions were implemented, with your change the BYTECODE_VERSION will increase to 8.  On 2.4 it is still 5.  This number 8 has to be the same on master and 2.4, so that scripts compiled on 2.4 with imap4flags work on master (and vice-versa).  If vacation-seconds and include :optional are not back ported to 2.4, 2.4. will support bytecode versions 1,2,3,4,5 and 8 but not 6, 7.  I am willing to copy the include :optional changed on the cyrus-imap-2.4 branch, however copying the vacation-seconds changes requires modifying lib/imapoptions (to what I remember).  This change has to be verified very strictly, so that backporting does not introduce bugs.

You can also write at cyrus-devel, if there is a consensus to support cyrus-bytecode 5,7 and 8 on 2.4, but not 6.

In anyway basing your work on master is for sure the right thing to do.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="James Cassell">fedoraproject@cyberpear.com</who>
            <bug_when>2013-09-25 22:47:09 EDT</bug_when>
            <thetext>(In reply to comment #4)
&gt; There are no 2.5 releases, base your work on the master-branch.

ok, I&apos;ll do that in the future.

&gt; If you need the feature in 2.4, the procedure is first to implement it on
&gt; master and then to backport it on 2.4.  However, as BYTECODE_VERSION from
&gt; sieve/bytecode.h was increased on master to 7, after the vacations-sieve and
&gt; include :optional extensions were implemented, with your change the
&gt; BYTECODE_VERSION will increase to 8.  On 2.4 it is still 5.  This number 8 has
&gt; to be the same on master and 2.4, so that scripts compiled on 2.4 with
&gt; imap4flags work on master (and vice-versa).  If vacation-seconds and include
&gt; :optional are not back ported to 2.4, 2.4. will support bytecode versions
&gt; 1,2,3,4,5 and 8 but not 6, 7.  I am willing to copy the include :optional
&gt; changed on the cyrus-imap-2.4 branch, however copying the vacation-seconds
&gt; changes requires modifying lib/imapoptions (to what I remember).  This change
&gt; has to be verified very strictly, so that backporting does not introduce bugs.
&gt; 
&gt; You can also write at cyrus-devel, if there is a consensus to support
&gt; cyrus-bytecode 5,7 and 8 on 2.4, but not 6.

I&apos;ll send a message to cyrus-devel probably next week regarding this.

&gt; 
&gt; In anyway basing your work on master is for sure the right thing to do.

Before I send my code for review, I&apos;ll rebase it to master.

Thanks!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="James Cassell">fedoraproject@cyberpear.com</who>
            <bug_when>2014-10-20 04:01:17 EDT</bug_when>
            <thetext>Hello,

After over a year since I began, I have finished implementing the imap4flags extension.  It is ready for 2.5.

Thanks.

V/r,
James Cassell


The following changes since commit d8beae4e3a9490b0435caee22ddae313b8f4b17b:

  [mboxevent] Add an extra, optional parameter vnd.cmu.sessionId to event notifications (2014-10-07 10:03:40 +0200)

are available in the git repository at:

  https://github.com/cyberpear/cyrus-imapd.git for-upstream-imap4flags-2.5

for you to fetch changes up to 854647adae568fa3d5e42238cdf316ff67319e13:

  [sieve] bump bytecode version for imap4flags extension (2014-10-20 03:29:57 -0400)

----------------------------------------------------------------
Guillermo A. Amaral (3):
      Index Extension - Fix backward compatibility
      Date and Index Extension Fixes
      Update docs and bump bytecode version.

James Cassell (46):
      [sieve] fix backward compatibility for sieve index extension
      [sieve] Date and Index Extensions: return false instead of SIEVE_FAIL
      [cunit] cunit.pl: fix init of CU_SuiteInfo type for CUnit 2.1-3
      Merge branch &apos;date-extension&apos;
      Merge branch &apos;CUnit_2.1-3&apos;
      [sieve] add imap4flags reference
      [sieve] add parser support for imap4flags
      [sieve] add imap4flags awareness to sieve interpreter
      [sieve] update bytecode to support imap4flags
      [sieve] imap4flags support for bytecode generator
      [sieve] imap4flags support for bytecode emitter
      [sieve] imap4flags support for bytecode decompiler
      [sieve] bc_emit.c: fix comment
      [sieve] only &apos;fileinto&apos; once per folder (RFC 3028)
      [sieve] fileinto: ensure last flag list value wins (RFC 5232)
      [sieve] keep: ensure last flag list value wins (RFC 5232)
      [sieve] bc_generate,bc_emit: put new parameter first
      [sieve] message.c: add :copy support to keep action
      [sieve] make sieve_{add,remove}flag() functions case insensitive
      [sieve] bc_eval.c: support for :flags parameter on KEEP and FILEINTO
      [sieve] bc_emit.c: add comments for B_FILEINTO
      [sieve] add legacy test cases for :flags argument to fileinto and keep
      [sieve] bc_eval: track current value of internal flags variable
      [sieve] bc_eval.c: support for imap4flags hasflag test
      [sieve] update sieve_fileinto() and sieve_keep() to use :flags parameter
      [sieve] sieve.y: verify :flags parameter is a valid list of flags
      [sieve] sieve.y: free_ftags(): free flags stringlist
      [sieve] sieve.y: support for space-separated flags within a string
      [sieve] tree.c: free flags stringlists in free_tree() and free_test()
      [sieve] sieve.y: &apos;require&apos; imap4flags for hasflag test and :flags arg
      [sieve] Anticipate bytecode changes for VARIABLES extension
      [sieve] bc_dump.c: support imap4flags keep, fileinto, hasflag
      [sieve] sieved: update bytecode decompiler for imap4flags
      [sieve] added varlist.{c,h} in anticipation of the variables extension
      [sieve] remove dependence on actionflags parameter
      [sieve] bc_eval.c: add :count match-type support to hasflag test
      [sieve] move verify_flaglist() to flags.c for reuse elsewhere
      [sieve] sieve.y: an invalid flag should not cause a parsing error
      [sieve] properly handle NULL flag lists
      Revert &quot;[sieve] update sieve_fileinto() and sieve_keep() to use :flags parameter&quot;
      [sieve] complete removal of no-longer-used actionflags parameter
      [sieve] remove superfluous sieve_addflag() and _removeflag() functions
      [sieve] bytecode: don&apos;t emit unused :index parameter for hasflag test
      [sieve] sieve.y: remove bytecode dependence on sieve.y
      [sieve] add legacy test cases for hasflag test
      [sieve] bump bytecode version for imap4flags extension

 Makefile.am                                        |   6 +-
 configure.ac                                       |   4 +
 cunit/cunit.pl                                     |  13 +
 doc/specs.html                                     |   4 +
 lib/imapoptions                                    |   2 +-
 sieve/README                                       |   3 +
 sieve/bc_dump.c                                    | 115 ++++++-
 sieve/bc_emit.c                                    |  72 +++-
 sieve/bc_eval.c                                    | 375 ++++++++++++++++++---
 sieve/bc_generate.c                                |  48 ++-
 sieve/bytecode.h                                   |  26 +-
 sieve/flags.c                                      |  59 ++++
 sieve/flags.h                                      |  16 +
 sieve/interp.c                                     |   2 +
 sieve/message.c                                    |  76 +++--
 sieve/message.h                                    |   4 +-
 sieve/script.c                                     |  68 ++--
 sieve/script.h                                     |   1 +
 sieve/sieve-lex.l                                  |   2 +
 sieve/sieve.y                                      | 196 ++++++++---
 sieve/sieve_interface.h                            |   1 +
 sieve/sieved.c                                     | 146 +++++++-
 .../actionExtensions/serverm/ueamail-imap4flags    |  11 +
 .../actionExtensions/testm/ueatest-imap4flags      |   6 +
 .../actionExtensions/uberExtensionActionScript.key |  12 +
 .../actionExtensions/uberExtensionActionScript.s   |  22 +-
 sieve/tests/testExtension/serverm/uetmail-hasflag  |  11 +
 sieve/tests/testExtension/testm/uetest-hasflag     |   7 +
 .../testExtension/uberExtensionTestScript.key      |  14 +
 .../tests/testExtension/uberExtensionTestScript.s  |  91 ++++-
 sieve/tree.c                                       |   5 +
 sieve/tree.h                                       |   8 +-
 sieve/varlist.c                                    |  79 +++++
 sieve/varlist.h                                    |  32 ++
 34 files changed, 1305 insertions(+), 232 deletions(-)
 create mode 100644 sieve/flags.c
 create mode 100644 sieve/flags.h
 create mode 100644 sieve/tests/actionExtensions/serverm/ueamail-imap4flags
 create mode 100644 sieve/tests/actionExtensions/testm/ueatest-imap4flags
 create mode 100644 sieve/tests/testExtension/serverm/uetmail-hasflag
 create mode 100644 sieve/tests/testExtension/testm/uetest-hasflag
 create mode 100644 sieve/varlist.c
 create mode 100644 sieve/varlist.h</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Jeroen van Meeuwen (Kolab Systems)">vanmeeuwen@kolabsys.com</who>
            <bug_when>2014-10-20 07:31:41 EDT</bug_when>
            <thetext>Rebases on top of and merges back in to master, and builds.

This gets my +1, I&apos;ll have this push back in to mainstream shortly.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Deniss Gaplevsky">slim@inbox.lv</who>
            <bug_when>2014-10-29 10:41:02 EDT</bug_when>
            <thetext>I got segfaults in lmtpd after any sieve runtime error with the patch:

Core was generated by `lmtpd -U 125 -a&apos;.
Program terminated with signal 11, Segmentation fault.
#0  append_fromstage (as=as@entry=0x3dfb16f2070, body=0x3dfb16f2a10, stage=stage@entry=0x46586c0, internaldate=internaldate@entry=0, flags=flags@entry=0x0, nolink=0) at append.c:468
468         for (i = 0; i &lt; flags-&gt;count ; i++) {


any kind of sieve runtime error triggers the core dump:
Include can not load script, Fileinto: Mailbox does not exist and any other.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="James Cassell">fedoraproject@cyberpear.com</who>
            <bug_when>2015-01-07 02:18:46 EDT</bug_when>
            <thetext>I&apos;ve merged this back into cyrus-imapd-2.4.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>