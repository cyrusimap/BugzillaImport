<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3473</bug_id>
          
          <creation_ts>2011-05-26 10:03 EDT</creation_ts>
          <short_desc>crypt() needs _XOPEN_SOURCE</short_desc>
          <delta_ts>2011-05-26 10:03:12 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus SASL</product>
          <component>saslauthd</component>
          <version>2.1.x</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>NEW</bug_status>
          
          
          <bug_file_loc>http://anonscm.debian.org/gitweb/?p=pkg-cyrus-sasl2/cyrus-sasl2.git;a=blob;f=debian/patches/0012_xopen_crypt_prototype.diff</bug_file_loc>
          
          
          <priority>P3</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Ondrej Sury">ondrej@sury.org</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Ondrej Sury">ondrej@sury.org</who>
            <bug_when>2011-05-26 10:03:12 EDT</bug_when>
            <thetext>Author: Dann Frazier &lt;dannf@debian.org&gt;
Description: When _XOPEN_SOURCE is defined, the subsequent #include &lt;unistd.h&gt;
will define a correct function prototype for the crypt function.  This avoids
segfaults on architectures where the size of a pointer is greater than the size
of an integer (ia64 and amd64 are examples).  This may be detected by looking
for build log lines such as the following:
auth_shadow.c:183: warning: implicit declaration of function ‘crypt’
auth_shadow.c:183: warning: cast to pointer from integer of different size</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>