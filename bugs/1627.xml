<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>1627</bug_id>
          
          <creation_ts>2002-11-01 16:11 EDT</creation_ts>
          <short_desc>cyrus.cache should contain more headers</short_desc>
          <delta_ts>2010-10-18 12:42:59 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.2.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</reporter>
          <assigned_to name="Rob Siemborski">rjs3@andrew.cmu.edu</assigned_to>
          
          

      

      

      
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2002-11-01 16:11:18 EDT</bug_when>
            <thetext>cyrus.cache should have fast access to more headers, ideally the set that the
commonly used clients use. this would cut down on I/O load and really make us
perform better.

one possibility would be to cache the full header or full header if under 8K or
some such. downside: pine/batimail perform less well? another possibility would
be to let this be run-time configurable?

maybe References should be cached specially, especially since we&apos;re using them
in THREAD=REFERENCES?

finally, it should be possible to integrate this in a backwards compatible fashion.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2002-11-01 17:14:59 EDT</bug_when>
            <thetext>I agree.  nntpd uses References a lot as well.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2003-09-15 11:56:27 EDT</bug_when>
            <thetext>oooh, ooh, how was this fixed?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-09-15 11:59:53 EDT</bug_when>
            <thetext>This morning&apos;s commits the 2.2 branch.  Basicly, each index record now has a
&apos;cache entry version&apos; which can be used (for example) to determine what headers
are stored in the cache entry.  And we now store basicly everything except X-
Headers, Received, and the unrendered contents of ENVELOPE)

We probably want to be sure we&apos;re pulling References and so on from the cache when  
we can.

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-09-15 12:02:59 EDT</bug_when>
            <thetext>[we are pulling from the cache where appropriate]</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2003-09-15 12:44:19 EDT</bug_when>
            <thetext>last i knew we were always pulling references from the cache. but to pull
references you need to parse the 822-header-fragment, which is more expensive
than having a separate cache section with just the references there.

(another idea: add a cache segment that has hashed versions of the references
header, and use that to do all threading information. ignore collisions.)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-09-15 12:52:29 EDT</bug_when>
            <thetext>at this point this is actually relatively easy to add given the cache versioning
foo.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-09-15 14:55:33 EDT</bug_when>
            <thetext>Created Bug 2182 to handle this new issue.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>