<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2111</bug_id>
          
          <creation_ts>2003-07-15 12:25 EDT</creation_ts>
          <short_desc>IDLE and proxyd</short_desc>
          <delta_ts>2010-10-18 12:07:25 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Murder</component>
          <version>2.2.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>2.2.x</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rob Siemborski">rjs3@andrew.cmu.edu</reporter>
          <assigned_to name="Ken Murchison">ken@oceana.com</assigned_to>
          <cc>Luc.Germain@USherbrooke.ca</cc>
    
    <cc>Marc-Andre.Gaudreau@USherbrooke.ca</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-15 12:25:15 EDT</bug_when>
            <thetext>Luc Germain writes:

On our murder setup (cyrus 2.1.14 on redhat 7.3) it seems that the IDLE
command is not working anymore. If I do a capability on the backend, I see
the IDLE listed, but not on the frontend, even if the frontend is compiled
with --with-idle=idled. 

On the frontend, if I do a idle command, I get the answer &quot;NO idle
disabled&quot;. I look the code of proxyd.c and see that there is a line &quot;#undef
PROXY_IDLE&quot;. Why is it disabled??

-----

As best as I can tell, we never really tested it and since we weren&apos;t using IDLE
locally, we forgot about it. This bug should serve as a reminder to come back to it.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-15 12:45:46 EDT</bug_when>
            <thetext>Quoting Ken&gt;&gt;

Actually, I have tested it (since I wrote it) and it appears to work in 
all modes.

&lt;&lt;

Any idea why larry disabled it then?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2003-07-15 12:49:14 EDT</bug_when>
            <thetext>IIRC, he wasn&apos;t a big fan of IDLE in the first place.  It also might have been
untested at the time, since I didn&apos;t have a Murder setup and Larry didn&apos;t want
to deal with it.

I&apos;d say remove the #if and we&apos;ll fix any buglets.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-15 12:52:01 EDT</bug_when>
            <thetext>Just as long as it otherwise follows the behavior of IDLE (like imapd does),
this is fine by me.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2003-07-15 12:53:38 EDT</bug_when>
            <thetext>It does, it will either pipe the IDLE to the backend if it supports it, or it
will simulate it by polling the backend with NOOP.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-15 12:54:31 EDT</bug_when>
            <thetext>but the proxy won&apos;t advertise IDLE if the imapd configured in the same build
wouldn&apos;t, right?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2003-07-15 12:56:46 EDT</bug_when>
            <thetext>It will always advertises it to the client, because it can do it either way.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-15 12:57:27 EDT</bug_when>
            <thetext>Can we have it not do that?

That seems like a reason for larry to have added the #undef
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2003-07-15 12:59:28 EDT</bug_when>
            <thetext>I suppose.  (I worked hard on the simulation stuff you know  ;)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2003-07-15 13:01:05 EDT</bug_when>
            <thetext>If the client wants to poll anyways (if the server doesn&apos;t advertise IDLE), do
we want it to send a bunch of NOOP to the frontend, which have to be proxied to
the backend anyways?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-15 13:07:13 EDT</bug_when>
            <thetext>My personal worry here is exposing a new codepath on our murder (selfish of me,
isn&apos;t it?)

I would be happy with a --disable-proxy-idle switch to configure, if you want to
keep them separate.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Luc Germain">Luc.Germain@USherbrooke.ca</who>
            <bug_when>2003-07-15 15:10:25 EDT</bug_when>
            <thetext>I activated IDLE in proxyd.c and recompiled and now the frontend does 
advertise IDLE in its capability. Both the frontend and backend enter IDLE 
when the client request it. 

When a event hapen on the backend, the IDLE end immediatly on the backend, BUT 
it takes several seconds on the frontend to end its idle. It seems the 
frontend use only polling instead of a real IDLE. IS it how the idle proxy is 
designed or is there something else to modify?

Here is the telemetry log on the backend and frontend, showing the delay:

Backend:

&lt;1058294596&lt;0007 IDLE
&gt;1058294596&gt;+ idling
&lt;1058294598&lt;DONE
&gt;1058294598&gt;0007 OK Completed
&lt;1058294598&lt;PROXY0 Noop
&gt;1058294598&gt;PROXY0 OK Completed
&lt;1058294599&lt;PROXY1 Noop
&gt;1058294599&gt;PROXY1 OK Completed
&lt;1058294599&lt;PROXY2 Noop
&gt;1058294599&gt;PROXY2 OK Completed
&lt;1058294599&lt;000B IDLE
&gt;1058294599&gt;+ idling
&gt;1058294654&gt;* 1202 EXISTS
* 1 RECENT
&lt;1058294716&lt;DONE
&gt;1058294716&gt;000B OK Completed

Frontend:

000A OK Completed
&lt;1058294599&lt;000B IDLE
&gt;1058294599&gt;+ go ahead
&gt;1058294716&gt;* 1202 EXISTS
&gt;1058294716&gt;* 1 RECENT
&lt;1058294716&lt;DONE
&gt;1058294716&gt;000B OK Completed


Thanks.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2003-07-15 15:21:38 EDT</bug_when>
            <thetext>The backend should not exit IDLE mode until told to by the frontend, which is
told to by the client.

If your backend advertises IDLE, then the frontend should use it, otherwise the
frontend will poll.

I&apos;ll re-test this locally.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-15 15:24:13 EDT</bug_when>
            <thetext>The provided trace doesn&apos;t show IDLE ending immediately on the backend, it
doesn&apos;t end until DONE is issued at 1058294716 which is the same time it was
issued on the frontend.  This appears to be correct.

The fact that the frontend data was delayed somewhat doesn&apos;t strike me as *too*
concerning, though if we&apos;re select()ing on the data stream from the backend
properly, it does seem a bit strange.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2003-07-15 15:35:28 EDT</bug_when>
            <thetext>I believe that the only way that a backend would unilaterally end the IDLE
command on its own would be if somehow the inactivity timer expires before it
does on the frontend.  Other than that, the backend IDLE only ends when the
client (via the frontend) tells it to.

If we&apos;re talking about a delay in unsolicited responses from the backend, these
will be delayed by the &apos;imapidlepoll&apos; interval if idled isn&apos;t used on the backends.

I just retested on my 2.2 install and IDLE seems to be behaving correctly.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Luc Germain">Luc.Germain@USherbrooke.ca</who>
            <bug_when>2003-07-15 16:03:09 EDT</bug_when>
            <thetext>Sorry, I probably didn&apos;t use the proper wording. Indeed, IDLE does not end 
until requested by the client, but what seems stange is the delay between the 
moment the backend advertises a change (&gt;1058294654&gt;* 1202 EXISTS * 1 RECENT) 
and the moment the frontend advertises it to the client (&gt;1058294716&gt;* 1 
RECENT)

Shouldn&apos;t it be almost instantaneous? (here it took 62 seconds for the 
frontend to display the info to the client after it appeared on the backend). 
IDLE *is* activated on the backend but the frontend doesn&apos;t seem to use it.

Thanks.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2003-07-17 09:49:46 EDT</bug_when>
            <thetext>Note to self: reimplemented proxyd IDLE by using the new prot_select() instead
of wait events.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2003-07-18 10:36:32 EDT</bug_when>
            <thetext>Implemented using prot_select() in 2.2 CVS</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-18 12:14:13 EDT</bug_when>
            <thetext>Whats left to do with this other than add a --disable-proxy-idle?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2003-07-18 12:17:08 EDT</bug_when>
            <thetext>Do you really want a --disable-proxy-idle?  You can simply set imapidlepoll to
zero in imapd.conf on the frontend to disable it.  Other than this, I believe
IDLE for 2.2 is done.  I don&apos;t plan on touching 2.1 unless you feel its necessary.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-18 12:19:07 EDT</bug_when>
            <thetext>Ok, using the config option is fine.

We&apos;ll want to document the change in install-upgrade.html though.

(and we probably want to respond with a BAD IDLE Unknown Command or whatever if
its disabled, not a NO)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-08-08 14:31:29 EDT</bug_when>
            <thetext>marking for 2.2.2</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2003-08-11 16:30:18 EDT</bug_when>
            <thetext>committed fix</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2003-11-12 21:19:30 EDT</bug_when>
            <thetext>[excessively late comment] the not-wanting-to-change behavior on the cmu
installation is why proxyd IDLE was disabled.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>