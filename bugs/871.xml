<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>871</bug_id>
          
          <creation_ts>2001-08-11 17:12 EDT</creation_ts>
          <short_desc>more mechs for SASLAUTHd</short_desc>
          <delta_ts>2010-10-25 18:46:28 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus SASL</product>
          <component>SASL</component>
          <version>2.0</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>WONTFIX</resolution>
          
          
          
          
          <priority>P4</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rob Siemborski">rjs3@andrew.cmu.edu</reporter>
          <assigned_to name="Rob Siemborski">rjs3@andrew.cmu.edu</assigned_to>
          
          

      

      

      
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2001-08-11 17:12:17 EDT</bug_when>
            <thetext></thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2001-08-11 17:13:54 EDT</bug_when>
            <thetext>Created an attachment (id=21)
patch for checkpw.c (needs work to convert to saslauthd)
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2001-08-11 17:15:27 EDT</bug_when>
            <thetext>patch I just added is for old-style checkpw.c, so needs work before it will do
for  saslauthd)</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2001-08-11 17:16:25 EDT</bug_when>
            <thetext>also see http://www.matuschek.net/software/sasl-patch</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2001-08-13 15:43:26 EDT</bug_when>
            <thetext>Created an attachment (id=22)
the actual mechanism code
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-02-12 20:54:27 EDT</bug_when>
            <thetext>Marking WONTFIX, since the only one here that isn&apos;t (a) done and (b) is possibly
of any interest is postgres, which I&apos;d rather see as an auxprop plugin anyway.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-02-12 20:54:40 EDT</bug_when>
            <thetext>Marking WONTFIX, since the only one here that isn&apos;t (a) done and (b) is possibly
of any interest is postgres, which I&apos;d rather see as an auxprop plugin anyway.</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>21</attachid>
            <date>2001-08-11 17:13 EDT</date>
            <desc>patch for checkpw.c (needs work to convert to saslauthd)</desc>
            <filename>checkpw.c.diff</filename>
            <type>text/plain</type>
            <size>765</size>
            <attacher>rjs3@andrew.cmu.edu</attacher>
            
              <data encoding="base64">LS0tIGNoZWNrcHcuYwlUaHUgSnVsIDIwIDAzOjI0OjEzIDIwMDAKKysrIC4uLy4uL2N5cnVzLXNh
c2wtMS41LjI0LWlwcGx1cy9saWIvY2hlY2twdy5jCVR1ZSBBdWcgIDcgMTE6NTA6MjMgMjAwMQpA
QCAtNTQ3LDYgKzU0Nyw4IEBACiAKICNlbmRpZiAvKiBIQVZFX1BBTSAqLwogCisjaW5jbHVkZSAi
Y2hlY2twdy1pcHBsdXMuYyIKKwogLyogd2Ugc3RvcmUgdGhlIGZvbGxvd2luZyBzZWNyZXQgdG8g
Y2hlY2sgcGxhaW50ZXh0IHBhc3N3b3JkczoKICAqCiAgKiA8c2FsdD4gXDAgPHNlY3JldD4KQEAg
LTkyMSw2ICs5MjMsMTkgQEAKICNlbmRpZgogI2lmZGVmIEhBVkVfUFdDSEVDSwogICAgIHsgInB3
Y2hlY2siLCAmcHdjaGVja192ZXJpZnlfcGFzc3dvcmQgfSwKKyNlbmRpZgorI2lmZGVmIEhBVkVf
UE9TVEdSRVMKKyAgICB7ICJwb3N0Z3JlcyIsICZwb3N0Z3Jlc192ZXJpZnlfcGFzc3dvcmQgfSwK
KyNlbmRpZgorI2lmZGVmIEhBVkVfQkVSS0VMRVlEQgorICAgIHsgImJlcmtlbGV5ZGIiLCAmYmVy
a2VsZXlkYl92ZXJpZnlfcGFzc3dvcmQgfSwKKyNlbmRpZgorICAgIHsgImFsbHdheXN0cnVlIiwg
JmFsbHdheXN0cnVlX3ZlcmlmeV9wYXNzd29yZCAgfSwKKyNpZmRlZiBIQVZFX0xEQVAKKyAgICB7
ICJsZGFwIiwgJmxkYXBfdmVyaWZ5X3Bhc3N3b3JkIH0sCisjZW5kaWYKKyNpZmRlZiBIQVZFX1NF
UlZFUgorICAgIHsgInNlcnZlciIsICZzZXJ2ZXJfdmVyaWZ5X3Bhc3N3b3JkIH0sCiAjZW5kaWYK
ICAgICB7IE5VTEwsIE5VTEwgfQogfTsK
</data>        

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="0"
              isprivate="0"
          >
            <attachid>22</attachid>
            <date>2001-08-13 15:43 EDT</date>
            <desc>the actual mechanism code</desc>
            <filename>checkpw-ipplus.c</filename>
            <type>text/plain</type>
            <size>22642</size>
            <attacher>rjs3@andrew.cmu.edu</attacher>
            
              <data encoding="base64">LyoqCiAqCiAqIHB3Y2hlY2staXBwbHVzLmMKICoKICogYWRkaXRpb25hbCBwd2NoZWNrIG1vZHVs
ZXMgZm9yIEN5cnVzIFNBU0wKICoKICogQXV0aG9yIGRhbmllbC5tYXR1c2NoZWtAaXAtcGx1cy5u
ZXQKICoKICogJEF1dGhvcjogbWF0dXNjaGQgJAogKiAkUmV2aXNpb246IDEuMSAkCiovCgoKI2lu
Y2x1ZGUgPHN5c2xvZy5oPgojaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiNpbmNsdWRlIDxzeXMvc3Rh
dC5oPgojaW5jbHVkZSA8c3RyaW5ncy5oPgoKI2lmZGVmIEhBVkVfQkVSS0VMRVlEQgojaW5jbHVk
ZSAiZGIuaCIKI2VuZGlmCgojaWZkZWYgSEFWRV9QT1NUR1JFUwojaW5jbHVkZSAibGlicHEtZmUu
aCIKI2VuZGlmCgojaWZkZWYgSEFWRV9MREFQCiNpbmNsdWRlIDxsYmVyLmg+CiNpbmNsdWRlIDxs
ZGFwLmg+CiNlbmRpZgoKI2lmZGVmIEhBVkVfU0VSVkVSCiNpbmNsdWRlIDxzdGRpby5oPgojaW5j
bHVkZSA8c3lzL3NvY2tldC5oPgojaW5jbHVkZSA8bmV0aW5ldC9pbi5oPgojaW5jbHVkZSA8YXJw
YS9pbmV0Lmg+CiNpbmNsdWRlIDxuZXRkYi5oPgojaW5jbHVkZSA8ZXJybm8uaD4KI2VuZGlmCgoK
CiNpZmRlZiBIQVZFX0JFUktFTEVZREIKLyoKICogVGhpcyBmdW5jdGlvbiBjaGVja3MgYSB1c2Vy
bmFtZS9wYXNzd29yZCBwYWlyIGFnYWluc3QgYSBiZXJrZWxleSBkYXRhYmFzZS4KICogVGhlIGRh
dGFiYXNlIG5hbWUgaXMgZGVmaW5lZCBpbiB0aGUgYXBwbGljYXRpb24gY29uZmlndXJhdGlvbiBm
aWxlIAogKiAoL3Vzci9saWIvc2FzbC9BcHBuYW1lLmNvbmYpCiAqLwpzdGF0aWMgaW50IGJlcmtl
bGV5ZGJfdmVyaWZ5X3Bhc3N3b3JkKHNhc2xfY29ubl90ICpjb25uIF9fYXR0cmlidXRlX18oKHVu
dXNlZCkpLAoJCQkJICAgICBjb25zdCBjaGFyICp1c2VyaWQsIAoJCQkJICAgICBjb25zdCBjaGFy
ICpwYXNzd29yZCwKCQkJCSAgICAgY29uc3QgY2hhciAqc2VydmljZSBfX2F0dHJpYnV0ZV9fKCh1
bnVzZWQpKSwKCQkJICAgICAgICAgICAgIGNvbnN0IGNoYXIgKnVzZXJfcmVhbG0gX19hdHRyaWJ1
dGVfXygodW51c2VkKSksIAoJCQkJICAgICBjb25zdCBjaGFyICoqcmVwbHkpCnsKCiAgY29uc3Qg
Y2hhciAgICpkYmZpbGUgPSBOVUxMOwoKICBjb25zdCBjaGFyICAgKmRlYnVnc3dpdGNoID0gTlVM
TDsKICAgIGludCAgICAgICAgICBkZWJ1ZyA9IDA7CgogIGludCAgICAgICAgICByZXRjb2RlPVNB
U0xfT0s7CgogIC8qIFRvIHJlYWQgb3B0aW9ucyBmcm9tIGNvbmZpZ2ZpbGUgKi8KICBzYXNsX2dl
dG9wdF90ICpnZXRvcHQ7CiAgdm9pZCAqY29udGV4dDsKCiAgLyogRm9yIEJlcmtlbGV5REIgYWNj
ZXNzICovCiAgaW50ICAgICAgICAgIGVycm5vOwogIERCICAgICAgICAgICAqZGJwOwogIERCVCAg
ICAgICAgICBrZXksIGRhdGE7CiAgY2hhciAgICAgICAgICpkYnBhc3N3b3JkOwoKCiAgLyogU2lt
cGxlIHRlc3QsIGlmIHVzZXJuYW1lIGFuZCBwYXNzd29yZCBhcmUgZ2l2ZW4gKi8KICBpZiAoIXVz
ZXJpZCB8fCAhcGFzc3dvcmQpIHsKICAgIHJldHVybiBTQVNMX0JBRFBBUkFNOwogIH0KICBpZiAo
cmVwbHkpIHsgKnJlcGx5ID0gTlVMTDsgfQogIAoKICAvKiBMb29rIGZvciBjb25maWd1cmF0aW9u
IG9wdGlvbnMgKi8KICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KCiAgLyog
VHVybiBkZWJ1Z2dpbmcgb24gPyAqLwogIGlmIChfc2FzbF9nZXRjYWxsYmFjayhjb25uLCBTQVNM
X0NCX0dFVE9QVCwgJmdldG9wdCwgJmNvbnRleHQpIAogICAgICA9PSBTQVNMX09LKSB7CiAgICBn
ZXRvcHQoY29udGV4dCwgTlVMTCwgImRlYnVnIiwgJmRlYnVnc3dpdGNoLCBOVUxMKTsKICB9CiAg
aWYgKCBkZWJ1Z3N3aXRjaCAhPSBOVUxMICkgewogICAgaWYgKCAhIHN0cmNtcChkZWJ1Z3N3aXRj
aCwib24iKSApIHsgZGVidWcgPSAxOyB9OwogIH0KCiAgaWYgKCBkZWJ1ZyApIHsKICAgIHN5c2xv
ZyhMT0dfREVCVUcsIkJlcmtlbGV5REIgbW9kdWxlIHJ1bm5pbmciKTsKICB9CgoKICAvKiBPdGhl
ciBwYXJhbWV0ZXJzICovCiAgaWYgKF9zYXNsX2dldGNhbGxiYWNrKGNvbm4sIFNBU0xfQ0JfR0VU
T1BULCAmZ2V0b3B0LCAmY29udGV4dCkgCiAgICAgID09IFNBU0xfT0spIHsKICAgIGdldG9wdChj
b250ZXh0LCBOVUxMLCAiYmVya2VsZXlfZGF0YWJhc2UiLCAmZGJmaWxlLCBOVUxMKTsKICB9CiAg
aWYgKCBkYmZpbGUgPT0gTlVMTCApIHsKICAgIHN5c2xvZyhMT0dfRVJSLCJiZXJrZWxleV9kYXRh
YmFzZSBvcHRpb24gbm90IHNldCAtIGV4aXRpbmcgd2l0aCBTQVNMX0ZBSUwiKTsKICAgIHJldHVy
biBTQVNMX0ZBSUw7CiAgfQoKICAvKiBPcGVuIHRoZSBkYXRhYmFzZSBmaWxlIGZvciByZWFkIGFj
Y2VzcyAqLwogIGlmICgoZXJybm8gPSBkYl9vcGVuKGRiZmlsZSwKCQkgICAgICAgREJfQlRSRUUs
IERCX1JET05MWSwgMDY2NCwgTlVMTCwgTlVMTCwgJmRicCkpICE9IDApIHsKICAgIHN5c2xvZyhM
T0dfRVJSLCJkYjogJXM6ICVzXG4iLCBkYmZpbGUsIHN0cmVycm9yKGVycm5vKSk7CiAgICByZXR1
cm4gU0FTTF9GQUlMOwogIH0KCiAgaWYgKCBkZWJ1ZyApIHsKICAgIHN5c2xvZyhMT0dfREVCVUcs
IkJlcmtlbGV5REIgZGF0YWJhc2UgJXMgb3BlbmVkIixkYmZpbGUpOwogIH0KCiAgLyogU2V0IHRo
ZSByaWdodCB2YWx1ZXMgdG8gdGhlIGtleSBhbmQgZGF0YSBmaWVsZHMgKi8KICBtZW1zZXQoJmtl
eSwgMCwgc2l6ZW9mKGtleSkpOwogIG1lbXNldCgmZGF0YSwgMCwgc2l6ZW9mKGRhdGEpKTsKIAog
IGtleS5kYXRhID0gdXNlcmlkOwogIGtleS5zaXplID0gc3RybGVuKHVzZXJpZCk7CiAgZGF0YS5k
YXRhID0gIiI7CiAgZGF0YS5zaXplID0gMDsKICAKICAvKiBMb29rIGZvciB0aGUgcmVjb3JkIGlu
IHRoZSBkYiBmaWxlICovCiAgZXJybm8gPSBkYnAtPmdldChkYnAsIE5VTEwsICZrZXksICZkYXRh
LCAwKTsKCiAgc3dpdGNoIChlcnJubykgewogIGNhc2UgMDoKICAgIGlmICggZGVidWcgKSB7CiAg
ICAgIHN5c2xvZyhMT0dfREVCVUcsImRiOiAlczoga2V5IHJldHJpZXZlZDogZGF0YSB3YXMgJXNc
biIsCgkgICAgIChjaGFyICopa2V5LmRhdGEsIChjaGFyICopZGF0YS5kYXRhKTsKICAgIH0KCiAg
ICAvKiBUZXN0LCBpZiBwYXNzd29yZCBpcyBjb3JyZWN0ICovCiAgICBkYnBhc3N3b3JkPWRhdGEu
ZGF0YTsKICAgIAogICAgaWYgKCBkZWJ1ZyApIHsKICAgICAgc3lzbG9nKExPR19ERUJVRywiQ3J5
cHRlZCBwYXNzd29yZCBmcm9tIGRhdGFiYXNlIDogJXNcbiIsZGJwYXNzd29yZCk7CiAgICAgIHN5
c2xvZyhMT0dfREVCVUcsImNyeXB0KHBhc3N3b3JkLCBkYnBhc3N3b3JkKSAgICA6ICVzXG4iLGNy
eXB0KHBhc3N3b3JkLCBkYnBhc3N3b3JkKSk7CiAgICB9CiAgICAgIAogICAgaWYgKHN0cmNtcChk
YnBhc3N3b3JkLCBjcnlwdChwYXNzd29yZCwgZGJwYXNzd29yZCkpICE9IDApIHsKICAgICAgcmV0
Y29kZSA9IFNBU0xfQkFEQVVUSDsKICAgICAgc3lzbG9nKExPR19ERUJVRywiV3JvbmcgcGFzc3dv
cmQgZm9yIHVzZXIgJXMiLHVzZXJpZCk7CiAgICB9CiAgICAKICAgIGJyZWFrOwoKICBjYXNlIERC
X05PVEZPVU5EOgogICAgaWYgKCBkZWJ1ZyApIHsKICAgICAgc3lzbG9nKExPR19ERUJVRywiZGI6
ICVzOiBrZXkgbm90IGZvdW5kLlxuIiwgKGNoYXIgKilrZXkuZGF0YSk7CiAgICB9CiAgICByZXRj
b2RlPVNBU0xfTk9VU0VSOwogICAgYnJlYWs7CgogIGRlZmF1bHQ6CiAgICBzeXNsb2coTE9HX0VS
UiwiZGI6IGdldDogJXNcbiIsIHN0cmVycm9yKGVycm5vKSk7CiAgICByZXRjb2RlPVNBU0xfRkFJ
TDsKICB9CgogIGRicC0+Y2xvc2UoZGJwLCAwKTsKICAKICByZXR1cm4gcmV0Y29kZTsKfQojZW5k
aWYKCgoKI2lmZGVmIEhBVkVfUE9TVEdSRVMKLyoKICogVGhpcyBmdW5jdGlvbiBjaGVja3MgYSB1
c2VybmFtZS9wYXNzd29yZCBwYWlyIGFnYWluc3QgYSBwb3N0Z3JlcyBkYXRhYmFzZS4KICogQWxs
IHBhcmFtZXRlcnMgKGRhdGFiYXNlLCBob3N0LCBzcWwgc3RhdGVtZW50IGV0Yy4pIHdpbGwgYmUg
ZGVmaW5lZCBpbiB0aGUgCiAqIGFwcGxpY2F0aW9uIGNvbmZpZ3VyYXRpb24gZmlsZSAoL3Vzci9s
aWIvc2FzbC9BcHBuYW1lLmNvbmYpCiAqLwpzdGF0aWMgaW50IHBvc3RncmVzX3ZlcmlmeV9wYXNz
d29yZChzYXNsX2Nvbm5fdCAqY29ubiBfX2F0dHJpYnV0ZV9fKCh1bnVzZWQpKSwKCQkJICAgICAg
Y29uc3QgY2hhciAqdXNlcmlkLCAKCQkJICAgICAgY29uc3QgY2hhciAqcGFzc3dvcmQsCgkJCSAg
ICAgIGNvbnN0IGNoYXIgKnNlcnZpY2UsCgkJCSAgICAgIGNvbnN0IGNoYXIgKnVzZXJfcmVhbG0g
X19hdHRyaWJ1dGVfXygodW51c2VkKSksIAoJCQkgICAgICBjb25zdCBjaGFyICoqcmVwbHkpCnsK
ICBjaGFyICAgICAgICAgKmRicGFzc3dvcmQ7CiAgCiAgY29uc3QgY2hhciAgICpwZ2hvc3QgPSBO
VUxMOwogIGNvbnN0IGNoYXIgICAqcGdiYWNrdXBob3N0ID0gTlVMTDsKICBjb25zdCBjaGFyICAg
KnBncG9ydCA9IE5VTEw7CiAgY29uc3QgY2hhciAgICpwZ29wdGlvbnMgPSBOVUxMOwogIGNvbnN0
IGNoYXIgICAqZGJOYW1lID0gTlVMTDsKICBjb25zdCBjaGFyICAgKnNxbFN0YXRlbWVudCA9IE5V
TEw7CiAgY29uc3QgY2hhciAgICpsb2NrRmlsZSA9IE5VTEw7CiAgY29uc3QgY2hhciAgICpiZXJr
ZWxleWJhY2t1cCA9IE5VTEw7CiAgY29uc3QgY2hhciAgICpkZWJ1Z3N3aXRjaCA9IE5VTEw7CiAg
aW50ICAgICAgICAgIGRlYnVnID0gMDsKICBpbnQgICAgICAgICAgYmVya2VsZXlzd2l0Y2ggPSAw
OwogIGludCAgICAgICAgICBiZXJrZWxleWNhY2hlID0gMDsKICBjaGFyICAgICAgICAgc3FsWzEw
MjRdOwogIGludCAgICAgICAgICByZXRjb2RlID0gU0FTTF9PSzsKICBpbnQgICAgICAgICAgY291
bnQ7CiAgUEdjb25uICAgICAgICpwZ2Nvbm47CiAgUEdyZXN1bHQgICAgICpyZXM7CiAgCgogIC8q
IFRvIHJlYWQgb3B0aW9ucyBmcm9tIGNvbmZpZ2ZpbGUgKi8KICBzYXNsX2dldG9wdF90ICpnZXRv
cHQ7CiAgdm9pZCAqY29udGV4dDsKCgoKICAvKiBTaW1wbGUgdGVzdCwgaWYgdXNlcm5hbWUgYW5k
IHBhc3N3b3JkIGFyZSBnaXZlbiAqLwogIGlmICghdXNlcmlkIHx8ICFwYXNzd29yZCkgewogICAg
cmV0dXJuIFNBU0xfQkFEUEFSQU07CiAgfQogIGlmIChyZXBseSkgeyAqcmVwbHkgPSBOVUxMOyB9
CiAgCgogIC8qIExvb2sgZm9yIGNvbmZpZ3VyYXRpb24gb3B0aW9ucyAqLwogIC8qKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqLwoKICAvKiBUdXJuIGRlYnVnZ2luZyBvbiA/ICovCiAg
aWYgKF9zYXNsX2dldGNhbGxiYWNrKGNvbm4sIFNBU0xfQ0JfR0VUT1BULCAmZ2V0b3B0LCAmY29u
dGV4dCkgCiAgICAgID09IFNBU0xfT0spIHsKICAgIGdldG9wdChjb250ZXh0LCBOVUxMLCAiZGVi
dWciLCAmZGVidWdzd2l0Y2gsIE5VTEwpOwogIH0KCiAgaWYgKCBkZWJ1Z3N3aXRjaCAhPSBOVUxM
ICkgewogICAgaWYgKCAhIHN0cmNtcChkZWJ1Z3N3aXRjaCwib24iKSApIHsgZGVidWcgPSAxOyB9
OwogIH0KCiAgaWYgKCBkZWJ1ZyApIHsKICAgIHN5c2xvZyhMT0dfREVCVUcsIlBvc3RncmVzIG1v
ZHVsZSBydW5uaW5nIik7CiAgfQoKCgogIC8qIEFsbCBvdGhlciBwYXJhbWV0ZXJzICovCiAgaWYg
KF9zYXNsX2dldGNhbGxiYWNrKGNvbm4sIFNBU0xfQ0JfR0VUT1BULCAmZ2V0b3B0LCAmY29udGV4
dCkgCiAgICAgID09IFNBU0xfT0spIHsKICAgIGdldG9wdChjb250ZXh0LCBOVUxMLCAicG9zdGdy
ZXNfZGF0YWJhc2UiLCAmZGJOYW1lLCBOVUxMKTsKICAgIGdldG9wdChjb250ZXh0LCBOVUxMLCAi
cG9zdGdyZXNfc3Fsc3RhdGVtZW50IiwgJnNxbFN0YXRlbWVudCwgTlVMTCk7CiAgICBnZXRvcHQo
Y29udGV4dCwgTlVMTCwgInBvc3RncmVzX2hvc3QiLCAmcGdob3N0LCBOVUxMKTsKICAgIGdldG9w
dChjb250ZXh0LCBOVUxMLCAicG9zdGdyZXNfYmFja3VwaG9zdCIsICZwZ2JhY2t1cGhvc3QsIE5V
TEwpOwogICAgZ2V0b3B0KGNvbnRleHQsIE5VTEwsICJwb3N0Z3Jlc19wb3J0IiwgJnBncG9ydCwg
TlVMTCk7CiAgICBnZXRvcHQoY29udGV4dCwgTlVMTCwgInBvc3RncmVzX29wdGlvbnMiLCAmcGdv
cHRpb25zLCBOVUxMKTsKICAgIGdldG9wdChjb250ZXh0LCBOVUxMLCAicG9zdGdyZXNfbG9ja2Zp
bGUiLCAmbG9ja0ZpbGUsIE5VTEwpOwogICAgZ2V0b3B0KGNvbnRleHQsIE5VTEwsICJwb3N0Z3Jl
c19iZXJrZWxleWJhY2t1cCIsICZiZXJrZWxleWJhY2t1cCwgTlVMTCk7CiAgfQoKICBpZiAoIGRi
TmFtZSA9PSBOVUxMICkgewogICAgc3lzbG9nKExPR19FUlIsInBvc3RncmVzX2RhdGFiYXNlIG9w
dGlvbiBub3QgZm91bmQgLSBhYm9ydGluZyIpOwogICAgcmV0dXJuIFNBU0xfRkFJTDsKICB9Cgog
IGlmICggc3FsU3RhdGVtZW50ID09IE5VTEwgKSB7CiAgICBzeXNsb2coTE9HX0VSUiwicG9zdGdy
ZXNfc3Fsc3RhdGVtZW50IG9wdGlvbiBub3QgZm91bmQgLSBhYm9ydGluZyIpOwogICAgcmV0dXJu
IFNBU0xfRkFJTDsKICB9CgogIGlmICggKGJlcmtlbGV5YmFja3VwICE9IE5VTEwpICkgewogICAg
aWYgKCEgKHN0cmNtcChiZXJrZWxleWJhY2t1cCwib24iKSApKSB7CiAgICAgIGlmICggZGVidWcg
KSB7CglzeXNsb2coTE9HX0RFQlVHLCJCZXJrZWxleURCIGJhY2t1cCBvcHRpb24gaXMgb24iLGxv
Y2tGaWxlKTsKICAgICAgfQogICAgCiAgICAgIGJlcmtlbGV5c3dpdGNoPTE7CiAgICB9IGVsc2UK
CiAgICBpZiAoISAoc3RyY21wKGJlcmtlbGV5YmFja3VwLCJjYWNoZSIpKSkgewoKICAgICAgaWYg
KCBkZWJ1ZyApIHsKCXN5c2xvZyhMT0dfREVCVUcsIkJlcmtlbGV5REIgY2FjaGluZyBvcHRpb24g
aXMgb24iLGxvY2tGaWxlKTsKICAgICAgfQoKICAgICAgYmVya2VsZXljYWNoZT0xOwogICAgCiAg
ICB9IGVsc2UKCiAgICBpZiAoc3RyY21wKGJlcmtlbGV5YmFja3VwLCJvZmYiKSkgewogICAgICBz
eXNsb2coTE9HX0VSUiwicG9zdGdyZXNfYmVya2VsZXliYWNrdXAgb3B0aW9uIGhhcyB0byBiZSAn
b24nLCdvZmYnIG9yICdjYWNoZSciKTsKICAgIH0KCiAgfSAgCiAgCiAgCiAgaWYgKCBkZWJ1ZyAp
IHsKICAgIHN5c2xvZyhMT0dfREVCVUcsIkNvbmZpZ3VyYXRpb24gcGFyYW1ldGVycyIpOwogICAg
c3lzbG9nKExPR19ERUJVRywiRGF0YWJhc2UgJXMiLGRiTmFtZSk7CiAgICBzeXNsb2coTE9HX0RF
QlVHLCJTUUwgU3RhdGVtZW50ICVzIixzcWxTdGF0ZW1lbnQpOwogIH0KICAKICAvKiBMb29rIGZv
ciB0aGUgZXhpc3RlbmNlIG9mIHRoZSBsb2NrIGZpbGUgKi8KICBpZiAoIGxvY2tGaWxlICE9IE5V
TEwgKSB7CiAgICBzdHJ1Y3Qgc3RhdCBidWY7CgogICAgaWYgKCBkZWJ1ZyApIHsKICAgICAgc3lz
bG9nKExPR19ERUJVRywiVGVzdGluZyBmb3IgZXhpc3RlbmNlIG9mIHRoZSBsb2NrIGZpbGUgJXMi
LGxvY2tGaWxlKTsKICAgIH0KICAgIAogICAgaWYgKCAhIHN0YXQobG9ja0ZpbGUsJmJ1ZikpIHsK
ICAgICAgc3lzbG9nKExPR19ERUJVRywiTG9jayBmaWxlICVzIGV4aXN0cyIsbG9ja0ZpbGUpOwog
ICAgICAKICAgICAgaWYgKCBiZXJrZWxleXN3aXRjaCB8fCBiZXJrZWxleWNhY2hlICkgewojaWZk
ZWYgSEFWRV9CRVJLRUxFWURCCQoJcmV0dXJuIGJlcmtlbGV5ZGJfdmVyaWZ5X3Bhc3N3b3JkKGNv
bm4sdXNlcmlkLCBwYXNzd29yZCxzZXJ2aWNlLE5VTEwscmVwbHkpOwojZWxzZQoJc3lzbG9nKExP
R19ERUJVRywiQmVya2VsZXkgREIgYmFja3VwIG9yIGNhY2hlIHJlcXVlc3RlZCwgYnV0IG5vdCBj
b21waWxlZCBpbiIpOwoJcmV0dXJuIFNBU0xfRkFJTDsKI2VuZGlmCiAgICAgIH0KCiAgICB9CiAg
ICAKICAgIGlmICggZGVidWcgKSB7CiAgICAgIHN5c2xvZyhMT0dfREVCVUcsIkxvY2sgZmlsZSBu
b3QgZm91bmQgLSBjb250aW51aW5nIik7CiAgICB9CgogIH0KCiAgLyogaWYgY2FjaGluZyBzaG91
bGQgYmUgdXNlZCwgdHJ5IHRoZSBiZXJrZWxleURCIGZpcnN0ICovCgogIGlmICggYmVya2VsZXlj
YWNoZSApIHsKI2lmZGVmIEhBVkVfQkVSS0VMRVlEQgkKICAgIGludCBjb2RlID0gYmVya2VsZXlk
Yl92ZXJpZnlfcGFzc3dvcmQoY29ubix1c2VyaWQsIHBhc3N3b3JkLHNlcnZpY2UsTlVMTCxyZXBs
eSk7CiAgICBpZiAoY29kZSA9PSBTQVNMX09LKSB7CiAgICAgIHJldHVybiBTQVNMX09LOwogICAg
fQojZWxzZQogICAgc3lzbG9nKExPR19ERUJVRywiQmVya2VsZXkgREIgYmFja3VwIHJlcXVlc3Rl
ZCwgYnV0IG5vdCBjb21waWxlZCBpbiwgd2lsbCBiZSBpZ25vcmVkIik7CiNlbmRpZgoKICB9CiAg
CgogIC8qIG1ha2UgYSBjb25uZWN0aW9uIHRvIHRoZSBkYXRhYmFzZSAqLwogIHBnY29ubiA9IFBR
c2V0ZGIocGdob3N0LCBwZ3BvcnQsIHBnb3B0aW9ucywgTlVMTCwgZGJOYW1lKTsKICAKICAvKiBj
aGVjayB0byBzZWUgdGhhdCB0aGUgYmFja2VuZCBjb25uZWN0aW9uIHdhcyBzdWNjZXNzZnVsbHkg
bWFkZSAqLwogIGlmIChQUXN0YXR1cyhwZ2Nvbm4pID09IENPTk5FQ1RJT05fQkFEKSB7CiAgICAK
ICAgIHN5c2xvZyhMT0dfRVJSLCJDb25uZWN0aW9uIHRvIGRhdGFiYXNlICVzIGZhaWxlZCwgbG9v
a2luZyBmb3IgYmFja3VwIixkYk5hbWUpOwogICAgCiAgICAvKiBUcnkgdG8gY29ubmVjdCB0byB0
aGUgYmFja3VwIGRhdGFiYXNlICovCiAgICBpZiAoIHBnYmFja3VwaG9zdCAhPSBOVUxMICkgewog
ICAgICBwZ2Nvbm4gPSBQUXNldGRiKHBnYmFja3VwaG9zdCwgcGdwb3J0LCBwZ29wdGlvbnMsIE5V
TEwsIGRiTmFtZSk7CiAgICAgIAogICAgICBpZiAoUFFzdGF0dXMocGdjb25uKSA9PSBDT05ORUNU
SU9OX0JBRCkgewoJCglyZXRjb2RlPVNBU0xfRkFJTDsKCXN5c2xvZyhMT0dfRVJSLCJDb25uZWN0
aW9uIHRvIGRhdGFiYXNlICVzIG9uIGhvc3QgJXMgZmFpbGVkIixkYk5hbWUscGdiYWNrdXBob3N0
KTsKICAgICAgfQogICAgfSBlbHNlIHsKICAgICAgaWYgKCBkZWJ1ZyApIHsKCXN5c2xvZyhMT0df
RVJSLCJObyBiYWNrdXAgaG9zdCBkZWZpbmVkICEiKTsKICAgICAgfQogICAgICByZXRjb2RlPVNB
U0xfRkFJTDsKICAgIH0KICAgIAogICAgaWYgKCByZXRjb2RlICE9IFNBU0xfT0sgKSB7CgogICAg
ICBpZiAoIGRlYnVnICkgewoJc3lzbG9nKExPR19ERUJVRywiQ291bGQgbm90IGNvbm5lY3QgdG8g
YSBkYXRhYmFzZSBzZXJ2ZXIgISIpOwogICAgICB9CgogICAgICBpZiAoIGJlcmtlbGV5c3dpdGNo
ICkgewojaWZkZWYgSEFWRV9CRVJLRUxFWURCCQoJcmV0dXJuIGJlcmtlbGV5ZGJfdmVyaWZ5X3Bh
c3N3b3JkKGNvbm4sdXNlcmlkLCBwYXNzd29yZCxzZXJ2aWNlLE5VTEwscmVwbHkpOwojZWxzZQoJ
c3lzbG9nKExPR19ERUJVRywiQmVya2VsZXkgREIgYmFja3VwIHJlcXVlc3RlZCwgYnV0IG5vdCBj
b21waWxlZCBpbiIpOwoJcmV0dXJuIFNBU0xfRkFJTDsKI2VuZGlmCiAgICAgIH0gZWxzZSB7Cgly
ZXR1cm4gU0FTTF9GQUlMOwogICAgICB9CgogICAgfQogICAgCiAgfQoKCgogIC8qIE5vdywgd2Ug
YXJlIGNvbm5lY3RlZCB0byB0aGUgZGF0YWJhc2UgKi8KICAgICAgCiAgaWYgKCBkZWJ1ZyApIHsK
ICAgIHN5c2xvZyhMT0dfREVCVUcsIkNvbm5lY3RlZCB0byBkYXRhYmFzZSAlcyIsZGJOYW1lKTsK
ICB9CgogIC8qIHN0YXJ0IGEgdHJhbnNhY3Rpb24gYmxvY2ssIHNlbGVjdCBwYXNzd29yZCAqLwog
IHNwcmludGYoc3FsLHNxbFN0YXRlbWVudCx1c2VyaWQpOwogIAogIGlmICggZGVidWcgKSB7CiAg
ICBzeXNsb2coTE9HX0RFQlVHLCJTUUwgcXVlcnk6ICVzXG4iLHNxbCk7CiAgfQogIAogIHJlcyA9
IFBRZXhlYyhwZ2Nvbm4sIHNxbCk7CiAgaWYgKCFyZXMgfHwgUFFyZXN1bHRTdGF0dXMocmVzKSAh
PSBQR1JFU19UVVBMRVNfT0spIHsKICAgIHJldGNvZGU9U0FTTF9GQUlMOwogICAgc3lzbG9nKExP
R19FUlIsIlF1ZXJ5IGZhaWxlZDogJXNcbiIsc3FsKTsKICAgIHN5c2xvZyhMT0dfRVJSLCJSZXR1
cm5jb2RlOiVpXG4iLFBRcmVzdWx0U3RhdHVzKHJlcykpOwogIH0gZWxzZSB7CiAgICAKICAgIGNv
dW50PVBRbnR1cGxlcyhyZXMpOwogICAgCiAgICBpZiAoIGRlYnVnICkgewogICAgICBzeXNsb2co
TE9HX0RFQlVHLCJTUUwgcXVlcnkgcmV0dXJuZWQgJWkgcmVjb3Jkcy5cbiIsY291bnQpOwogICAg
fQogICAgCiAgICAvKiBubyByZWNvcmRzIGZvdW5kICAgICAgICAgICA9PiB1c2VyIHVua25vd24K
ICAgICAgIG1vcmUgdGhlbiBvbmUgcmVjb3JkIGZvdW5kID0+IGludGVybmFsIHByb2JsZW1zIChz
aG91bGQgbm90IGJlIHBvc3NpYmxlKQogICAgICAgb25lIHJlY29yZCBmb3VuZCAgICAgICAgICAg
PT4gY2hlY2sgcGFzc3dvcmQgKi8KICAgIAogICAgaWYgKCBjb3VudCA9PSAwICkgewogICAgICBy
ZXRjb2RlPVNBU0xfTk9VU0VSOwogICAgfSBlbHNlIGlmIChjb3VudCA+IDEgKSB7CiAgICAgIHJl
dGNvZGU9U0FTTF9GQUlMOwogICAgICBzeXNsb2coTE9HX0VSUiwiTW9yZSB0aGVuIG9uZSByZWNv
cmRzIGZvdW5kIGZvciB1c2VyICVzIix1c2VyaWQpOwogICAgfSBlbHNlIHsKICAgICAgZGJwYXNz
d29yZD1QUWdldHZhbHVlKHJlcywgMCwgMCApOwogICAgICAKICAgICAgaWYgKCBkZWJ1ZyApIHsK
CXN5c2xvZyhMT0dfREVCVUcsIkNyeXB0ZWQgcGFzc3dvcmQgZnJvbSBkYXRhYmFzZSA6ICVzXG4i
LGRicGFzc3dvcmQpOwoJc3lzbG9nKExPR19ERUJVRywiY3J5cHQocGFzc3dvcmQsIGRicGFzc3dv
cmQpICAgIDogJXNcbiIsY3J5cHQocGFzc3dvcmQsIGRicGFzc3dvcmQpKTsKICAgICAgfQogICAg
ICAKICAgICAgaWYgKHN0cmNtcChkYnBhc3N3b3JkLCBjcnlwdChwYXNzd29yZCwgZGJwYXNzd29y
ZCkpICE9IDApIHsKCXN5c2xvZyhMT0dfREVCVUcsIldyb25nIHBhc3N3b3JkIGZvciB1c2VyICVz
Iix1c2VyaWQpOwoJcmV0Y29kZSA9IFNBU0xfQkFEQVVUSDsKICAgICAgfQogICAgICBlbHNlIHsK
CXJldGNvZGUgPSBTQVNMX09LOwogICAgICB9IAogICAgfQogIH0KICAKICBpZiAoIGRlYnVnICkg
ewogICAgc3lzbG9nKExPR19ERUJVRywiQ2xlYXJpbmcgcmVzdWx0Iik7CiAgfQogIAogIFBRY2xl
YXIocmVzKTsKICAKICBpZiAoIGRlYnVnICkgewogICAgc3lzbG9nKExPR19ERUJVRywiRG9uZSIp
OwogICAgc3lzbG9nKExPR19ERUJVRywiQ2xvc2luZyBkYXRhYmFzZSBjb25uZWN0aW9uIik7CiAg
fQogIAogIC8qIGNsb3NlIHRoZSBjb25uZWN0aW9uIHRvIHRoZSBkYXRhYmFzZSBhbmQgY2xlYW51
cCAqLwogIFBRZmluaXNoKHBnY29ubik7CiAgCiAgaWYgKCBkZWJ1ZyApIHsKICAgIHN5c2xvZyhM
T0dfREVCVUcsIkRvbmUiKTsKICAgIHN5c2xvZyhMT0dfREVCVUcsIlJldHVybiBjb2RlIDogJWlc
biIscmV0Y29kZSk7CiAgfTsKCiAgcmV0dXJuIHJldGNvZGU7ICAgIAp9OwojZW5kaWYKCgovKgog
KiBUaGlzIGZ1bmN0aW9uIGNoZWNrcyBhIHVzZXJuYW1lL3Bhc3N3b3JkIHBhaXIgYWdhaW5zdCBu
b3RoaW5nCiAqIEl0IHdpbGwgYWx3YXlzIHJldHVybiAidHJ1ZSIgLSB0aGlzIG1vZHVsZSBpcyBi
dWlsZCBmb3IgdGVzdGluZyBwdXJwb3NlcwogKiBvbmx5LgogKi8Kc3RhdGljIGludCBhbGx3YXlz
dHJ1ZV92ZXJpZnlfcGFzc3dvcmQoc2FzbF9jb25uX3QgKmNvbm4gX19hdHRyaWJ1dGVfXygodW51
c2VkKSksCgkJCSAgICAgIGNvbnN0IGNoYXIgKnVzZXJpZCwgCgkJCSAgICAgIGNvbnN0IGNoYXIg
KnBhc3N3b3JkIF9fYXR0cmlidXRlX18oKHVudXNlZCkpLAoJCQkgICAgICBjb25zdCBjaGFyICpz
ZXJ2aWNlIF9fYXR0cmlidXRlX18oKHVudXNlZCkpLAoJCQkgICAgICBjb25zdCBjaGFyICp1c2Vy
X3JlYWxtIF9fYXR0cmlidXRlX18oKHVudXNlZCkpLCAKCQkJICAgICAgY29uc3QgY2hhciAqKnJl
cGx5IF9fYXR0cmlidXRlX18oKHVudXNlZCkpKQp7CiAgaW50IGRlYnVnID0gMDsKICBjb25zdCBj
aGFyICAgKmRlYnVnc3dpdGNoID0gTlVMTDsKICAKICAvKiBMb29rIGZvciBjb25maWd1cmF0aW9u
IG9wdGlvbnMgKi8KICAvKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KCiAgLyog
VG8gcmVhZCBvcHRpb25zIGZyb20gY29uZmlnZmlsZSAqLwogIHNhc2xfZ2V0b3B0X3QgKmdldG9w
dDsKICB2b2lkICpjb250ZXh0OwoKCiAgLyogVHVybiBkZWJ1Z2dpbmcgb24gPyAqLwogIGlmIChf
c2FzbF9nZXRjYWxsYmFjayhjb25uLCBTQVNMX0NCX0dFVE9QVCwgJmdldG9wdCwgJmNvbnRleHQp
IAogICAgICA9PSBTQVNMX09LKSB7CiAgICBnZXRvcHQoY29udGV4dCwgTlVMTCwgImRlYnVnIiwg
JmRlYnVnc3dpdGNoLCBOVUxMKTsKICB9CiAgaWYgKCBkZWJ1Z3N3aXRjaCAhPSBOVUxMICkgewog
ICAgaWYgKCAhIHN0cmNtcChkZWJ1Z3N3aXRjaCwib24iKSApIHsgZGVidWcgPSAxOyB9OwogIH0K
CiAgaWYgKCBkZWJ1ZyApIHsKICAgIHN5c2xvZyhMT0dfREVCVUcsIkFsbHdheXNUcnVlOiB1c2Vy
PSVzXG4iLHVzZXJpZCk7CiAgfTsKICByZXR1cm4gU0FTTF9PSzsKfQoKI2lmZGVmIEhBVkVfTERB
UAoKLyoKICogVGhpcyBmdW5jdGlvbiBjaGVja3MgYSB1c2VybmFtZS9wYXNzd29yZCBwYWlyIGFn
YWluc3QgYW4gTERBUCBzZXJ2ZXIKICogSXQgdHJpZXMgdG8gYmluZCB0byB0aGUgc2VydmVyIHVz
aW5nIHRoZSBnaXZlbiB1c2VybmFtZS9wYXNzd29yZCAKICovCnN0YXRpYyBpbnQgbGRhcF92ZXJp
ZnlfcGFzc3dvcmQoc2FzbF9jb25uX3QgKmNvbm4gX19hdHRyaWJ1dGVfXygodW51c2VkKSksCgkJ
ICAJICAgICAgICBjb25zdCBjaGFyICp1c2VyaWQsIAoJCQkgICAgICAgIGNvbnN0IGNoYXIgKnBh
c3N3b3JkLAoJCQkgICAgICAgIGNvbnN0IGNoYXIgKnNlcnZpY2UgX19hdHRyaWJ1dGVfXygodW51
c2VkKSksCgkJCSAgICAgICAgY29uc3QgY2hhciAqdXNlcl9yZWFsbSBfX2F0dHJpYnV0ZV9fKCh1
bnVzZWQpKSwgCgkJCSAgICAgICAgY29uc3QgY2hhciAqKnJlcGx5IF9fYXR0cmlidXRlX18oKHVu
dXNlZCkpKQp7CiAgaW50ICAgICAgICAgZGVidWcgICAgICAgID0gMDsKICBjb25zdCBjaGFyICAq
ZGVidWdzd2l0Y2ggPSBOVUxMOwogIGNvbnN0IGNoYXIgICpsZGFwSG9zdCAgICA9IE5VTEw7CiAg
Y29uc3QgY2hhciAgKmxkYXBQb3J0ICAgID0gTlVMTDsKICBpbnQgcG9ydCAgICAgICAgICAgICAg
ICAgPSAzODk7CiAgY29uc3QgY2hhciAgKmxkYXBGaWx0ZXIgID0gTlVMTDsKICBjb25zdCBjaGFy
ICAqbGRhcFVJREF0dHIgPSBOVUxMOwogIGNvbnN0IGNoYXIgICpsZGFwQmFzZUROICA9IE5VTEw7
CiAgY29uc3QgY2hhciAgKmxkYXBSZWN1cnNpdmUgPSBOVUxMOwoKICBpbnQgICAgICAgICBzZWFy
Y2hTY29wZSAgPSBMREFQX1NDT1BFX09ORUxFVkVMOwoKICBMREFQICAgICAgICAqbGQgICAgICAg
ICAgPSBOVUxMOwogIExEQVBNZXNzYWdlICpyZXN1bHQgICAgICA9IE5VTEw7CiAgTERBUE1lc3Nh
Z2UgKmVudHJ5ICAgICAgID0gTlVMTDsKICBjaGFyICAgICAgICAqYXR0cnNbMl07CiAgY2hhciAg
ICAgICAgZmlsdGVyWzUxMl07CiAgY2hhciAgICAgICAgKmRuICAgICAgICAgID0gTlVMTDsgICAK
CiAgaW50ICAgICAgICAgbm9SZWNvcmRzICAgID0gMDsKCiAgCiAgLyogTG9vayBmb3IgY29uZmln
dXJhdGlvbiBvcHRpb25zICovCiAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiov
CgogIC8qIFRvIHJlYWQgb3B0aW9ucyBmcm9tIGNvbmZpZ2ZpbGUgKi8KICBzYXNsX2dldG9wdF90
ICpnZXRvcHQ7CiAgdm9pZCAqY29udGV4dDsKCgogIC8qIFR1cm4gZGVidWdnaW5nIG9uID8gKi8K
ICBpZiAoX3Nhc2xfZ2V0Y2FsbGJhY2soY29ubiwgU0FTTF9DQl9HRVRPUFQsICZnZXRvcHQsICZj
b250ZXh0KSAKICAgICAgPT0gU0FTTF9PSykgewogICAgZ2V0b3B0KGNvbnRleHQsIE5VTEwsICJk
ZWJ1ZyIsICZkZWJ1Z3N3aXRjaCwgTlVMTCk7CiAgfQogIGlmICggZGVidWdzd2l0Y2ggIT0gTlVM
TCApIHsKICAgIGlmICggISBzdHJjbXAoZGVidWdzd2l0Y2gsIm9uIikgKSB7IGRlYnVnID0gMTsg
fTsKICB9CgoKICAvKiBBbGwgb3RoZXIgcGFyYW1ldGVycyAqLwogIGlmIChfc2FzbF9nZXRjYWxs
YmFjayhjb25uLCBTQVNMX0NCX0dFVE9QVCwgJmdldG9wdCwgJmNvbnRleHQpIAogICAgICA9PSBT
QVNMX09LKSB7CiAgICBnZXRvcHQoY29udGV4dCwgTlVMTCwgImxkYXBfaG9zdCIsICAgJmxkYXBI
b3N0LCBOVUxMKTsKICAgIGdldG9wdChjb250ZXh0LCBOVUxMLCAibGRhcF9wb3J0IiwgICAmbGRh
cFBvcnQsIE5VTEwpOwogICAgZ2V0b3B0KGNvbnRleHQsIE5VTEwsICJsZGFwX2ZpbHRlciIsICZs
ZGFwRmlsdGVyLCBOVUxMKTsKICAgIGdldG9wdChjb250ZXh0LCBOVUxMLCAibGRhcF91aWRhdHRy
IiwmbGRhcFVJREF0dHIsIE5VTEwpOwogICAgZ2V0b3B0KGNvbnRleHQsIE5VTEwsICJsZGFwX2Jh
c2VkbiIsICZsZGFwQmFzZUROLCBOVUxMKTsKICAgIGdldG9wdChjb250ZXh0LCBOVUxMLCAibGRh
cF9yZWN1cnNpdmUiLCAmbGRhcFJlY3Vyc2l2ZSwgTlVMTCk7CiAgfQoKCiAgaWYgKCBsZGFwSG9z
dCA9PSBOVUxMICkgewogICAgaWYgKCBkZWJ1ZyApIHsKICAgICAgc3lzbG9nKExPR19ERUJVRywi
bGRhcF9ob3N0IG9wdGlvbiBub3QgZm91bmQgLSB1c2luZyBsb2NhbGhvc3QiKTsKICAgIH0KICAg
IGxkYXBIb3N0ID0gImxvY2FsaG9zdCI7CiAgfQoKCiAgaWYgKCBsZGFwUG9ydCA9PSBOVUxMICkg
ewogICAgaWYgKCBkZWJ1ZyApIHsKICAgICAgc3lzbG9nKExPR19ERUJVRywibGRhcF9wb3J0IG9w
dGlvbiBub3QgZm91bmQgLSB1c2luZyAzODkiKTsKICAgIH0KICAgIGxkYXBQb3J0ID0gIjM4OSI7
CiAgfQogIC8qIHVzZSBwb3J0IDM4OSwgbm90IHRoZSBwb3J0IGZyb20gdGhlIGNvbmZpZ3VyYXRp
b24gZmlsZSAtIHRvIGRvICovCiAgcG9ydCA9IDM4OTsKCgogIC8qIHRoZXJlIGhhcyB0byBiZSBh
IGZpbHRlciAqLwogIGlmICggbGRhcEZpbHRlciA9PSBOVUxMICkgewogICAgc3lzbG9nKExPR19F
UlIsImxkYXBfZmlsdGVyIG9wdGlvbiBub3QgZm91bmQgLSBhYm9ydGluZyIpOwogICAgcmV0dXJu
IFNBU0xfQkFEQVVUSDsKICB9CgogIC8qIHdoaWNoIGF0dHJpYnV0ZSBob2xkcyB0aGUgdXNlciBJ
RCA/ICovCiAgaWYgKCBsZGFwVUlEQXR0ciA9PSBOVUxMICkgewogICAgc3lzbG9nKExPR19FUlIs
ImxkYXBfdWlkYXR0ciBvcHRpb24gbm90IGZvdW5kIC0gYWJvcnRpbmciKTsKICAgIHJldHVybiBT
QVNMX0JBREFVVEg7CiAgfQoKICAvKiB3aGF0IGlzIHRoZSBCYXNlIEROIGZvciB0aGUgc2VhcmNo
IG9wZXJhdGlvbiA/ICovCiAgaWYgKCBsZGFwQmFzZUROID09IE5VTEwgKSB7CiAgICBpZiAoIGRl
YnVnICkgewogICAgICBzeXNsb2coTE9HX0RFQlVHLCJsZGFwX2Jhc2VkbiBvcHRpb24gbm90IGZv
dW5kIC0gdXNpbmcgXCJcIiIpOwogICAgfQogICAgbGRhcEJhc2VETiA9ICIiOwogIH0KCiAgLyog
aWYgdGhlIHBhc3N3b3JkIGlzIE5VTEwsIHJlamVjdCB0aGUgbG9naW4gKi8KICBpZiAoc3RyY21w
KHBhc3N3b3JkLCIiKSA9PSAwKSB7CiAgICByZXR1cm4gU0FTTF9CQURBVVRIOwogIH0KCiAgLyog
aWYgdGhlIHVzZXJpZCBpcyBsb25nZXIgdGhlbiAxMDAgY2hhcmFjdGVycywgZGlzY2FyZCBpdCAt
IGl0IHNlZW1zCiAgICAgdGhhdCBzb21lYm9keSB0cmllcyBhbiBidWZmZXIgb3ZlcmZsb3cgKi8K
ICBpZiAoc3RybGVuKHVzZXJpZCkgPiAxMDApIHsKICAgIHN5c2xvZyhMT0dfREVCVUcsInVzZXJp
ZCBsb25nZXIgdGhlbiAxMDAgY2hhcmFjdGVycywgYnVmZmVyIG92ZXJmbG93IGF0dGFjayA/Iik7
CiAgfQoKICAvKiBzaG91bGQgd2Ugc2VhcmNoIHJlY3Vyc2l2ZSAqLwogIGlmICggbGRhcFJlY3Vy
c2l2ZSAhPSBOVUxMICkgewogICAgaWYgKCAhIHN0cmNtcChsZGFwUmVjdXJzaXZlLCJvbiIpICkg
ewogICAgICBzZWFyY2hTY29wZSA9IExEQVBfU0NPUEVfU1VCVFJFRTsKICAgIH07CiAgfTsKCiAg
LyogdHJ5IHRvIGNvbm5lY3QgdG8gYW4gTERBUCBzZXJ2ZXIgKi8KICBpZiAoKGxkID0gbGRhcF9v
cGVuKGxkYXBIb3N0LCBwb3J0KSkgPT0gTlVMTCkgewogICAgc3lzbG9nKExPR19FUlIsImNvdWxk
dCBub3QgY29ubmVjdCB0byBob3N0KHMpICVzLCBwb3J0ICVzIC0gYWJvcnRpbmciLAoJICAgbGRh
cEhvc3QsIGxkYXBQb3J0KTsKICAgIHJldHVybiBTQVNMX0JBREFVVEg7CiAgfQoKICAvKiBiaW5k
IGFub255bW91c2x5IHNvIHRoYXQgeW91IGNhbiBmaW5kIHRoZSBETiBvZiB0aGUgYXBwcm9waWF0
ZSB1c2VyICovCiAgaWYgKGxkYXBfc2ltcGxlX2JpbmRfcyhsZCwiIiwiIikgICE9IExEQVBfU1VD
Q0VTUykgewogICAgbGRhcF91bmJpbmQobGQpOwogICAgcmV0dXJuIFNBU0xfQkFEQVVUSDsKICB9
CgogIC8qIGdlbmVyYXRlIGEgZmlsdGVyIHRoYXQgd2lsbCByZXR1cm4gdGhlIGVudHJ5IHdpdGgg
dGhlIG1hdGNoaW5nIFVJRCAqLwogIHNwcmludGYoZmlsdGVyLGxkYXBGaWx0ZXIsbGRhcFVJREF0
dHIsIHVzZXJpZCk7CiAgYXR0cnNbMF09bGRhcFVJREF0dHI7CiAgYXR0cnNbMV09TlVMTDsKCiAg
aWYgKCBkZWJ1ZyApIHsKICAgIHN5c2xvZyAoTE9HX0RFQlVHLCAibGRhcHNlYXJjaCwgZmlsdGVy
PVwiJXNcIiIsZmlsdGVyKTsKICB9CiAgCiAgLyogcGVyZm9ybSB0aGUgc2VhcmNoICovCiAgaWYg
KGxkYXBfc2VhcmNoX3MobGQsbGRhcEJhc2VETixzZWFyY2hTY29wZSwgZmlsdGVyLCAKCQkgICAg
YXR0cnMsIDEsICZyZXN1bHQpICE9IExEQVBfU1VDQ0VTUykgewogICAgc3lzbG9nKExPR19ERUJV
RywiVXNlciAlcyBub3QgZm91bmQiLHVzZXJpZCk7CiAgICBsZGFwX3VuYmluZChsZCk7CiAgICBy
ZXR1cm4gU0FTTF9OT1VTRVI7CiAgfQoKICAvKiBpZiB0aGUgZW50cnkgY291bnQgaXMgbm90IGVx
dWFsIHRvIG9uZSwgZWl0aGVyIHRoZSBVSUQgd2FzIG5vdCB1bmlxdWUKICAgICBvciB0aGVyZSB3
YXMgbm8gbWF0Y2ggKi8KICBub1JlY29yZHMgPSBsZGFwX2NvdW50X2VudHJpZXMobGQsIHJlc3Vs
dCk7CiAgaWYgKG5vUmVjb3JkcyAhPSAxKSB7CiAgICBsZGFwX21zZ2ZyZWUocmVzdWx0KTsKICAg
IGxkYXBfdW5iaW5kKGxkKTsKICAgIGlmIChub1JlY29yZHMgPiAxKSB7CiAgICAgIHN5c2xvZyhM
T0dfRVJSLCJVc2VyICVzIGV4aXN0cyAlaSB0aW1lcyIsdXNlcmlkLCBub1JlY29yZHMpOwogICAg
fSBlbHNlIHsKICAgICAgc3lzbG9nKExPR19ERUJVRywiVXNlciAlcyBub3QgZm91bmQiLHVzZXJp
ZCk7CiAgICB9CiAgICByZXR1cm4gU0FTTF9OT1VTRVI7CiAgfQoKICAvKiBnZXQgdGhlIGZpcnN0
IGVudHJ5ICovCiAgaWYgKChlbnRyeSA9IGxkYXBfZmlyc3RfZW50cnkobGQscmVzdWx0KSkgPT0g
TlVMTCkgewogICAgbGRhcF9tc2dmcmVlKGVudHJ5KTsKICAgIGxkYXBfdW5iaW5kKGxkKTsKICAg
IHN5c2xvZyhMT0dfRVJSLCJDYW50IGdldCBlbnRyeSBmcm9tIExEQVAgLyBpbnRlcm5hbCBlcnJv
ciwgdXNlcmlkPSVzIiwKCSAgIHVzZXJpZCk7CiAgICByZXR1cm4gU0FTTF9CQURBVVRIOwogIH0K
CiAgLyogZ2V0IHRoZSBETiBvZiB0aGUgZW50cnkgKi8KICBpZiAoKGRuPWxkYXBfZ2V0X2RuKGxk
LGVudHJ5KSkgPT0gTlVMTCkgewogICAgbGRhcF9tc2dmcmVlKHJlc3VsdCk7CiAgICBsZGFwX3Vu
YmluZChsZCk7CiAgICBzeXNsb2coTE9HX0VSUiwiQ2FudCBnZXQgRE4gZnJvbSBMREFQIC8gaW50
ZXJuYWwgZXJyb3IsIHVzZXJpZD0lcyIsCgkgICB1c2VyaWQpOwogICAgcmV0dXJuIFNBU0xfQkFE
QVVUSDsKICB9CgogIC8qIG5vdyBiaW5kIHdpdGggdGhlIEROIHdpdGggdGhlIHBhc3N3b3JkIHN1
cHBsaWVkIGVhcmxpZXIsIAogICAgIHN1Y2Nlc3NmdWwgYmluZCBtZWFucyBwYXNzd29yZCBpcyBj
b3JyZWN0LCBvdGhlcndpc2UgdGhlIHBhc3N3b3JkIGlzCiAgICAgaW52YWxpZCAqLwogIGlmICgg
bGRhcF9zaW1wbGVfYmluZF9zKGxkLGRuLHBhc3N3b3JkKSAhPSBMREFQX1NVQ0NFU1MgKSB7CiAg
ICBmcmVlKGRuKTsKICAgIGxkYXBfbXNnZnJlZShlbnRyeSk7CiAgICBsZGFwX3VuYmluZChsZCk7
CiAgICBzeXNsb2coTE9HX0RFQlVHLCJwYXNzd29yZCBpbmNvcnJlY3QgZm9yIHVzZXJpZCAlcyIs
dXNlcmlkKTsKICAgIGlmICggZGVidWcgKSB7CiAgICAgIHN5c2xvZyhMT0dfREVCVUcsImNvdWxk
dCBub3QgYmluZCB0byBMREFQIHdpdGggZ2l2ZW4gcGFzc3dvcmQgZm9yIEROPSVzIiwKCSAgICAg
ZG4pOwogICAgfQogICAgcmV0dXJuIFNBU0xfQkFEQVVUSDsKICB9CgogIC8qIG9rYXksIHdlIGdv
dCBpdCA6LSkgKi8KICBmcmVlKGRuKTsKICBsZGFwX21zZ2ZyZWUoZW50cnkpOwogIGxkYXBfdW5i
aW5kKGxkKTsKICByZXR1cm4gU0FTTF9PSzsKfQoKI2VuZGlmCgoKCiNpZmRlZiBIQVZFX1NFUlZF
UgoKLyoKICogVGhpcyBmdW5jdGlvbiBjaGVja3MgYSB1c2VybmFtZS9wYXNzd29yZCBwYWlyIGFn
YWluc3QgYW4gcGFzc3dvcmQgc2VydmVyCiAqLwpzdGF0aWMgaW50IHNlcnZlcl92ZXJpZnlfcGFz
c3dvcmQoc2FzbF9jb25uX3QgKmNvbm4gX19hdHRyaWJ1dGVfXygodW51c2VkKSksCgkJCQkgIGNv
bnN0IGNoYXIgKnVzZXJpZCwgCgkJCQkgIGNvbnN0IGNoYXIgKnBhc3N3b3JkLAoJCQkJICBjb25z
dCBjaGFyICpzZXJ2aWNlIF9fYXR0cmlidXRlX18oKHVudXNlZCkpLAoJCQkJICBjb25zdCBjaGFy
ICp1c2VyX3JlYWxtIF9fYXR0cmlidXRlX18oKHVudXNlZCkpLCAKCQkJCSAgY29uc3QgY2hhciAq
KnJlcGx5IF9fYXR0cmlidXRlX18oKHVudXNlZCkpKQp7CiAgaW50ICAgICAgICAgZGVidWcgICAg
ICAgID0gMDsKICBjb25zdCBjaGFyICAqZGVidWdzd2l0Y2ggPSBOVUxMOwogIGNvbnN0IGNoYXIg
ICpzZXJ2ZXJIb3N0ICA9IE5VTEw7CiAgY29uc3QgY2hhciAgKnNlcnZlclBvcnQgID0gTlVMTDsK
ICBpbnQgcG9ydCAgICAgICAgICAgICAgICAgPSAwOwoKICBzdHJ1Y3QgaG9zdGVudCAqaDsKICBz
dHJ1Y3Qgc29ja2FkZHJfaW4gbG9jYWxBZGRyLCBzZXJ2QWRkcjsKICBpbnQgc2QsIHJjOwogIGNo
YXIgYnVmZlsyNTZdOwogIGNoYXIgY29kZVsyNTZdOwogIGNoYXIgbXNnWzI1Nl07CiAgY2hhciAq
YzsKICBpbnQgY291bnQ7CgoKCiAgCiAgLyogTG9vayBmb3IgY29uZmlndXJhdGlvbiBvcHRpb25z
ICovCiAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgogIC8qIFRvIHJlYWQg
b3B0aW9ucyBmcm9tIGNvbmZpZ2ZpbGUgKi8KICBzYXNsX2dldG9wdF90ICpnZXRvcHQ7CiAgdm9p
ZCAqY29udGV4dDsKCgogIC8qIFR1cm4gZGVidWdnaW5nIG9uID8gKi8KICBpZiAoX3Nhc2xfZ2V0
Y2FsbGJhY2soY29ubiwgU0FTTF9DQl9HRVRPUFQsICZnZXRvcHQsICZjb250ZXh0KSAKICAgICAg
PT0gU0FTTF9PSykgewogICAgZ2V0b3B0KGNvbnRleHQsIE5VTEwsICJkZWJ1ZyIsICZkZWJ1Z3N3
aXRjaCwgTlVMTCk7CiAgfQogIGlmICggZGVidWdzd2l0Y2ggIT0gTlVMTCApIHsKICAgIGlmICgg
ISBzdHJjbXAoZGVidWdzd2l0Y2gsIm9uIikgKSB7IGRlYnVnID0gMTsgfTsKICB9CgoKICAvKiBB
bGwgb3RoZXIgcGFyYW1ldGVycyAqLwogIGlmIChfc2FzbF9nZXRjYWxsYmFjayhjb25uLCBTQVNM
X0NCX0dFVE9QVCwgJmdldG9wdCwgJmNvbnRleHQpIAogICAgICA9PSBTQVNMX09LKSB7CiAgICBn
ZXRvcHQoY29udGV4dCwgTlVMTCwgInNlcnZlcl9ob3N0IiwgICAmc2VydmVySG9zdCwgTlVMTCk7
CiAgICBnZXRvcHQoY29udGV4dCwgTlVMTCwgInNlcnZlcl9wb3J0IiwgICAmc2VydmVyUG9ydCwg
TlVMTCk7CiAgfQoKCiAgaWYgKCBzZXJ2ZXJIb3N0ID09IE5VTEwgKSB7CiAgICBpZiAoIGRlYnVn
ICkgewogICAgICBzeXNsb2coTE9HX0RFQlVHLCJzZXJ2ZXJfaG9zdCBvcHRpb24gbm90IGZvdW5k
IC0gdXNpbmcgbG9jYWxob3N0Iik7CiAgICB9CiAgICBzZXJ2ZXJIb3N0ID0gImxvY2FsaG9zdCI7
CiAgfQoKCiAgaWYgKCBzZXJ2ZXJQb3J0ID09IE5VTEwgKSB7CiAgICBzeXNsb2coTE9HX0VSUiwi
c2VydmVyX3BvcnQgb3B0aW9uIG5vdCBmb3VuZCAtIGFib3J0aW5nIik7CiAgICByZXR1cm4gU0FT
TF9CQURBVVRIOyAgICAKICB9IGVsc2UgewogICAgcG9ydCA9IGF0b2koc2VydmVyUG9ydCk7CiAg
fQoKICAvKiBpZiB0aGUgcGFzc3dvcmQgaXMgTlVMTCwgcmVqZWN0IHRoZSBsb2dpbiAqLwogIGlm
IChzdHJjbXAocGFzc3dvcmQsIiIpID09IDApIHsKICAgIHJldHVybiBTQVNMX0JBREFVVEg7CiAg
fQoKICAvKiBpZiB0aGUgdXNlcmlkIGlzIGxvbmdlciB0aGVuIDEwMCBjaGFyYWN0ZXJzLCBkaXNj
YXJkIGl0IC0gaXQgc2VlbXMKICAgICB0aGF0IHNvbWVib2R5IHRyaWVzIGFuIGJ1ZmZlciBvdmVy
ZmxvdyAqLwogIGlmIChzdHJsZW4odXNlcmlkKSA+IDEwMCkgewogICAgc3lzbG9nKExPR19JTkZP
LAoJICAgInVzZXJpZCBsb25nZXIgdGhlbiAxMDAgY2hhcmFjdGVycywgYnVmZmVyIG92ZXJmbG93
IGF0dGFjayA/Iik7CiAgfQoKCgoKICAvKiByZXNvbHZlIGhvc3QgKi8KICBoID0gZ2V0aG9zdGJ5
bmFtZShzZXJ2ZXJIb3N0KTsKICBpZiAoaD09TlVMTCkgewogICAgc3ByaW50Zihtc2csInVua25v
d24gaG9zdCAnJXMnXG4iLHNlcnZlckhvc3QpOwogICAgc3lzbG9nKExPR19FUlIsbXNnKTsKICAg
IHJldHVybiBTQVNMX0JBREFVVEg7CiAgfQoKCiAgc2VydkFkZHIuc2luX2ZhbWlseSA9IGgtPmhf
YWRkcnR5cGU7CiAgbWVtY3B5KChjaGFyICopICZzZXJ2QWRkci5zaW5fYWRkci5zX2FkZHIsIGgt
PmhfYWRkcl9saXN0WzBdLCBoLT5oX2xlbmd0aCk7CiAgc2VydkFkZHIuc2luX3BvcnQ9aHRvbnMo
cG9ydCk7CiAgCiAgLyogY3JlYXRlIHNvY2tldCAqLwogIHNkID0gc29ja2V0KEFGX0lORVQsIFNP
Q0tfU1RSRUFNLCAwKTsKICBpZiAoc2Q8MCkgewogICAgc3ByaW50Zihtc2csImNhbm5vdCBvcGVu
IHNvY2tldDogJXMiLHN0cmVycm9yKGVycm5vKSk7CiAgICBzeXNsb2coTE9HX0VSUixtc2cpOwog
ICAgcmV0dXJuIFNBU0xfQkFEQVVUSDsKICB9CgoKICAvKiBiaW5kIHRvIGFueSBsb2NhbCBhZGRy
ZXNzICovCiAgbG9jYWxBZGRyLnNpbl9mYW1pbHkgPSBBRl9JTkVUOwogIGxvY2FsQWRkci5zaW5f
YWRkci5zX2FkZHIgPSBodG9ubChJTkFERFJfQU5ZKTsKICBsb2NhbEFkZHIuc2luX3BvcnQgPSBo
dG9ucygwKTsKICAKICByYyA9IGJpbmQoc2QsKHN0cnVjdCBzb2NrYWRkciAqKSAmbG9jYWxBZGRy
LCBzaXplb2YobG9jYWxBZGRyKSk7CiAgaWYgKHJjIDwgMCkgewogICAgc3ByaW50Zihtc2csImNh
bm5vdCBiaW5kIHBvcnQgVENQICV1XG4iLHBvcnQpOwogICAgc3lzbG9nKExPR19FUlIsbXNnKTsK
ICAgIHJldHVybiBTQVNMX0JBREFVVEg7CiAgfQoKICAvKiBjb25uZWN0IHRvIHRoZSBzZXJ2ZXIg
Ki8KICByYyA9IGNvbm5lY3Qoc2QsKHN0cnVjdCBzb2NrYWRkciAqKSAmc2VydkFkZHIsIHNpemVv
ZihzZXJ2QWRkcikpOwogIGlmIChyYyA8IDApIHsKICAgIHNwcmludGYobXNnLCJjYW5ub3Qgb3Bl
biBzb2NrZXQ6ICVzIixzdHJlcnJvcihlcnJubykpOwogICAgc3lzbG9nKExPR19FUlIsbXNnKTsK
ICAgIHJldHVybiBTQVNMX0JBREFVVEg7CiAgfQoKCiAgLyogc2VuZCBkYXRhIHRvIHRoZSBzZXJ2
ZXIgKi8KICBzcHJpbnRmKGJ1ZmYsImNoZWNrICVzICVzXG4iLHVzZXJpZCxwYXNzd29yZCk7CiAg
cmMgPSBzZW5kKHNkLGJ1ZmYsc3RybGVuKGJ1ZmYpKzEsMCk7CgogIGlmIChyYyA8IDApIHsKICAg
IHNwcmludGYobXNnLCJjYW5ub3Qgb3BlbiBzb2NrZXQ6ICVzIixzdHJlcnJvcihlcnJubykpOwog
ICAgc3lzbG9nKExPR19FUlIsbXNnKTsKICAgIHJldHVybiBTQVNMX0JBREFVVEg7CiAgfQoKICAv
KiByZWNlaXZlIGFuc3dlciAqLwogIAogIGMgPSBjb2RlOwogICpjID0gJyAnOwogIHJjID0gMDsK
ICBjb3VudCA9IDEwOwogCiAgLyogbG9vcCB1bnRpbCBnZXR0aW5nIGFuIEVPRiAoLTEpLCBuZXds
aW5lICgxMCksIGJ1ZmZlciBmdWxsIG9yCiAgICAgSU8gZXJyb3IgKi8KICB3aGlsZSAoKCpjICE9
IC0xKSAmJiAoKmMgIT0gMTApICYmIChjb3VudCA8IDUwKSAmJiAocmMgPj0gMCkpIHsKCiAgICBj
Kys7CiAgICBjb3VudCsrOwogICAgLyogcmVhZCBuZXh0IGNoYXJhY3RlciAqLwogICAgcmMgPSBy
ZWN2KHNkLGMsMSwwKTsKICB9CgogIC8qIGNsb3NlIHRoZSBzb2NrZXQgKi8KICBjbG9zZShzZCk7
CgogIC8qIGFkZCBhbiBlbmQtb2Ytc3RyaW5nIGNoYXJhY3RlciAqLwogICpjID0gMDsKCiAgLyog
Z28gdGhlIHN0YXJ0IG9mIHRoZSBzdHJpbmcgYWdhaW4gKi8KICBjPWNvZGU7CiAgYysrOwogIAog
IGlmIChyYyA8IDApIHsKICAgIHNwcmludGYobXNnLCJjYW5ub3Qgb3BlbiBzb2NrZXQ6ICVzIixz
dHJlcnJvcihlcnJubykpOwogICAgc3lzbG9nKExPR19FUlIsbXNnKTsKICAgIHJldHVybiBTQVNM
X0JBREFVVEg7CiAgfQoKICBpZiAoZGVidWcpIHsKICAgIHNwcmludGYobXNnLCJyZWNlaXZlZCAn
JXMnIGZyb20gc2VydmVyIixjKTsKICAgIHN5c2xvZyhMT0dfREVCVUcsbXNnKTsKICB9CgogIC8q
IHVzZXIgZG9lcyBub3QgZXhpc3RzICovCiAgaWYgKGNvZGVbMV0gPT0gJzInKSB7CiAgICBzcHJp
bnRmKG1zZywidXNlciAlcyBkb2VzIG5vdCBleGlzdCIsdXNlcmlkKTsKICAgIHN5c2xvZyhMT0df
SU5GTyxtc2cpOwogICAgcmV0dXJuIFNBU0xfTk9VU0VSOwogIH0KCiAgLyogb3RoZXIgZXJyb3Jz
ICovCiAgaWYgKGNvZGVbMV0gIT0gJzAnKSB7CiAgICBzcHJpbnRmKG1zZywiYXV0aGVudGljYXRp
b24gZmFpbGVkOiAlcyAiLGNvZGUpOwogICAgc3lzbG9nKExPR19JTkZPLG1zZyk7CiAgICByZXR1
cm4gU0FTTF9CQURBVVRIOwogIH0KICAgIAogIC8qIGNvcnJlY3QgKi8KICByZXR1cm4gU0FTTF9P
SzsKfQoKI2VuZGlmCg==
</data>        

          </attachment>
      

    </bug>

</bugzilla>