<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>1168</bug_id>
          
          <creation_ts>2002-02-22 17:16 EDT</creation_ts>
          <short_desc>lmtpproxyd conflicting timeouts?</short_desc>
          <delta_ts>2010-10-18 12:42:54 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Murder</component>
          <version>2.1.x</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          <blocked>1115</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</reporter>
          <assigned_to name="Rob Siemborski">rjs3@andrew.cmu.edu</assigned_to>
          
          

      

      

      
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2002-02-22 17:16:12 EDT</bug_when>
            <thetext>lmtpproxyd may hold open a connection to mupdate past the time that the mupdate
server times it out.  this means that when the next message comes in lmtpproxyd
returns an error and the message gets queued (or bounced!).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-02-22 17:28:02 EDT</bug_when>
            <thetext>do we want lmtpproxyd to noop to keep the connection around or just detect the
dead connection?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2002-02-22 17:40:00 EDT</bug_when>
            <thetext>probably detecting it&apos;s down and restarting is best, since i don&apos;t think there&apos;s
a good way of continually sending noops when we&apos;re in service.c


</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-02-23 02:24:14 EDT</bug_when>
            <thetext>we now have it send a NOOP at the top of service main, and reconnect if it fails.

at any other point if a connection dies, fatal() is called and this is
probabally good enough for our purposes (though maybe we can do a bit better).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2002-02-23 16:13:14 EDT</bug_when>
            <thetext>i think just dying if the connection drops really unexpectedly is ok, since we
make sure to tell sendmail tempfail.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-02-23 18:31:26 EDT</bug_when>
            <thetext>sounds good to me.  resolving bug.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>