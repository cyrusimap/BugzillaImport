<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3878</bug_id>
          
          <creation_ts>2014-12-29 04:38 EDT</creation_ts>
          <short_desc>[PATCH] DAV fails with virtual domains</short_desc>
          <delta_ts>2015-02-02 02:34:40 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>CalDAV</component>
          <version>2.4.17</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>NEW</bug_status>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Daniel Dickinson">cyrus-bugs@daniel.thecshore.com</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Daniel Dickinson">cyrus-bugs@daniel.thecshore.com</who>
            <bug_when>2014-12-29 04:38:52 EDT</bug_when>
            <thetext>Due to failure to consider domain part of name in caldav/carddav mailbox name creation code virtual domain users other than those in the default domain cannot create or access calendars or addressesbooks.

The following patch addresses that, however I have realized it will need to be modified so that the user part of the name can contain separate characters (i.e. add back toexternal/tointernal for the user part of the name only).  I will likely not have a chance to do this anytime soon (and it&apos;s not an issue here).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Daniel Dickinson">cyrus-bugs@daniel.thecshore.com</who>
            <bug_when>2015-02-02 02:33:47 EDT</bug_when>
            <thetext>Created an attachment (id=1549)
add virtual domain support to caldav/carddav</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Daniel Dickinson">cyrus-bugs@daniel.thecshore.com</who>
            <bug_when>2015-02-02 02:34:40 EDT</bug_when>
            <thetext>The attached patch which I have been using for some weeks replaces the one I posted before (it&apos;s much improved in addition to fixing some missing cases).</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1549</attachid>
            <date>2015-02-02 02:33 EDT</date>
            <desc>add virtual domain support to caldav/carddav</desc>
            <filename>fix-caldav-virtdomain-users.patch</filename>
            <type>text/plain</type>
            <size>12094</size>
            <attacher>cyrus-bugs@daniel.thecshore.com</attacher>
            
              <data encoding="base64">RGVzY3JpcHRpb246IEZpeCBDYWxEQVYvQ2FyZERBViB3aXRoIFZpcnR1YWwgRG9tYWlucwogRml4
IENhbERBVi9DYXJkREFWIHdoZW4gdXNlciBpcyBpbiBhIHZpcnR1YWwgZG9tYWluIHNvIHRoYXQg
dGhlIHZpcnR1YWwKIGRvbWFpbiBnZXRzIHVzZWQgaW4gdGhlIG1haWxib3ggbmFtZS4gIFRoaXMg
Zml4ZXMgQ2FsREFWIGZhaWxpbmcKIHRvIGNyZWF0ZS9vcGVuIG1haWxib3ggZm9yIGNhbGVuZGFy
cyB3aGVuIHVzZXIgaXMgbm90IGluIGRlZmF1bHQKIG9yIG9ubHkgZG9tYWluLgogVGhlcmUgd2Vy
ZSB0aHJlZSBpc3N1ZXMuICBUaGUgZmlyc3Qgd2FzIHRoYXQgaWYgeW91IHNwZWNpZnkgYSBkb21h
aW4KIGluIHRoZSBjYWxlbmRhciBVUkkgaXQgaXMgY29udmVydGVkIGFzIGlmIGl0IGl0IHdlcmUg
YSBtYWlsYm94IG5hbWUKIGluc3RlYWQgb2YgY3lydXMgZG9tYWluIHBhcnQgKGUuZy4gd2l0aCAn
Licgc2VwYXJhdG9yICcuJyBpbiBkb21haW4KIGlzIGNvbnZlcnRlZCB0byAnXicpIG9mIG1haWxi
b3ggbmFtZS4KIFRoaXMgc2Vjb25kIHdhcyB0aGF0IGluIGNhbGVuZGFyIGxvb2t1cHMgZm9yIHNj
aGVkdWxpbmcgdGhlIHVzZXJpZAogcGFydCBvZiB0aGUgbWFpbGJveCBuYW1lIGdvdCB0aGUgZG9t
YWluIHBhcnQgdHJ1bmNhdGVkIGR1ZSB0bwogJ0AnIGJlaW5nIHJlcGxhY2VkIGJ5IE5VTCAoc3Ry
aW5nIHRlcm1pbmF0b3IpIGluIGNhbGVuZGFyIGxvb2t1cAogZnVuY3Rpb24gKGNhbGFkZHJlc3Nf
bG9va3VwKS4KIFRoZSB0aGlyZCB3YXMgdGhhdCBpbiBzb21lIGNhc2VzIG1haWxib3huYW1lIGNy
ZWF0aW9uIGZ1bmN0aW9ucwogZGlkbid0IHVzZSB0aGUgc3RhbmRhcmQgZnVuY3Rpb25zIGFuZCBm
YWlsZWQgY29ycmVjdGx5IGNyZWF0ZWQKIG1haWxib3ggbmFtZSB3aGVuIG1haWxib3ggaGFkIGEg
ZG9tYWluLgogLgpBdXRob3I6IERhbmllbCBEaWNraW5zb24gPGRlYmlhbkBkYW5pZWwudGhlY3No
b3JlLmNvbT4KCi0tLQpUaGUgaW5mb3JtYXRpb24gYWJvdmUgc2hvdWxkIGZvbGxvdyB0aGUgUGF0
Y2ggVGFnZ2luZyBHdWlkZWxpbmVzLCBwbGVhc2UKY2hlY2tvdXQgaHR0cDovL2RlcC5kZWJpYW4u
bmV0L2RlcHMvZGVwMy8gdG8gbGVhcm4gYWJvdXQgdGhlIGZvcm1hdC4gSGVyZQphcmUgdGVtcGxh
dGVzIGZvciBzdXBwbGVtZW50YXJ5IGZpZWxkcyB0aGF0IHlvdSBtaWdodCB3YW50IHRvIGFkZDoK
Ck9yaWdpbjogPHZlbmRvcnx1cHN0cmVhbXxvdGhlcj4sIDx1cmwgb2Ygb3JpZ2luYWwgcGF0Y2g+
CkJ1ZzogPHVybCBpbiB1cHN0cmVhbSBidWd0cmFja2VyPgpCdWctRGViaWFuOiBodHRwczovL2J1
Z3MuZGViaWFuLm9yZy88YnVnbnVtYmVyPgpCdWctVWJ1bnR1OiBodHRwczovL2xhdW5jaHBhZC5u
ZXQvYnVncy88YnVnbnVtYmVyPgpGb3J3YXJkZWQ6IDxub3xub3QtbmVlZGVkfHVybCBwcm92aW5n
IHRoYXQgaXQgaGFzIGJlZW4gZm9yd2FyZGVkPgpSZXZpZXdlZC1CeTogPG5hbWUgYW5kIGVtYWls
IG9mIHNvbWVvbmUgd2hvIGFwcHJvdmVkIHRoZSBwYXRjaD4KTGFzdC1VcGRhdGU6IDxZWVlZLU1N
LUREPgoKSW5kZXg6IGN5cnVzLWltYXBkLTIuNC0yLjQuMTcrY2FsZGF2fmJldGExMC50ZXN0L2lt
YXAvaHR0cF9jYWxkYXYuYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBjeXJ1cy1pbWFwZC0yLjQtMi40LjE3K2Nh
bGRhdn5iZXRhMTAudGVzdC5vcmlnL2ltYXAvaHR0cF9jYWxkYXYuYworKysgY3lydXMtaW1hcGQt
Mi40LTIuNC4xNytjYWxkYXZ+YmV0YTEwLnRlc3QvaW1hcC9odHRwX2NhbGRhdi5jCkBAIC02MzEs
OCArNjMxLDkgQEAgc3RhdGljIHZvaWQgbXlfY2FsZGF2X2F1dGgoY29uc3QgY2hhciAqdQogCiAg
ICAgLyogQXV0by1wcm92aXNpb24gY2FsZW5kYXJzIGZvciAndXNlcmlkJyAqLwogCi0gICAgc3Ry
bGNweShpZGVudCwgdXNlcmlkLCBzaXplb2YoaWRlbnQpKTsKKyAgICBzdHJsY3B5KGlkZW50LCB1
c2VyaWQsIHN0cmNzcG4odXNlcmlkLCAiQCIpKTsKICAgICBtYm94bmFtZV9oaWVyc2VwX3RvZXh0
ZXJuYWwoJmh0dHBkX25hbWVzcGFjZSwgaWRlbnQsIDApOworICAgIHN0cmxjcHkoaWRlbnQgKyBz
dHJsZW4oaWRlbnQpLCB1c2VyaWQgKyBzdHJsZW4oaWRlbnQpLCBzaXplb2YoaWRlbnQpIC0gc3Ry
bGVuKGlkZW50KSk7CiAKICAgICAvKiBjYWxlbmRhci1ob21lLXNldCAqLwogICAgIHIgPSBtYm94
bGlzdF9sb29rdXAobWFpbGJveG5hbWUsICZtYmVudHJ5LCBOVUxMKTsKQEAgLTc2MSw2ICs3NjIs
MTAgQEAgc3RhdGljIGludCBjYWxkYXZfcGFyc2VfcGF0aChjb25zdCBjaGFyCiAgICAgY2hhciAq
cDsKICAgICBzaXplX3QgbGVuLCBzaXo7CiAgICAgc3RhdGljIGNvbnN0IGNoYXIgKnByZWZpeCA9
IE5VTEw7CisgICAgY2hhciB1c2VyaWRbTUFYX01BSUxCT1hfQlVGRkVSXTsKKyAgICBjaGFyIHVz
ZXJkb21haW5bTUFYX01BSUxCT1hfQlVGRkVSXTsKKyAgICBjaGFyICpkb21haW5fc3RhcnQ7Cisg
ICAgaW50IHVzZXJsZW4sIGRvbWFpbmxlbjsKIAogICAgIC8qIE1ha2UgYSB3b3JraW5nIGNvcHkg
b2YgdGFyZ2V0IHBhdGggKi8KICAgICBzdHJsY3B5KHRndC0+cGF0aCwgcGF0aCwgc2l6ZW9mKHRn
dC0+cGF0aCkpOwpAQCAtODU3LDEzICs4NjIsMjAgQEAgc3RhdGljIGludCBjYWxkYXZfcGFyc2Vf
cGF0aChjb25zdCBjaGFyCiAgICAgcCA9IHRndC0+bWJveG5hbWU7CiAgICAgc2l6ID0gTUFYX01B
SUxCT1hfQlVGRkVSOwogICAgIGlmICh0Z3QtPnVzZXIpIHsKLQlsZW4gPSBzbnByaW50ZihwLCBz
aXosICJ1c2VyIik7Ci0JcCArPSBsZW47Ci0Jc2l6IC09IGxlbjsKLQogCWlmICh0Z3QtPnVzZXJs
ZW4pIHsKLQkgICAgbGVuID0gc25wcmludGYocCwgc2l6LCAiLiUuKnMiLCAoaW50KSB0Z3QtPnVz
ZXJsZW4sIHRndC0+dXNlcik7Ci0JICAgIG1ib3huYW1lX2hpZXJzZXBfdG9pbnRlcm5hbCgmaHR0
cGRfbmFtZXNwYWNlLCBwKzEsIHRndC0+dXNlcmxlbik7CisJICAgIGRvbWFpbl9zdGFydCA9IHN0
cmNocih0Z3QtPnVzZXIsICdAJyk7CisJICAgIGlmIChkb21haW5fc3RhcnQgIT0gTlVMTCkgewor
CQl1c2VybGVuID0gZG9tYWluX3N0YXJ0IC0gdGd0LT51c2VyICsgMTsKKwkJZG9tYWluX3N0YXJ0
Kys7CisJCWRvbWFpbmxlbiA9IHRndC0+dXNlcmxlbiAtIHVzZXJsZW4gKyAxOworCSAgICAgICAg
c3RybGNweSh1c2VyaWQsIHRndC0+dXNlciwgdXNlcmxlbik7CisJICAgICAgICBtYm94bmFtZV9o
aWVyc2VwX3RvaW50ZXJuYWwoJmh0dHBkX25hbWVzcGFjZSwgdXNlcmlkLCB1c2VybGVuKTsKKwkJ
c3RybGNweSh1c2VyZG9tYWluLCBkb21haW5fc3RhcnQsIGRvbWFpbmxlbik7CisJICAgICAgICBs
ZW4gPSBzbnByaW50ZihwLCBzaXosICIlLipzIXVzZXIuJS4qcyIsIChpbnQpIGRvbWFpbmxlbiwg
dXNlcmRvbWFpbiwgKGludCkgdXNlcmxlbiwgdXNlcmlkKTsKKyAgICAgICAgICAgIH0gZWxzZSB7
CisJICAgICAgICBsZW4gPSBzbnByaW50ZihwLCBzaXosICJ1c2VyLiUuKnMiLCAoaW50KSB0Z3Qt
PnVzZXJsZW4sIHRndC0+dXNlcik7CisJICAgICAgICBtYm94bmFtZV9oaWVyc2VwX3RvaW50ZXJu
YWwoJmh0dHBkX25hbWVzcGFjZSwgcCs1LCB0Z3QtPnVzZXJsZW4pOworICAgICAgICAgICAgfQog
CSAgICBwICs9IGxlbjsKIAkgICAgc2l6IC09IGxlbjsKIAl9CkBAIC0xOTE3LDggKzE5MjksOSBA
QCBzdGF0aWMgaW50IGNhbGRhdl9wb3N0KHN0cnVjdCB0cmFuc2FjdGlvCiAgICAgaWYgKG9yZ2Fu
aXplcikgewogCWlmICghY2FsYWRkcmVzc19sb29rdXAob3JnYW5pemVyLCAmc3BhcmFtKSAmJgog
CSAgICAhKHNwYXJhbS5mbGFncyAmIFNDSEVEVFlQRV9SRU1PVEUpKSB7Ci0JICAgIHN0cmxjcHko
b3JnaWQsIHNwYXJhbS51c2VyaWQsIHNpemVvZihvcmdpZCkpOworCSAgICBzdHJsY3B5KG9yZ2lk
LCBzcGFyYW0udXNlcmlkLCBzdHJjc3BuKHNwYXJhbS51c2VyaWQsICJAIikpOwogCSAgICBtYm94
bmFtZV9oaWVyc2VwX3RvZXh0ZXJuYWwoJmh0dHBkX25hbWVzcGFjZSwgb3JnaWQsIDApOworCSAg
ICBzdHJsY3B5KG9yZ2lkICsgc3RybGVuKG9yZ2lkKSwgc3BhcmFtLnVzZXJpZCArIHN0cmxlbihv
cmdpZCksIHNpemVvZihvcmdpZCkgLSBzdHJsZW4ob3JnaWQpKTsKIAl9CiAgICAgfQogCkBAIC0y
MTMzLDggKzIxNDYsOSBAQCBzdGF0aWMgaW50IGNhbGRhdl9wdXQoc3RydWN0IHRyYW5zYWN0aW9u
CiAJCS8qIENBTERBVjp1bmlxdWUtc2NoZWR1bGluZy1vYmplY3QtcmVzb3VyY2UgKi8KIAkJY2hh
ciBleHRfdXNlcmlkW01BWF9NQUlMQk9YX05BTUUrMV07CiAKLQkJc3RybGNweShleHRfdXNlcmlk
LCB1c2VyaWQsIHNpemVvZihleHRfdXNlcmlkKSk7CisJCXN0cmxjcHkoZXh0X3VzZXJpZCwgdXNl
cmlkLCBzdHJjc3BuKHVzZXJpZCwgIkAiKSk7CiAJCW1ib3huYW1lX2hpZXJzZXBfdG9leHRlcm5h
bCgmaHR0cGRfbmFtZXNwYWNlLCBleHRfdXNlcmlkLCAwKTsKKwkgICAgICAgIHN0cmxjcHkoZXh0
X3VzZXJpZCArIHN0cmxlbihleHRfdXNlcmlkKSwgdXNlcmlkICsgc3RybGVuKGV4dF91c2VyaWQp
LCBzaXplb2YoZXh0X3VzZXJpZCkgLSBzdHJsZW4oZXh0X3VzZXJpZCkpOwogCiAJCXR4bi0+ZXJy
b3IucHJlY29uZCA9IENBTERBVl9VTklRVUVfT0JKRUNUOwogCQlhc3NlcnQoIWJ1Zl9sZW4oJnR4
bi0+YnVmKSk7CkBAIC00MDk2LDkgKzQxMTAsMTIgQEAgc3RhdGljIGludCBzdG9yZV9yZXNvdXJj
ZShzdHJ1Y3QgdHJhbnNhYwogCiBpbnQgY2FsYWRkcmVzc19sb29rdXAoY29uc3QgY2hhciAqYWRk
ciwgc3RydWN0IHNjaGVkX3BhcmFtICpwYXJhbSkKIHsKLSAgICBjaGFyICpwOworICAgIGNoYXIg
KnAsICpkb21haW5fc3RhcnQ7CiAgICAgaW50IGlzbG9jYWwgPSAxLCBmb3VuZCA9IDE7CiAgICAg
c3RhdGljIGNoYXIgdXNlcmlkW01BWF9NQUlMQk9YX0JVRkZFUl07CisgICAgc3RhdGljIGNoYXIg
dG1wdXNlcmlkW01BWF9NQUlMQk9YX0JVRkZFUl07CisgICAgc3RhdGljIGNoYXIgdG1wdXNlcmRv
bWFpbltNQVhfTUFJTEJPWF9CVUZGRVJdOworICAgIGludCB1c2VybGVuLCBkb21haW5sZW4sIHVz
ZXJpZGxlbjsKIAogICAgIG1lbXNldChwYXJhbSwgMCwgc2l6ZW9mKHN0cnVjdCBzY2hlZF9wYXJh
bSkpOwogCkBAIC00MTEwLDcgKzQxMjcsOCBAQCBpbnQgY2FsYWRkcmVzc19sb29rdXAoY29uc3Qg
Y2hhciAqYWRkciwKICAgICAvKiBYWFggIERvIExEQVAvREIvc29ja2V0IGxvb2t1cCB0byBzZWUg
aWYgdXNlciBpcyBsb2NhbCAqLwogICAgIC8qIFhYWCAgSGFjayB1bnRpbCByZWFsIGxvb2t1cCBz
dHVmZiBpcyB3cml0dGVuICovCiAgICAgc3RybGNweSh1c2VyaWQsIHAsIHNpemVvZih1c2VyaWQp
KTsKLSAgICBpZiAoKHAgPSBzdHJjaHIodXNlcmlkLCAnQCcpKSAmJiAhKCpwID0gJ1wwJykgJiYg
KisrcCkgeworICAgIHN0cmxjcHkodG1wdXNlcmlkLCBwLCBzaXplb2YodG1wdXNlcmlkKSk7Cisg
ICAgaWYgKChwID0gc3RyY2hyKHRtcHVzZXJpZCwgJ0AnKSkgJiYgISgqcCA9ICdcMCcpICYmICor
K3ApIHsKIAlzdHJ1Y3Qgc3RybGlzdCAqZG9tYWlucyA9IGN1YV9kb21haW5zOwogCiAJZm9yICg7
IGRvbWFpbnMgJiYgc3RyY21wKHAsIGRvbWFpbnMtPnMpOyBkb21haW5zID0gZG9tYWlucy0+bmV4
dCk7CkBAIC00MTMyLDkgKzQxNTAsMjAgQEAgaW50IGNhbGFkZHJlc3NfbG9va3VwKGNvbnN0IGNo
YXIgKmFkZHIsCiAJICAgIGNhbGVuZGFycHJlZml4ID0gY29uZmlnX2dldHN0cmluZyhJTUFQT1BU
X0NBTEVOREFSUFJFRklYKTsKIAl9CiAKLQltYm94bmFtZV9oaWVyc2VwX3RvaW50ZXJuYWwoJmh0
dHBkX25hbWVzcGFjZSwgdXNlcmlkLCAwKTsKLQlzbnByaW50ZihtYWlsYm94bmFtZSwgc2l6ZW9m
KG1haWxib3huYW1lKSwKLQkJICJ1c2VyLiVzLiVzIiwgcGFyYW0tPnVzZXJpZCwgY2FsZW5kYXJw
cmVmaXgpOworICAgICAgIGRvbWFpbl9zdGFydCA9IHN0cmNocih1c2VyaWQsICdAJyk7CisJaWYg
KGRvbWFpbl9zdGFydCAhPSBOVUxMKSB7CisJICAgIHVzZXJsZW4gPSBkb21haW5fc3RhcnQgLSB1
c2VyaWQgKyAxOworICAgICAgICAgICAgZG9tYWluX3N0YXJ0Kys7CisJICAgIHVzZXJpZGxlbiA9
IHN0cmNzcG4odXNlcmlkLCAiLyIpOworCSAgICBkb21haW5sZW4gPSB1c2VyaWRsZW4gLSB1c2Vy
bGVuICsgMTsKKwkgICAgc3RybGNweSh0bXB1c2VyaWQsIHVzZXJpZCwgdXNlcmxlbik7CisJICAg
IG1ib3huYW1lX2hpZXJzZXBfdG9pbnRlcm5hbCgmaHR0cGRfbmFtZXNwYWNlLCB0bXB1c2VyaWQs
IDApOworCSAgICBzdHJsY3B5KHRtcHVzZXJkb21haW4sIGRvbWFpbl9zdGFydCwgZG9tYWlubGVu
KTsKKwkgICAgc25wcmludGYobWFpbGJveG5hbWUsIHNpemVvZihtYWlsYm94bmFtZSksICIlLipz
IXVzZXIuJS4qcy4lcyIsIChpbnQpIGRvbWFpbmxlbiwgdG1wdXNlcmRvbWFpbiwgKGludCkgdXNl
cmxlbiwgdG1wdXNlcmlkLCBjYWxlbmRhcnByZWZpeCk7CisgICAgICAgIH0gZWxzZSB7CisgICAg
ICAgICAgICBzbnByaW50ZihtYWlsYm94bmFtZSwgc2l6ZW9mKG1haWxib3huYW1lKSwgInVzZXIu
JXMuJXMiLCB1c2VyaWQsIGNhbGVuZGFycHJlZml4KTsKKwkgICAgbWJveG5hbWVfaGllcnNlcF90
b2ludGVybmFsKCZodHRwZF9uYW1lc3BhY2UsIHVzZXJpZCwgMCk7CisgICAgICAgIH0KIAogCXIg
PSBodHRwX21sb29rdXAobWFpbGJveG5hbWUsICZwYXJhbS0+c2VydmVyLCBOVUxMLCBOVUxMKTsK
IAlpZiAoIXIpIHsKQEAgLTQ0NDEsNiArNDQ3MCwxMCBAQCBpbnQgc2NoZWRfYnVzeXRpbWVfcXVl
cnkoc3RydWN0IHRyYW5zYWN0CiAgICAgc3RhdGljIGNvbnN0IGNoYXIgKmNhbGVuZGFycHJlZml4
ID0gTlVMTDsKICAgICBpY2FsY29tcG9uZW50ICpjb21wOwogICAgIGNoYXIgbWFpbGJveG5hbWVb
TUFYX01BSUxCT1hfQlVGRkVSXTsKKyAgICBjaGFyIHRtcHVzZXJpZFtNQVhfTUFJTEJPWF9CVUZG
RVJdOworICAgIGNoYXIgdG1wdXNlcmRvbWFpbltNQVhfTUFJTEJPWF9CVUZGRVJdOworICAgIGNo
YXIgKmRvbWFpbl9zdGFydDsKKyAgICBpbnQgdXNlcmxlbiwgZG9tYWlubGVuLCB1c2VyaWRsZW47
CiAgICAgaWNhbHByb3BlcnR5ICpwcm9wID0gTlVMTCwgKm5leHQ7CiAgICAgY29uc3QgY2hhciAq
dWlkID0gTlVMTCwgKm9yZ2FuaXplciA9IE5VTEw7CiAgICAgc3RydWN0IHNjaGVkX3BhcmFtIHNw
YXJhbTsKQEAgLTQ1ODMsOSArNDYxNiwxOSBAQCBpbnQgc2NoZWRfYnVzeXRpbWVfcXVlcnkoc3Ry
dWN0IHRyYW5zYWN0CiAJCQkJIAogCiAJICAgIC8qIENoZWNrIEFDTCBvZiBPUkdBTklaRVIgb24g
YXR0ZW5kZWUncyBTY2hlZHVsaW5nIEluYm94ICovCi0JICAgIHNucHJpbnRmKG1haWxib3huYW1l
LCBzaXplb2YobWFpbGJveG5hbWUpLAotCQkgICAgICJ1c2VyLiVzLiVzLkluYm94IiwgdXNlcmlk
LCBjYWxlbmRhcnByZWZpeCk7Ci0KKyAgICAgICAgICAgIGRvbWFpbl9zdGFydCA9IHN0cmNocih1
c2VyaWQsICdAJyk7CisJICAgIGlmIChkb21haW5fc3RhcnQgIT0gTlVMTCkgeworCSAgICAgICAg
dXNlcmxlbiA9IGRvbWFpbl9zdGFydCAtIHVzZXJpZCArIDE7CisgICAgICAgICAgICAgICAgZG9t
YWluX3N0YXJ0Kys7CisJICAgICAgICB1c2VyaWRsZW4gPSBzdHJjc3BuKHVzZXJpZCwgIi8iKTsK
KwkgICAgICAgIGRvbWFpbmxlbiA9IHVzZXJpZGxlbiAtIHVzZXJsZW4gKyAxOworCSAgICAgICAg
c3RybGNweSh0bXB1c2VyaWQsIHVzZXJpZCwgdXNlcmxlbik7CisJICAgICAgICBzdHJsY3B5KHRt
cHVzZXJkb21haW4sIGRvbWFpbl9zdGFydCwgZG9tYWlubGVuKTsKKwkgICAgICAgIHNucHJpbnRm
KG1haWxib3huYW1lLCBzaXplb2YobWFpbGJveG5hbWUpLCAiJS4qcyF1c2VyLiUuKnMuJXMuSW5i
b3giLCAoaW50KSBkb21haW5sZW4sIHRtcHVzZXJkb21haW4sIChpbnQpIHVzZXJsZW4sIHRtcHVz
ZXJpZCwgY2FsZW5kYXJwcmVmaXgpOworICAgICAgICAgICAgfSBlbHNlIHsKKyAgICAgICAgICAg
ICAgICBzbnByaW50ZihtYWlsYm94bmFtZSwgc2l6ZW9mKG1haWxib3huYW1lKSwgInVzZXIuJXMu
JXMuSW5ib3giLCB1c2VyaWQsIGNhbGVuZGFycHJlZml4KTsKKyAgICAgICAgICAgIH0KKwkKIAkg
ICAgaWYgKChyID0gbWJveGxpc3RfbG9va3VwKG1haWxib3huYW1lLCAmbWJlbnRyeSwgTlVMTCkp
KSB7CiAJCXN5c2xvZyhMT0dfSU5GTywgIm1ib3hsaXN0X2xvb2t1cCglcykgZmFpbGVkOiAlcyIs
CiAJCSAgICAgICBtYWlsYm94bmFtZSwgZXJyb3JfbWVzc2FnZShyKSk7CkBAIC00NjAyLDggKzQ2
NDUsMTggQEAgaW50IHNjaGVkX2J1c3l0aW1lX3F1ZXJ5KHN0cnVjdCB0cmFuc2FjdAogCiAJICAg
IGVsc2UgewogCQkvKiBTdGFydCBxdWVyeSBhdCBhdHRlbmRlZSdzIGNhbGVuZGFyLWhvbWUtc2V0
ICovCi0JCXNucHJpbnRmKG1haWxib3huYW1lLCBzaXplb2YobWFpbGJveG5hbWUpLAotCQkJICJ1
c2VyLiVzLiVzIiwgdXNlcmlkLCBjYWxlbmRhcnByZWZpeCk7CisgICAgICAgICAgICAgICAgZG9t
YWluX3N0YXJ0ID0gc3RyY2hyKHVzZXJpZCwgJ0AnKTsKKwkgICAgICAgIGlmIChkb21haW5fc3Rh
cnQgIT0gTlVMTCkgeworCSAgICAgICAgICAgIHVzZXJsZW4gPSBkb21haW5fc3RhcnQgLSB1c2Vy
aWQgKyAxOworICAgICAgICAgICAgICAgICAgICBkb21haW5fc3RhcnQrKzsKKwkgICAgICAgICAg
ICB1c2VyaWRsZW4gPSBzdHJjc3BuKHVzZXJpZCwgIi8iKTsKKwkgICAgICAgICAgICBkb21haW5s
ZW4gPSB1c2VyaWRsZW4gLSB1c2VybGVuICsgMTsKKwkgICAgICAgICAgICBzdHJsY3B5KHRtcHVz
ZXJpZCwgdXNlcmlkLCB1c2VybGVuKTsKKwkgICAgICAgICAgICBzdHJsY3B5KHRtcHVzZXJkb21h
aW4sIGRvbWFpbl9zdGFydCwgZG9tYWlubGVuKTsKKwkgICAgICAgICAgICBzbnByaW50ZihtYWls
Ym94bmFtZSwgc2l6ZW9mKG1haWxib3huYW1lKSwgIiUuKnMhdXNlci4lLipzLiVzLkluYm94Iiwg
KGludCkgZG9tYWlubGVuLCB0bXB1c2VyZG9tYWluLCAoaW50KSB1c2VybGVuLCB0bXB1c2VyaWQs
IGNhbGVuZGFycHJlZml4KTsKKyAgICAgICAgICAgICAgICB9IGVsc2UgeworICAgICAgICAgICAg
ICAgICAgICBzbnByaW50ZihtYWlsYm94bmFtZSwgc2l6ZW9mKG1haWxib3huYW1lKSwgInVzZXIu
JXMuJXMuSW5ib3giLCB1c2VyaWQsIGNhbGVuZGFycHJlZml4KTsKKyAgICAgICAgICAgICAgICB9
CiAKIAkJZmN0eC5kYXZkYiA9IE5VTEw7CiAJCWZjdHgucmVxX3RndC0+Y29sbGVjdGlvbiA9IE5V
TEw7CkluZGV4OiBjeXJ1cy1pbWFwZC0yLjQtMi40LjE3K2NhbGRhdn5iZXRhMTAudGVzdC9pbWFw
L2h0dHBfY2FyZGRhdi5jCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGN5cnVzLWltYXBkLTIuNC0yLjQuMTcrY2Fs
ZGF2fmJldGExMC50ZXN0Lm9yaWcvaW1hcC9odHRwX2NhcmRkYXYuYworKysgY3lydXMtaW1hcGQt
Mi40LTIuNC4xNytjYWxkYXZ+YmV0YTEwLnRlc3QvaW1hcC9odHRwX2NhcmRkYXYuYwpAQCAtMzY4
LDggKzM2OCw5IEBAIHN0YXRpYyB2b2lkIG15X2NhcmRkYXZfYXV0aChjb25zdCBjaGFyICoKICAg
ICB9CiAKICAgICAvKiBBdXRvLXByb3Zpc2lvbiBhbiBhZGRyZXNzYm9vayBmb3IgJ3VzZXJpZCcg
Ki8KLSAgICBzdHJsY3B5KGlkZW50LCB1c2VyaWQsIHNpemVvZihpZGVudCkpOworICAgIHN0cmxj
cHkoaWRlbnQsIHVzZXJpZCwgc3RyY3Nwbih1c2VyaWQsICJAIikpOwogICAgIG1ib3huYW1lX2hp
ZXJzZXBfdG9leHRlcm5hbCgmaHR0cGRfbmFtZXNwYWNlLCBpZGVudCwgMCk7CisgICAgc3RybGNw
eShpZGVudCArIHN0cmxlbihpZGVudCksIHVzZXJpZCArIHN0cmxlbihpZGVudCksIHNpemVvZihp
ZGVudCkgLSBzdHJsZW4oaWRlbnQpKTsKIAogICAgIC8qIGFkZHJlc3Nib29rLWhvbWUtc2V0ICov
CiAgICAgbGVuICs9IHNucHJpbnRmKG1haWxib3huYW1lK2xlbiwgTUFYX01BSUxCT1hfQlVGRkVS
IC0gbGVuLCAiLiVzIiwKQEAgLTQ2MSw2ICs0NjIsMTAgQEAgc3RhdGljIGludCBjYXJkZGF2X3Bh
cnNlX3BhdGgoY29uc3QgY2hhcgogICAgIGNoYXIgKnA7CiAgICAgc2l6ZV90IGxlbiwgc2l6Owog
ICAgIHN0YXRpYyBjb25zdCBjaGFyICpwcmVmaXggPSBOVUxMOworICAgIGNoYXIgdXNlcmlkW01B
WF9NQUlMQk9YX0JVRkZFUl07CisgICAgY2hhciB1c2VyZG9tYWluW01BWF9NQUlMQk9YX0JVRkZF
Ul07CisgICAgY2hhciAqZG9tYWluX3N0YXJ0OworICAgIGludCB1c2VybGVuLCBkb21haW5sZW47
CiAKICAgICAvKiBNYWtlIGEgd29ya2luZyBjb3B5IG9mIHRhcmdldCBwYXRoICovCiAgICAgc3Ry
bGNweSh0Z3QtPnBhdGgsIHBhdGgsIHNpemVvZih0Z3QtPnBhdGgpKTsKQEAgLTU0NiwxMyArNTUx
LDIwIEBAIHN0YXRpYyBpbnQgY2FyZGRhdl9wYXJzZV9wYXRoKGNvbnN0IGNoYXIKICAgICBwID0g
dGd0LT5tYm94bmFtZTsKICAgICBzaXogPSBNQVhfTUFJTEJPWF9CVUZGRVI7CiAgICAgaWYgKHRn
dC0+dXNlcikgewotCWxlbiA9IHNucHJpbnRmKHAsIHNpeiwgInVzZXIiKTsKLQlwICs9IGxlbjsK
LQlzaXogLT0gbGVuOwotCiAJaWYgKHRndC0+dXNlcmxlbikgewotCSAgICBsZW4gPSBzbnByaW50
ZihwLCBzaXosICIuJS4qcyIsIChpbnQpIHRndC0+dXNlcmxlbiwgdGd0LT51c2VyKTsKLQkgICAg
bWJveG5hbWVfaGllcnNlcF90b2ludGVybmFsKCZodHRwZF9uYW1lc3BhY2UsIHArMSwgdGd0LT51
c2VybGVuKTsKKwkgICAgZG9tYWluX3N0YXJ0ID0gc3RyY2hyKHRndC0+dXNlciwgJ0AnKTsKKwkg
ICAgaWYgKGRvbWFpbl9zdGFydCAhPSBOVUxMKSB7CisJCXVzZXJsZW4gPSBkb21haW5fc3RhcnQg
LSB0Z3QtPnVzZXIgKyAxOworCQlkb21haW5fc3RhcnQrKzsKKwkJZG9tYWlubGVuID0gdGd0LT51
c2VybGVuIC0gdXNlcmxlbiArIDE7CisJICAgICAgICBzdHJsY3B5KHVzZXJpZCwgdGd0LT51c2Vy
LCB1c2VybGVuKTsKKwkgICAgICAgIG1ib3huYW1lX2hpZXJzZXBfdG9pbnRlcm5hbCgmaHR0cGRf
bmFtZXNwYWNlLCB1c2VyaWQsIHVzZXJsZW4pOworCQlzdHJsY3B5KHVzZXJkb21haW4sIGRvbWFp
bl9zdGFydCwgZG9tYWlubGVuKTsKKwkgICAgICAgIGxlbiA9IHNucHJpbnRmKHAsIHNpeiwgIiUu
KnMhdXNlci4lLipzIiwgKGludCkgZG9tYWlubGVuLCB1c2VyZG9tYWluLCAoaW50KSB1c2VybGVu
LCB1c2VyaWQpOworICAgICAgICAgICAgfSBlbHNlIHsKKwkgICAgICAgIGxlbiA9IHNucHJpbnRm
KHAsIHNpeiwgInVzZXIuJS4qcyIsIChpbnQpIHRndC0+dXNlcmxlbiwgdGd0LT51c2VyKTsKKwkg
ICAgICAgIG1ib3huYW1lX2hpZXJzZXBfdG9pbnRlcm5hbCgmaHR0cGRfbmFtZXNwYWNlLCBwKzUs
IHRndC0+dXNlcmxlbik7CisgICAgICAgICAgICB9CiAJICAgIHAgKz0gbGVuOwogCSAgICBzaXog
LT0gbGVuOwogCX0KSW5kZXg6IGN5cnVzLWltYXBkLTIuNC0yLjQuMTcrY2FsZGF2fmJldGExMC50
ZXN0L2ltYXAvaHR0cF9kYXYuYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSBjeXJ1cy1pbWFwZC0yLjQtMi40LjE3
K2NhbGRhdn5iZXRhMTAudGVzdC5vcmlnL2ltYXAvaHR0cF9kYXYuYworKysgY3lydXMtaW1hcGQt
Mi40LTIuNC4xNytjYWxkYXZ+YmV0YTEwLnRlc3QvaW1hcC9odHRwX2Rhdi5jCkBAIC00NzE2LDcg
KzQ3MTYsNyBAQCBzdGF0aWMgaW50IHByaW5jaXBhbF9zZWFyY2goY2hhciAqbWJveG5hCiAgICAg
aWYgKCEocCA9IG1ib3huYW1lX2lzdXNlcm1haWxib3gobWJveG5hbWUsIDEpKSkgcmV0dXJuIDA7
CiAKICAgICBzdHJsY3B5KHVzZXJpZCwgcCwgTUFYX01BSUxCT1hfTkFNRSsxKTsKLSAgICBtYm94
bmFtZV9oaWVyc2VwX3RvZXh0ZXJuYWwoJmh0dHBkX25hbWVzcGFjZSwgdXNlcmlkLCAwKTsKKyAg
ICAvL21ib3huYW1lX2hpZXJzZXBfdG9leHRlcm5hbCgmaHR0cGRfbmFtZXNwYWNlLCB1c2VyaWQs
IDApOwogCiAgICAgZm9yIChzZWFyY2hfY3JpdCA9IChzdHJ1Y3Qgc2VhcmNoX2NyaXQgKikgZmN0
eC0+ZmlsdGVyX2NyaXQ7CiAJIHNlYXJjaF9jcml0OyBzZWFyY2hfY3JpdCA9IHNlYXJjaF9jcml0
LT5uZXh0KSB7Cg==
</data>        

          </attachment>
      

    </bug>

</bugzilla>