<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2036</bug_id>
          
          <creation_ts>2003-04-25 14:39 EDT</creation_ts>
          <short_desc>Cyrus::IMAP perl module &quot;needs&quot; STARTTLS support</short_desc>
          <delta_ts>2010-10-18 12:43:01 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>perl</component>
          <version>2.1.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P5</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rob Siemborski">rjs3@andrew.cmu.edu</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          <cc>brennan@columbia.edu</cc>
    
    <cc>darrell@garnix.org</cc>
    
    <cc>mail@roland-stuehmer.de</cc>
    
    <cc>patl@curl.com</cc>
    
    <cc>ro@TechFak.Uni-Bielefeld.DE</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-04-25 14:39:57 EDT</bug_when>
            <thetext>Trying to use the cyradm perl script with an IMAP server from Cyrus IMAPD
2.1.12 which enforces encryption with

sasl_minimum_layer:     56

I noticed that the perl module (unlike its Tcl precursor) doesn&apos;t support
the STARTTLS command, thus I cannot perform server administration with
cyradm or Cyrus::IMAP based scripts.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-04-25 14:40:18 EDT</bug_when>
            <thetext>Temporary Answer: don&apos;t do this, use Digest-MD5 or similar for administrative
operations.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rainer Orth">ro@TechFak.Uni-Bielefeld.DE</who>
            <bug_when>2003-04-25 14:45:54 EDT</bug_when>
            <thetext>I&apos;m currently using GSSAPI (unfortunately only with a test KDC, thus not really
appropriate for production use).  That&apos;s the primary reason for the
--with-auth=krb5 requirement (Bug 2035).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rainer Orth">ro@TechFak.Uni-Bielefeld.DE</who>
            <bug_when>2003-05-16 07:50:05 EDT</bug_when>
            <thetext>Created an attachment (id=191)
An initial implementation of STARTTLS support for Cyrus::IMAP

The attached patch implements this.  It is based on the Tcl cyradm/cyradm.c
implementation.  It&apos;s fully functional, though there may be some loose ends
(like the documentation strings not mentioning the new -tlskey and -notls
options in all applicable places).  This is primarily due to the fact that
they should depend on Cyrus::IMAP::HAVE_SSL.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Darrell Fuhriman">darrell@garnix.org</who>
            <bug_when>2004-10-25 13:19:57 EDT</bug_when>
            <thetext>Created an attachment (id=310)
Updated TLS support

Note: this patch depends on the imclient modifications submitted by Patrick
LoPresti for bug #2034.

See:
http://asg.web.cmu.edu/archive/message.php?mailbox=archive.cyrus-devel&amp;msg=765
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Derrick">shadow@andrew.cmu.edu</who>
            <bug_when>2005-04-11 01:45:34 EDT</bug_when>
            <thetext>*** Bug 2644 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Rosenbaum">lmr@ornl.gov</who>
            <bug_when>2006-01-17 14:07:51 EDT</bug_when>
            <thetext>I tried to use the patch on our site, and found that to make it work, the
Makefile.PL INC line also had to include the &quot;et&quot; directory, like so:

    &apos;INC&apos;     =&gt; &quot;-I../../lib -I../.. -I../../et $SASL_INC $OPENSSL_INC&quot;,

With that change, it worked fine.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">murch@andrew.cmu.edu</who>
            <bug_when>2006-02-07 13:57:44 EDT</bug_when>
            <thetext>Modified patch commited to 2.3 CVS</thetext>
          </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>191</attachid>
            <date>2003-05-16 07:50 EDT</date>
            <desc>An initial implementation of STARTTLS support for Cyrus::IMAP</desc>
            <filename>Cyrus::IMAP-starttls.udif</filename>
            <type>text/plain</type>
            <size>8891</size>
            <attacher>ro@TechFak.Uni-Bielefeld.DE</attacher>
            
              <data encoding="base64">VGh1IE1heSAxNSAxODo1NzozNyAyMDAzICBSYWluZXIgT3J0aCAgPHJvQFRlY2hGYWsuVW5pLUJp
ZWxlZmVsZC5ERT4KCgkqIHBlcmwvaW1hcC9JTUFQLnBtIChhdXRoZW50aWNhdGUpOiBIb25vciAt
dGxza2V5LCAtbm90bHMgb3B0aW9ucy4KCUludm9rZSBfc3RhcnR0bHMgaWYgT3BlblNTTCBpcyBh
dmFpbGFibGUsIHNlcnZlciBzdXBwb3J0cyBTVEFSVFRMUwoJYW5kIG5vdCBkaXNhYmxlZCBieSBj
bGllbnQuCglEb24ndCB0cnkgcGxhaW50ZXh0IGxvZ2luIGlmZiBMT0dJTkRJU0FCTEVELgoJKiBw
ZXJsL2ltYXAvSU1BUC54cyAoSEFWRV9TU0wsIGltY2xpZW50X19zdGFydHRscyk6IE5ldyBmdW5j
dGlvbnMuCgkqIHBlcmwvaW1hcC9NYWtlZmlsZS5QTCAoREVGSU5FKTogRGVmaW5lIEhBVkVfU1NM
IGlmIGF2YWlsYWJsZS4KCSogcGVybC9pbWFwL0lNQVAvU2hlbGwucG0gKHNoZWxsKTogSGFuZGxl
IHRsc2tleSwgbm90bHMgb3B0aW9ucy4KCShfc2NfYXV0aCk6IExpa2V3aXNlLiAgQWRhcHQgdXNh
Z2UgaWYgYXZhaWxhYmxlLgoJKiBwZXJsL2ltYXAvY3lyYWRtLnNoIChTWU5PUFNJUyk6IE1lbnRp
b24gLS10bHNrZXksIC0tbm90bHMKCW9wdGlvbnMuCgpJbmRleDogcGVybC9pbWFwL0lNQVAucG0K
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvY3lydXMvcGVybC9pbWFwL0lNQVAucG0sdgpy
ZXRyaWV2aW5nIHJldmlzaW9uIDEuMTcKZGlmZiAtdSAtcCAtcjEuMTcgSU1BUC5wbQotLS0gcGVy
bC9pbWFwL0lNQVAucG0JMTkgU2VwIDIwMDIgMTc6MjE6MDQgLTAwMDAJMS4xNworKysgcGVybC9p
bWFwL0lNQVAucG0JMTYgTWF5IDIwMDMgMDk6NTg6MDYgLTAwMDAKQEAgLTE3NCwxNiArMTc0LDM3
IEBAIHN1YiBfc3RyaW5naXplIHsKIHN1YiBhdXRoZW50aWNhdGUgewogICBteSAoJHNlbGYsICRm
aXJzdCkgPSBAXzsKICAgbXkgKCVvcHRzLCAkcmMpOworICBteSAoJHN0YXJ0dGxzLCAkbG9naW5k
aXNhYmxlZCkgPSAoMCwgMCk7CiAKICAgaWYgKGRlZmluZWQgJGZpcnN0ICYmCi0gICAgICAkZmly
c3QgPX4gL14tXHcrfE1lY2hhbmlzbXxTZXJ2aWNlfEF1dGh6fFVzZXJ8TWluc3NmfE1heHNzZnxQ
YXNzd29yZCQvKSB7CisgICAgICAkZmlyc3QgPX4gL14tXHcrfE1lY2hhbmlzbXxTZXJ2aWNlfEF1
dGh6fFVzZXJ8TWluc3NmfE1heHNzZnxQYXNzd29yZHxUbHNrZXl8Tm90bHMkLykgewogICAgICh1
bmRlZiwgJW9wdHMpID0gQF87Ci0gICAgZm9yZWFjaCAocXcobWVjaGFuaXNtIHNlcnZpY2UgYXV0
aHogdXNlciBtaW5zc2YgbWF4c3NmIHBhc3N3b3JkKSkgeworICAgIGZvcmVhY2ggKHF3KG1lY2hh
bmlzbSBzZXJ2aWNlIGF1dGh6IHVzZXIgbWluc3NmIG1heHNzZiBwYXNzd29yZCB0bHNrZXkgbm90
bHMpKSB7CiAgICAgICAkb3B0c3snLScgLiAkX30gPSAkb3B0c3t1Y2ZpcnN0KCRfKX0gaWYgIWRl
ZmluZWQoJG9wdHN7Jy0nIC4gJF99KTsKICAgICB9CiAgIH0gZWxzZSB7CiAgICAgKHVuZGVmLCAk
b3B0c3stbWVjaGFuaXNtfSwgJG9wdHN7LXNlcnZpY2V9LCAkb3B0c3stYXV0aHp9LCAkb3B0c3st
dXNlcn0sCi0gICAgICRvcHRzey1taW5zc2Z9LCAkb3B0c3stbWF4c3NmfSwgJG9wdHN7LXBhc3N3
b3JkfSkgPSBAXzsKKyAgICAgJG9wdHN7LW1pbnNzZn0sICRvcHRzey1tYXhzc2Z9LCAkb3B0c3st
cGFzc3dvcmR9LAorICAgICAkb3B0c3stdGxza2V5fSwgJG9wdHN7LW5vdGxzfSkgPSBAXzsKKyAg
fQorICBpZiAoSEFWRV9TU0wpIHsKKyAgICBpZiAoIWRlZmluZWQoJG9wdHN7LXRsc2tleX0pKSB7
CisgICAgICAkb3B0c3stdGxza2V5fSA9ICIiOworICAgIH0KKyAgICBpZiAoJG9wdHN7LW5vdGxz
fSkgeworICAgICAgJG9wdHN7LXRsc2tleX0gPSB1bmRlZjsKKyAgICB9CisgICAgJHNlbGYtPmFk
ZGNhbGxiYWNrKHstdHJpZ2dlciA9PiAnQ0FQQUJJTElUWScsCisJCQktY2FsbGJhY2sgPT4gc3Vi
IHtteSAlYSA9IEBfOworCQkJCQkgIG1hcCB7ICRzdGFydHRscyA9IDEKKwkJCQkJCSAgICBpZiAv
XlNUQVJUVExTJC9pOworCQkJCQkgICAgfQorCQkJCQkgIHNwbGl0KC8gLywgJGF7LXRleHR9KX19
KTsKKyAgICAkc2VsZi0+c2VuZCh1bmRlZiwgdW5kZWYsICdDQVBBQklMSVRZJyk7CisgICAgJHNl
bGYtPmFkZGNhbGxiYWNrKHstdHJpZ2dlciA9PiAnQ0FQQUJJTElUWSd9KTsKKyAgICBpZiAoJHN0
YXJ0dGxzICYmIGRlZmluZWQoJG9wdHN7LXRsc2tleX0pKSB7CisgICAgICAkc2VsZi0+X3N0YXJ0
dGxzKDEwLCAkb3B0c3stdGxza2V5fSwgJG9wdHN7LXRsc2tleX0pOworICAgIH0KICAgfQogICBp
ZiAoIWRlZmluZWQoJG9wdHN7LW1lY2hhbmlzbX0pKSB7CiAgICAgJG9wdHN7LW1lY2hhbmlzbX0g
PSAnJzsKQEAgLTIwNiw2ICsyMjcsMjAgQEAgc3ViIGF1dGhlbnRpY2F0ZSB7CiAgICAgJHJjID0g
JHNlbGYtPl9hdXRoZW50aWNhdGUoJG9wdHN7LW1lY2hhbmlzbX0sICRvcHRzey1zZXJ2aWNlfSwK
IAkJCSAgICAgICAkb3B0c3stYXV0aHp9LCAkb3B0c3stdXNlcn0sICRvcHRzey1wYXNzd29yZH0s
CiAJCQkgICAgICAgJG9wdHN7LW1pbnNzZn0sICRvcHRzey1tYXhzc2Z9KTsKKyAgfQorICBpZiAo
ISRyYykgeworICAgICRzZWxmLT5hZGRjYWxsYmFjayh7LXRyaWdnZXIgPT4gJ0NBUEFCSUxJVFkn
LAorCQkJLWNhbGxiYWNrID0+IHN1YiB7bXkgJWEgPSBAXzsKKwkJCQkJICBtYXAgeyAkbG9naW5k
aXNhYmxlZCA9IDEKKwkJCQkJCSAgICBpZiAvXkxPR0lORElTQUJMRUQkL2k7CisJCQkJCSAgICB9
CisJCQkJCSAgc3BsaXQoLyAvLCAkYXstdGV4dH0pfX0pOworICAgICRzZWxmLT5zZW5kKHVuZGVm
LCB1bmRlZiwgJ0NBUEFCSUxJVFknKTsKKyAgICAkc2VsZi0+YWRkY2FsbGJhY2soey10cmlnZ2Vy
ID0+ICdDQVBBQklMSVRZJ30pOworICAgIGlmICgkbG9naW5kaXNhYmxlZCkgeworICAgICAgd2Fy
biAiTG9naW4gZGlzYWJsZWQuXG4iOworICAgICAgcmV0dXJuIHVuZGVmOworICAgIH0KICAgfQog
ICAkb3B0c3stbWVjaGFuaXNtfSB8fD0gJ3BsYWluJzsKICAgaWYgKCEkcmMgJiYgJG9wdHN7LW1l
Y2hhbmlzbX0gPX4gLyhcYnxeKShwbGFpbnxsb2dpbikoJHxcYikvaSkgewpJbmRleDogcGVybC9p
bWFwL0lNQVAueHMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvY3lydXMvcGVybC9pbWFw
L0lNQVAueHMsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTgKZGlmZiAtdSAtcCAtcjEuMTggSU1B
UC54cwotLS0gcGVybC9pbWFwL0lNQVAueHMJMiBEZWMgMjAwMiAyMTowNToxMyAtMDAwMAkxLjE4
CisrKyBwZXJsL2ltYXAvSU1BUC54cwkxNiBNYXkgMjAwMyAwOTo1ODowNiAtMDAwMApAQCAtNDA1
LDYgKzQwNSw0MiBAQCBDT0RFOgogCSAgY2xpZW50LT5hdXRoZW50aWNhdGVkID0gMTsKIAkgIFNU
KDApID0gJnN2X3llczsKIAl9CisKK2ludAorSEFWRV9TU0woKQorUFBDT0RFOgorI2lmZGVmIEhB
VkVfU1NMCisJUkVUVkFMID0gMTsKKyNlbHNlCisJUkVUVkFMID0gMDsKKyNlbmRpZiAvKiBIQVZF
X1NTTCAqLworCitTViAqCitpbWNsaWVudF9fc3RhcnR0bHMoY2xpZW50LCB2ZXJpZnlkZXB0aCwg
dGxzX2NlcnRfZmlsZSwgdGxzX2tleV9maWxlKQorCUN5cnVzX0lNQVAgY2xpZW50CisJaW50IHZl
cmlmeWRlcHRoCisJY2hhciogdGxzX2NlcnRfZmlsZQorCWNoYXIqIHRsc19rZXlfZmlsZQorUFJF
SU5JVDoKKwlpbnQgcmM7CisJaW50IHRsc19sYXllcjsKK0NPREU6CisJU1QoMCkgPSBzdl9uZXdt
b3J0YWwoKTsKKworCS8qIElmIHRoZSB0bHNfe2NlcnQsIGtleX1fZmlsZSBwYXJhbWV0ZXJzIGFy
ZSB1bmRlZiwgc2V0IHRvIGJlIE5VTEwgKi8KKwlpZighU3ZPSyhTVCgyKSkpIHRsc19jZXJ0X2Zp
bGUgPSBOVUxMOworCWlmKCFTdk9LKFNUKDMpKSkgdGxzX2tleV9maWxlID0gTlVMTDsKKyNpZmRl
ZiBIQVZFX1NTTAorCXJjID0gaW1jbGllbnRfc3RhcnR0bHMoY2xpZW50LT5pbWNsaWVudCwgdmVy
aWZ5ZGVwdGgsCisJCQkgICAgICAgdGxzX2NlcnRfZmlsZSwgdGxzX2tleV9maWxlLCAmdGxzX2xh
eWVyKTsKKwlpZiAocmMpCisJICBTVCgwKSA9ICZzdl9ubzsKKwllbHNlIHsKKwkgIFNUKDApID0g
JnN2X3llczsKKwl9CisjZWxzZQorCVNUKDApID0gJnN2X25vOworI2VuZGlmIC8qIEhBVkVfU1NM
ICovCiAKIHZvaWQKIGltY2xpZW50X2FkZGNhbGxiYWNrKGNsaWVudCwgLi4uKQpJbmRleDogcGVy
bC9pbWFwL01ha2VmaWxlLlBMCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL2N5cnVzL3Bl
cmwvaW1hcC9NYWtlZmlsZS5QTCx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4xNQpkaWZmIC11IC1w
IC1yMS4xNSBNYWtlZmlsZS5QTAotLS0gcGVybC9pbWFwL01ha2VmaWxlLlBMCTIyIEp1bCAyMDAy
IDE2OjE2OjA3IC0wMDAwCTEuMTUKKysrIHBlcmwvaW1hcC9NYWtlZmlsZS5QTAkxNiBNYXkgMjAw
MyAwOTo1ODowNiAtMDAwMApAQCAtNDcsNiArNDcsNyBAQCBteSAkU0FTTF9MSUIgPSAkRU5We1NB
U0xfTElCfSB8fCAiLWxzYXNsCiAKIG15ICRPUEVOU1NMX0lOQyA9ICRFTlZ7T1BFTlNTTF9JTkN9
OwogbXkgJE9QRU5TU0xfTElCID0gJEVOVntPUEVOU1NMX0xJQn07CitteSAkSEFWRV9TU0wgPSAk
T1BFTlNTTF9MSUIgPyAiLURIQVZFX1NTTCIgOiAnJzsKIAogIyBTZWUgbGliL0V4dFV0aWxzL01h
a2VNYWtlci5wbSBmb3IgZGV0YWlscyBvZiBob3cgdG8gaW5mbHVlbmNlCiAjIHRoZSBjb250ZW50
cyBvZiB0aGUgTWFrZWZpbGUgdGhhdCBpcyB3cml0dGVuLgpAQCAtNjEsNyArNjIsNyBAQCBXcml0
ZU1ha2VmaWxlKCAKICAgICAnT0JKRUNUJyAgICA9PiAnSU1BUC5vJywKICAgICAnTVlFWFRMSUIn
ICA9PiAnLi4vLi4vbGliL2xpYmN5cnVzLmEnLAogICAgICdMSUJTJwk9PiBbIiRTQVNMX0xJQiAk
T1BFTlNTTF9MSUIgLWxzc2wgLWxjcnlwdG8iXSwKLSAgICAnREVGSU5FJwk9PiAnLURQRVJMX1BP
TExVVEUnLCAgICAgIyBlLmcuLCAnLURIQVZFX1NPTUVUSElORycgCisgICAgJ0RFRklORScJPT4g
Ii1EUEVSTF9QT0xMVVRFICRIQVZFX1NTTCIsICAgICAjIGUuZy4sICctREhBVkVfU09NRVRISU5H
JwogICAgICdJTkMnCT0+ICItSS4uLy4uL2xpYiAkU0FTTF9JTkMgJE9QRU5TU0xfSU5DIiwgCiAg
ICAgJ0VYRV9GSUxFUycgPT4gW2N5cmFkbV0sCiApOwpJbmRleDogcGVybC9pbWFwL2N5cmFkbS5z
aAo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9jeXJ1cy9wZXJsL2ltYXAvY3lyYWRtLnNo
LHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjExCmRpZmYgLXUgLXAgLXIxLjExIGN5cmFkbS5zaAot
LS0gcGVybC9pbWFwL2N5cmFkbS5zaAkxMiBTZXAgMjAwMiAxNTozNjoyMSAtMDAwMAkxLjExCisr
KyBwZXJsL2ltYXAvY3lyYWRtLnNoCTE2IE1heSAyMDAzIDA5OjU4OjA2IC0wMDAwCkBAIC01NCw3
ICs1NCw4IEBAIGN5cmFkbSAtIEN5cnVzIGFkbWluaXN0cmF0aW9uIHNoZWxsLCBhbHQKID1oZWFk
MSBTWU5PUFNJUwogCiAgICQgY3lyYWRtIFstLXVzZXIgdXNlcl0gWy0tW25vXXJjXSBbLS1zeXN0
ZW1yYyBmaWxlXSBbLS11c2VycmMgZmlsZV0gXAotICA+IFstLXBvcnQgbl0gWy0tYXV0aCBtZWNo
YW5pc21dIFstLXNlcnZlcl0gc2VydmVyCisgID4gWy0tcG9ydCBuXSBbLS1hdXRoIG1lY2hhbmlz
bV0gWy0tdGxza2V5IGtleWZpbGVdIFstLW5vdGxzXSBcCisgID4gWy0tc2VydmVyXSBzZXJ2ZXIK
IAogYnV0IHBvc3NpYmx5CiAKSW5kZXg6IHBlcmwvaW1hcC9JTUFQL1NoZWxsLnBtCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0KUkNTIGZpbGU6IC9jdnMvc3JjL2N5cnVzL3BlcmwvaW1hcC9JTUFQL1NoZWxsLnBtLHYKcmV0
cmlldmluZyByZXZpc2lvbiAxLjIzCmRpZmYgLXUgLXAgLXIxLjIzIFNoZWxsLnBtCi0tLSBwZXJs
L2ltYXAvSU1BUC9TaGVsbC5wbQkyIERlYyAyMDAyIDE5OjQ1OjA5IC0wMDAwCTEuMjMKKysrIHBl
cmwvaW1hcC9JTUFQL1NoZWxsLnBtCTE2IE1heSAyMDAzIDA5OjU4OjA2IC0wMDAwCkBAIC00MTks
OSArNDE5LDEwIEBAIHN1YiBydW4gewogIyAoSXQncyBub3QgYXMgdHJpdmlhbCBhcyBydW4oKSBi
ZWNhdXNlIGl0IGRvZXMgdGhpbmdzIGV4cGVjdGVkIG9mIHN0YW5kYWxvbmUKICMgcHJvZ3JhbXMs
IGFzIG9wcG9zZWQgdG8gdGhpbmdzIGV4cGVjdGVkIGZyb20gd2l0aGluIGEgcHJvZ3JhbS4pCiBz
dWIgc2hlbGwgewotICBteSAoJHNlcnZlciwgJHBvcnQsICRhdXRoeiwgJGF1dGgsICRzeXN0ZW1y
YywgJHVzZXJyYywgJGRvcmMsICRtZWNoLCAkcHcpID0KKyAgbXkgKCRzZXJ2ZXIsICRwb3J0LCAk
YXV0aHosICRhdXRoLCAkc3lzdGVtcmMsICR1c2VycmMsICRkb3JjLCAkbWVjaCwgJHB3LAorICAg
ICAgJHRsc2tleSwgJG5vdGxzKSA9CiAgICAgKCcnLCAxNDMsIHVuZGVmLCAkRU5We1VTRVJ9IHx8
ICRFTlZ7TE9HTkFNRX0sICcvdXNyL2xvY2FsL2V0Yy9jeXJhZG1yYy5wbCcsCi0gICAgICIkRU5W
e0hPTUV9Ly5jeXJhZG1yYy5wbCIsIDEsIHVuZGVmLCB1bmRlZik7CisgICAgICIkRU5We0hPTUV9
Ly5jeXJhZG1yYy5wbCIsIDEsIHVuZGVmLCB1bmRlZiwgIiIsIHVuZGVmKTsKICAgR2V0T3B0aW9u
cygndXNlcnx1PXMnID0+IFwkYXV0aCwKIAkgICAgICdhdXRoenx1PXMnID0+IFwkYXV0aHosCiAJ
ICAgICAncmN8ciEnID0+IFwkZG9yYywKQEAgLTQzMSw2ICs0MzIsOCBAQCBzdWIgc2hlbGwgewog
CSAgICAgJ3BvcnR8cD1pJyA9PiBcJHBvcnQsCiAJICAgICAnYXV0aHxhPXMnID0+IFwkbWVjaCwK
IAkgICAgICdwYXNzd29yZHx1PXMnID0+IFwkcHcsCisJICAgICAndGxza2V5fHQ9cycgPT4gXCR0
bHNrZXksCisJICAgICAnbm90bHMnID0+IFwkbm90bHMKIAkgICAgKTsKICAgaWYgKCRzZXJ2ZXIg
bmUgJycgJiYgQEFSR1YpIHsKICAgICBkaWUgImN5cmFkbTogbWF5IG5vdCBzcGVjaWZ5IHNlcnZl
ciBib3RoIHdpdGggLS1zZXJ2ZXIgYW5kIGJhcmUgYXJnXG4iOwpAQCAtNDQ4LDcgKzQ1MSw4IEBA
IHN1YiBzaGVsbCB7CiAJCQkgIC1jYWxsYmFjayA9PiBcJl9jYl9lb2YsCiAJCQkgIC1yb2NrID0+
IFwkY3lyYWRtfSk7CiAgICAgJGN5cmFkbS0+YXV0aGVudGljYXRlKC1hdXRoeiA9PiAkYXV0aHos
IC11c2VyID0+ICRhdXRoLAotCQkJICAtbWVjaGFuaXNtID0+ICRtZWNoLCAtcGFzc3dvcmQgPT4g
JHB3KQorCQkJICAtbWVjaGFuaXNtID0+ICRtZWNoLCAtcGFzc3dvcmQgPT4gJHB3LAorCQkJICAt
dGxza2V5ID0+ICR0bHNrZXksIC1ub3RscyA9PiAkbm90bHMpCiAgICAgICBvciBkaWUgImN5cmFk
bTogY2Fubm90IGF1dGhlbnRpY2F0ZSB0byBzZXJ2ZXIgd2l0aCAkbWVjaCBhcyAkYXV0aFxuIjsK
ICAgfQogICBteSAkZnN0ayA9IFsqU1RESU4sICpTVERPVVQsICpTVERFUlJdOwpAQCAtNzEyLDYg
KzcxNiwyMCBAQCBzdWIgX3NjX2F1dGggewogICAgICAgJHdhbnQgPSAnLXNlcnZpY2UnOwogICAg
ICAgbmV4dDsKICAgICB9CisgICAgaWYgKEN5cnVzOjpJTUFQOjpIQVZFX1NTTCkgeworICAgICAg
aWYgKCRvcHQgbmUgJycgJiYgJy10bHNrZXknID1+IC9eXFEkb3B0LyB8fCAkb3B0IGVxICctLXRs
c2tleScpIHsKKwkkd2FudCA9ICctdGxza2V5JzsKKwluZXh0OworICAgICAgfQorICAgICAgaWYg
KCRvcHQgbmUgJycgJiYgJy1ub3RscycgPX4gL15cUSRvcHQvIHx8ICRvcHQgZXEgJy0tbm90bHMn
KSB7CisJJHdhbnQgPSAnLW5vdGxzJzsKKwluZXh0OworICAgICAgfQorICAgICAgaWYgKCRvcHQg
PX4gL14tLykgeworCWRpZSAidXNhZ2U6IGF1dGhlbnRpY2F0ZSBbLW1pbnNzZiBOXSBbLW1heHNz
ZiBOXSBbLW1lY2hhbmlzbXMgU1RSXVxuIi4KKwkgICAgIiAgICAgICAgICAgICAgICAgICAgWy1z
ZXJ2aWNlIG5hbWVdIFstdGxza2V5IGtleWZpbGVdIFstbm90bHNdIFt1c2VyXVxuIjsKKyAgICAg
IH0KKyAgICB9CiAgICAgaWYgKCRvcHQgPX4gL14tLykgewogICAgICAgZGllICJ1c2FnZTogYXV0
aGVudGljYXRlIFstbWluc3NmIE5dIFstbWF4c3NmIE5dIFstbWVjaGFuaXNtcyBTVFJdXG4iLgog
CSAgIiAgICAgICAgICAgICAgICAgICAgWy1zZXJ2aWNlIG5hbWVdIFt1c2VyXVxuIjsKQEAgLTcy
Myw4ICs3NDEsMTMgQEAgc3ViIF9zY19hdXRoIHsKICAgfQogICBwdXNoKEBuYXJndiwgQGFyZ3Yp
OwogICBpZiAoQG5hcmd2ID4gMSkgewotICAgIGRpZSAidXNhZ2U6IGF1dGhlbnRpY2F0ZSBbLW1p
bnNzZiBOXSBbLW1heHNzZiBOXSBbLW1lY2hhbmlzbXMgU1RSXVxuIi4KLSAgICAgICAgIiAgICAg
ICAgICAgICAgICAgICAgWy1zZXJ2aWNlIG5hbWVdIFt1c2VyXVxuIjsKKyAgICBpZiAoQ3lydXM6
OklNQVA6OkhBVkVfU1NMKSB7CisgICAgICBkaWUgInVzYWdlOiBhdXRoZW50aWNhdGUgWy1taW5z
c2YgTl0gWy1tYXhzc2YgTl0gWy1tZWNoYW5pc21zIFNUUl1cbiIuCisgICAgICAgICAgIiAgICAg
ICAgICAgICAgICAgICAgWy1zZXJ2aWNlIG5hbWVdIFstdGxza2V5IGtleWZpbGVdIFstbm90bHNd
IFt1c2VyXVxuIjsKKyAgICB9IGVsc2UgeworICAgICAgZGllICJ1c2FnZTogYXV0aGVudGljYXRl
IFstbWluc3NmIE5dIFstbWF4c3NmIE5dIFstbWVjaGFuaXNtcyBTVFJdXG4iLgorICAgICAgICAg
ICIgICAgICAgICAgICAgICAgICAgIFstc2VydmljZSBuYW1lXSBbdXNlcl1cbiI7CisgICAgfQog
ICB9CiAgIGlmIChAbmFyZ3YpIHsKICAgICAkb3B0c3stdXNlcn0gPSBzaGlmdChAbmFyZ3YpOwo=
</data>        

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>310</attachid>
            <date>2004-10-25 13:19 EDT</date>
            <desc>Updated TLS support</desc>
            <filename>cyrus-tls.patch</filename>
            <type>text/plain</type>
            <size>8157</size>
            <attacher>darrell@garnix.org</attacher>
            
              <data encoding="base64">LS0tIGN5cnVzLWltYXBkLTIuMi44L3BlcmwvaW1hcC9jeXJhZG0uc2gJMjAwNC0wMS0xNSAwNjoz
NTozNC4wMDAwMDAwMDAgLTA4MDAKKysrIGN5cnVzLWltYXBkLTIuMi44Lm5ldy9wZXJsL2ltYXAv
Y3lyYWRtLnNoCTIwMDQtMTAtMjIgMTY6MTg6NTQuMDAwMDAwMDAwIC0wNzAwCkBAIC01NCw3ICs1
NCw4IEBACiA9aGVhZDEgU1lOT1BTSVMKIAogICAkIGN5cmFkbSBbLS11c2VyIHVzZXJdIFstLVtu
b11yY10gWy0tc3lzdGVtcmMgZmlsZV0gWy0tdXNlcnJjIGZpbGVdIFwKLSAgPiBbLS1wb3J0IG5d
IFstLWF1dGggbWVjaGFuaXNtXSBbLS1zZXJ2ZXJdIHNlcnZlcgorICA+IFstLXBvcnQgbl0gWy0t
YXV0aCBtZWNoYW5pc21dIFstLXRsc2tleSBrZXlmaWxlXSBbLS1ub3Rsc10gXAorICA+IFstLXNl
cnZlcl0gc2VydmVyCiAKIGJ1dCBwb3NzaWJseQogCmRpZmYgLXJ1IGN5cnVzLWltYXBkLTIuMi44
L3BlcmwvaW1hcC9JTUFQL1NoZWxsLnBtIGN5cnVzLWltYXBkLTIuMi44Lm5ldy9wZXJsL2ltYXAv
SU1BUC9TaGVsbC5wbQotLS0gY3lydXMtaW1hcGQtMi4yLjgvcGVybC9pbWFwL0lNQVAvU2hlbGwu
cG0JMjAwNC0wMS0xNSAwNjozNTozNS4wMDAwMDAwMDAgLTA4MDAKKysrIGN5cnVzLWltYXBkLTIu
Mi44Lm5ldy9wZXJsL2ltYXAvSU1BUC9TaGVsbC5wbQkyMDA0LTEwLTIyIDE2OjE4OjU0LjAwMDAw
MDAwMCAtMDcwMApAQCAtNDI4LDkgKzQyOCwxMCBAQAogIyAoSXQncyBub3QgYXMgdHJpdmlhbCBh
cyBydW4oKSBiZWNhdXNlIGl0IGRvZXMgdGhpbmdzIGV4cGVjdGVkIG9mIHN0YW5kYWxvbmUKICMg
cHJvZ3JhbXMsIGFzIG9wcG9zZWQgdG8gdGhpbmdzIGV4cGVjdGVkIGZyb20gd2l0aGluIGEgcHJv
Z3JhbS4pCiBzdWIgc2hlbGwgewotICBteSAoJHNlcnZlciwgJHBvcnQsICRhdXRoeiwgJGF1dGgs
ICRzeXN0ZW1yYywgJHVzZXJyYywgJGRvcmMsICRtZWNoLCAkcHcpID0KKyAgbXkgKCRzZXJ2ZXIs
ICRwb3J0LCAkYXV0aHosICRhdXRoLCAkc3lzdGVtcmMsICR1c2VycmMsICRkb3JjLCAkbWVjaCwg
JHB3LAorICAgICAgJHRsc2tleSwgJG5vdGxzKSA9CiAgICAgKCcnLCAxNDMsIHVuZGVmLCAkRU5W
e1VTRVJ9IHx8ICRFTlZ7TE9HTkFNRX0sICcvdXNyL2xvY2FsL2V0Yy9jeXJhZG1yYy5wbCcsCi0g
ICAgICIkRU5We0hPTUV9Ly5jeXJhZG1yYy5wbCIsIDEsIHVuZGVmLCB1bmRlZik7CisgICAgICIk
RU5We0hPTUV9Ly5jeXJhZG1yYy5wbCIsIDEsIHVuZGVmLCB1bmRlZiwgIiIsIHVuZGVmKTsKICAg
R2V0T3B0aW9ucygndXNlcnx1PXMnID0+IFwkYXV0aCwKIAkgICAgICdhdXRoenx6PXMnID0+IFwk
YXV0aHosCiAJICAgICAncmN8ciEnID0+IFwkZG9yYywKQEAgLTQ0MCw2ICs0NDEsOCBAQAogCSAg
ICAgJ3BvcnR8cD1pJyA9PiBcJHBvcnQsCiAJICAgICAnYXV0aHxhPXMnID0+IFwkbWVjaCwKIAkg
ICAgICdwYXNzd29yZHx3PXMnID0+IFwkcHcsCisgIAkgICAgICd0bHNrZXl8dD1zJyA9PiBcJHRs
c2tleSwKKyAgCSAgICAgJ25vdGxzJyA9PiBcJG5vdGxzLAogCSAgICAgJ2hlbHB8aCcgPT4gc3Vi
IHsgY3lyYWRtX3VzYWdlKCk7IGV4aXQoMCk7IH0KIAkgICAgKTsKICAgaWYgKCRzZXJ2ZXIgbmUg
JycgJiYgQEFSR1YpIHsKQEAgLTQ1OCw3ICs0NjEsOCBAQAogCQkJICAtY2FsbGJhY2sgPT4gXCZf
Y2JfZW9mLAogCQkJICAtcm9jayA9PiBcJGN5cmFkbX0pOwogICAgICRjeXJhZG0tPmF1dGhlbnRp
Y2F0ZSgtYXV0aHogPT4gJGF1dGh6LCAtdXNlciA9PiAkYXV0aCwKLQkJCSAgLW1lY2hhbmlzbSA9
PiAkbWVjaCwgLXBhc3N3b3JkID0+ICRwdykKKwkJCSAgLW1lY2hhbmlzbSA9PiAkbWVjaCwgLXBh
c3N3b3JkID0+ICRwdywKKwkJCSAgLXRsc2tleSA9PiAkdGxza2V5LCAtbm90bHMgPT4gJG5vdGxz
KQogICAgICAgb3IgZGllICJjeXJhZG06IGNhbm5vdCBhdXRoZW50aWNhdGUgdG8gc2VydmVyIHdp
dGggJG1lY2ggYXMgJGF1dGhcbiI7CiAgIH0KICAgbXkgJGZzdGsgPSBbKlNURElOLCAqU1RET1VU
LCAqU1RERVJSXTsKQEAgLTc2NSw2ICs3NjksMjAgQEAKICAgICAgICR3YW50ID0gJy1zZXJ2aWNl
JzsKICAgICAgIG5leHQ7CiAgICAgfQorICAgIGlmIChDeXJ1czo6SU1BUDo6aW1jbGllbnRfaGF2
ZXRscygpKSB7CisgICAgICBpZiAoJG9wdCBuZSAnJyAmJiAnLXRsc2tleScgPX4gL15cUSRvcHQv
IHx8ICRvcHQgZXEgJy0tdGxza2V5JykgeworCSR3YW50ID0gJy10bHNrZXknOworCW5leHQ7Cisg
ICAgICB9CisgICAgICBpZiAoJG9wdCBuZSAnJyAmJiAnLW5vdGxzJyA9fiAvXlxRJG9wdC8gfHwg
JG9wdCBlcSAnLS1ub3RscycpIHsKKwkkd2FudCA9ICctbm90bHMnOworCW5leHQ7CisgICAgICB9
CisgICAgICBpZiAoJG9wdCA9fiAvXi0vKSB7CisJZGllICJ1c2FnZTogYXV0aGVudGljYXRlIFst
bWluc3NmIE5dIFstbWF4c3NmIE5dIFstbWVjaGFuaXNtcyBTVFJdXG4iLgorCSAgICAiICAgICAg
ICAgICAgICAgICAgICBbLXNlcnZpY2UgbmFtZV0gWy10bHNrZXkga2V5ZmlsZV0gWy1ub3Rsc10g
W3VzZXJdXG4iOworICAgICAgfQorICAgIH0KICAgICBpZiAoJG9wdCA9fiAvXi0vKSB7CiAgICAg
ICBkaWUgInVzYWdlOiBhdXRoZW50aWNhdGUgWy1taW5zc2YgTl0gWy1tYXhzc2YgTl0gWy1tZWNo
YW5pc21zIFNUUl1cbiIuCiAJICAiICAgICAgICAgICAgICAgICAgICBbLXNlcnZpY2UgbmFtZV0g
W3VzZXJdXG4iOwpAQCAtNzc2LDggKzc5NCwxMyBAQAogICB9CiAgIHB1c2goQG5hcmd2LCBAYXJn
dik7CiAgIGlmIChAbmFyZ3YgPiAxKSB7Ci0gICAgZGllICJ1c2FnZTogYXV0aGVudGljYXRlIFst
bWluc3NmIE5dIFstbWF4c3NmIE5dIFstbWVjaGFuaXNtcyBTVFJdXG4iLgotICAgICAgICAiICAg
ICAgICAgICAgICAgICAgICBbLXNlcnZpY2UgbmFtZV0gW3VzZXJdXG4iOworICAgIGlmIChDeXJ1
czo6SU1BUDo6aW1jbGllbnRfaGF2ZXRscygpKSB7CisgICAgICBkaWUgInVzYWdlOiBhdXRoZW50
aWNhdGUgWy1taW5zc2YgTl0gWy1tYXhzc2YgTl0gWy1tZWNoYW5pc21zIFNUUl1cbiIuCisgICAg
ICAgICAgIiAgICAgICAgICAgICAgICAgICAgWy1zZXJ2aWNlIG5hbWVdIFstdGxza2V5IGtleWZp
bGVdIFstbm90bHNdIFt1c2VyXVxuIjsKKyAgICB9IGVsc2UgeworICAgICAgZGllICJ1c2FnZTog
YXV0aGVudGljYXRlIFstbWluc3NmIE5dIFstbWF4c3NmIE5dIFstbWVjaGFuaXNtcyBTVFJdXG4i
LgorICAgICAgICAgICIgICAgICAgICAgICAgICAgICAgIFstc2VydmljZSBuYW1lXSBbdXNlcl1c
biI7CisgICAgfQogICB9CiAgIGlmIChAbmFyZ3YpIHsKICAgICAkb3B0c3stdXNlcn0gPSBzaGlm
dChAbmFyZ3YpOwpkaWZmIC1ydSBjeXJ1cy1pbWFwZC0yLjIuOC9wZXJsL2ltYXAvSU1BUC5wbSBj
eXJ1cy1pbWFwZC0yLjIuOC5uZXcvcGVybC9pbWFwL0lNQVAucG0KLS0tIGN5cnVzLWltYXBkLTIu
Mi44L3BlcmwvaW1hcC9JTUFQLnBtCTIwMDMtMTAtMjIgMTE6NTA6MTguMDAwMDAwMDAwIC0wNzAw
CisrKyBjeXJ1cy1pbWFwZC0yLjIuOC5uZXcvcGVybC9pbWFwL0lNQVAucG0JMjAwNC0xMC0yNSAw
OTo1NzoxMC44MDkxNDY2NTMgLTA3MDAKQEAgLTE5NiwxNiArMTk2LDQzIEBACiBzdWIgYXV0aGVu
dGljYXRlIHsKICAgbXkgKCRzZWxmLCAkZmlyc3QpID0gQF87CiAgIG15ICglb3B0cywgJHJjKTsK
KyAgbXkgKCRzdGFydHRscywgJGxvZ2luZGlzYWJsZWQpID0gKDAsIDApOwogCiAgIGlmIChkZWZp
bmVkICRmaXJzdCAmJgotICAgICAgJGZpcnN0ID1+IC9eLVx3K3xNZWNoYW5pc218U2VydmljZXxB
dXRoenxVc2VyfE1pbnNzZnxNYXhzc2Z8UGFzc3dvcmQkLykgeworICAgICAgJGZpcnN0ID1+IC9e
LVx3K3xNZWNoYW5pc218U2VydmljZXxBdXRoenxVc2VyfE1pbnNzZnxNYXhzc2Z8UGFzc3dvcmR8
VGxza2V5fE5vdGxzfENBZmlsZXxDQXBhdGgkLykgewogICAgICh1bmRlZiwgJW9wdHMpID0gQF87
Ci0gICAgZm9yZWFjaCAocXcobWVjaGFuaXNtIHNlcnZpY2UgYXV0aHogdXNlciBtaW5zc2YgbWF4
c3NmIHBhc3N3b3JkKSkgeworICAgIGZvcmVhY2ggKHF3KG1lY2hhbmlzbSBzZXJ2aWNlIGF1dGh6
IHVzZXIgbWluc3NmIG1heHNzZiBwYXNzd29yZCB0bHNrZXkgbm90bHMpKSB7CiAgICAgICAkb3B0
c3snLScgLiAkX30gPSAkb3B0c3t1Y2ZpcnN0KCRfKX0gaWYgIWRlZmluZWQoJG9wdHN7Jy0nIC4g
JF99KTsKICAgICB9CiAgIH0gZWxzZSB7CiAgICAgKHVuZGVmLCAkb3B0c3stbWVjaGFuaXNtfSwg
JG9wdHN7LXNlcnZpY2V9LCAkb3B0c3stYXV0aHp9LCAkb3B0c3stdXNlcn0sCi0gICAgICRvcHRz
ey1taW5zc2Z9LCAkb3B0c3stbWF4c3NmfSwgJG9wdHN7LXBhc3N3b3JkfSkgPSBAXzsKKyAgICAg
JG9wdHN7LW1pbnNzZn0sICRvcHRzey1tYXhzc2Z9LCAkb3B0c3stcGFzc3dvcmR9LAorICAgICAk
b3B0c3stdGxza2V5fSwgJG9wdHN7LW5vdGxzfSwgJG9wdHN7LWNhZmlsZX0sICRvcHRzey1jYXBh
dGh9KSA9IEBfOworICB9CisgIGlmIChoYXZldGxzKCkpIHsKKyAgICBpZiAoIWRlZmluZWQoJG9w
dHN7LXRsc2tleX0pKSB7CisgICAgICAkb3B0c3stdGxza2V5fSA9ICIiOworICAgIH0KKyAgICBp
ZiAoIWRlZmluZWQoJG9wdHN7LWNhZmlsZX0pKSB7CisgICAgICAkb3B0c3stY2FmaWxlfSA9ICIi
OworICAgIH0KKyAgICBpZiAoIWRlZmluZWQoJG9wdHN7LWNhcGF0aH0pKSB7CisgICAgICAkb3B0
c3stY2FwYXRofSA9ICIiOworICAgIH0KKyAgICBpZiAoJG9wdHN7LW5vdGxzfSkgeworICAgICAg
JG9wdHN7LXRsc2tleX0gPSB1bmRlZjsKKyAgICB9CisgICAgJHNlbGYtPmFkZGNhbGxiYWNrKHst
dHJpZ2dlciA9PiAnQ0FQQUJJTElUWScsCisJCQktY2FsbGJhY2sgPT4gc3ViIHtteSAlYSA9IEBf
OworCQkJCQkgIG1hcCB7ICRzdGFydHRscyA9IDEKKwkJCQkJCSAgICBpZiAvXlNUQVJUVExTJC9p
OworCQkJCQkgICAgfQorCQkJCQkgIHNwbGl0KC8gLywgJGF7LXRleHR9KX19KTsKKyAgICAkc2Vs
Zi0+c2VuZCh1bmRlZiwgdW5kZWYsICdDQVBBQklMSVRZJyk7CisgICAgJHNlbGYtPmFkZGNhbGxi
YWNrKHstdHJpZ2dlciA9PiAnQ0FQQUJJTElUWSd9KTsKKyAgICBpZiAoJHN0YXJ0dGxzICYmIGRl
ZmluZWQoJG9wdHN7LXRsc2tleX0pKSB7CisgICAgICAkc2VsZi0+X3N0YXJ0dGxzKCRvcHRzey10
bHNrZXl9LCAkb3B0c3stdGxza2V5fSwgJG9wdHN7LWNhZmlsZX0sICRvcHRzey1jYXBhdGh9KTsK
KyAgICB9CiAgIH0KICAgaWYgKCFkZWZpbmVkKCRvcHRzey1tZWNoYW5pc219KSkgewogICAgICRv
cHRzey1tZWNoYW5pc219ID0gJyc7CkBAIC0yMjksNiArMjU2LDIwIEBACiAJCQkgICAgICAgJG9w
dHN7LWF1dGh6fSwgJG9wdHN7LXVzZXJ9LCAkb3B0c3stcGFzc3dvcmR9LAogCQkJICAgICAgICRv
cHRzey1taW5zc2Z9LCAkb3B0c3stbWF4c3NmfSk7CiAgIH0KKyAgaWYgKCEkcmMpIHsKKyAgICAk
c2VsZi0+YWRkY2FsbGJhY2soey10cmlnZ2VyID0+ICdDQVBBQklMSVRZJywKKwkJCS1jYWxsYmFj
ayA9PiBzdWIge215ICVhID0gQF87CisJCQkJCSAgbWFwIHsgJGxvZ2luZGlzYWJsZWQgPSAxCisJ
CQkJCQkgICAgaWYgL15MT0dJTkRJU0FCTEVEJC9pOworCQkJCQkgICAgfQorCQkJCQkgIHNwbGl0
KC8gLywgJGF7LXRleHR9KX19KTsKKyAgICAkc2VsZi0+c2VuZCh1bmRlZiwgdW5kZWYsICdDQVBB
QklMSVRZJyk7CisgICAgJHNlbGYtPmFkZGNhbGxiYWNrKHstdHJpZ2dlciA9PiAnQ0FQQUJJTElU
WSd9KTsKKyAgICBpZiAoJGxvZ2luZGlzYWJsZWQpIHsKKyAgICAgIHdhcm4gIkxvZ2luIGRpc2Fi
bGVkLlxuIjsKKyAgICAgIHJldHVybiB1bmRlZjsKKyAgICB9CisgIH0KICAgJG9wdHN7LW1lY2hh
bmlzbX0gfHw9ICdwbGFpbic7CiAgIGlmICghJHJjICYmICRvcHRzey1tZWNoYW5pc219ID1+IC8o
XGJ8XikocGxhaW58bG9naW4pKCR8XGIpL2kpIHsKICAgICAkb3B0c3stdXNlcn0gPSBnZXRsb2dp
biBpZiAhZGVmaW5lZCgkb3B0c3stdXNlcn0pOwpkaWZmIC1ydSBjeXJ1cy1pbWFwZC0yLjIuOC9w
ZXJsL2ltYXAvSU1BUC54cyBjeXJ1cy1pbWFwZC0yLjIuOC5uZXcvcGVybC9pbWFwL0lNQVAueHMK
LS0tIGN5cnVzLWltYXBkLTIuMi44L3BlcmwvaW1hcC9JTUFQLnhzCTIwMDMtMTEtMjUgMTM6Mjg6
MjMuMDAwMDAwMDAwIC0wODAwCisrKyBjeXJ1cy1pbWFwZC0yLjIuOC5uZXcvcGVybC9pbWFwL0lN
QVAueHMJMjAwNC0xMC0yMiAxNjoyNjowNS4wMDAwMDAwMDAgLTA3MDAKQEAgLTU3LDYgKzU3LDcg
QEAKICNpbmNsdWRlICJ4bWFsbG9jLmgiCiAKICNpbmNsdWRlICJjeXJwZXJsLmgiCisjaW5jbHVk
ZSAiY29uZmlnLmgiCiAKIHR5cGVkZWYgc3RydWN0IHhzY3lydXMgKkN5cnVzX0lNQVA7CiAKQEAg
LTQxNyw2ICs0MTgsNDQgQEAKIAkgIFNUKDApID0gJnN2X3llczsKIAl9CiAKK2ludAoraW1jbGll
bnRfaGF2ZXRscygpCitDT0RFOgorI2lmZGVmIEhBVkVfU1NMCisJUkVUVkFMID0gMTsKKyNlbHNl
CisJUkVUVkFMID0gMDsKKyNlbmRpZiAvKiBIQVZFX1NTTCAqLworT1VUUFVUOgorCVJFVFZBTAor
CitTViAqCitpbWNsaWVudF9fc3RhcnR0bHMoY2xpZW50LCB0bHNfY2VydF9maWxlLCB0bHNfa2V5
X2ZpbGUsIENBZmlsZSwgQ0FwYXRoKQorCUN5cnVzX0lNQVAgY2xpZW50CisJY2hhciogdGxzX2Nl
cnRfZmlsZQorCWNoYXIqIHRsc19rZXlfZmlsZQorICAgICAgICBjaGFyKiBDQWZpbGUKKyAgICAg
ICAgY2hhciogQ0FwYXRoCitQUkVJTklUOgorCWludCByYzsKKwlpbnQgdGxzX2xheWVyOworQ09E
RToKKwlTVCgwKSA9IHN2X25ld21vcnRhbCgpOworCisJLyogSWYgdGhlIHRsc197Y2VydCwga2V5
fV9maWxlIHBhcmFtZXRlcnMgYXJlIHVuZGVmLCBzZXQgdG8gYmUgTlVMTCAqLworCWlmKCFTdk9L
KFNUKDIpKSkgdGxzX2NlcnRfZmlsZSA9IE5VTEw7CisJaWYoIVN2T0soU1QoMykpKSB0bHNfa2V5
X2ZpbGUgPSBOVUxMOworI2lmZGVmIEhBVkVfU1NMCisJcmMgPSBpbWNsaWVudF9zdGFydHRscyhj
bGllbnQtPmltY2xpZW50LCB0bHNfY2VydF9maWxlLCB0bHNfa2V5X2ZpbGUsIENBZmlsZSwgQ0Fw
YXRoKTsKKwlpZiAocmMpCisJICBTVCgwKSA9ICZzdl9ubzsKKwllbHNlIHsKKwkgIFNUKDApID0g
JnN2X3llczsKKwl9CisjZWxzZQorCVNUKDApID0gJnN2X25vOworI2VuZGlmIC8qIEhBVkVfU1NM
ICovCisKIHZvaWQKIGltY2xpZW50X2FkZGNhbGxiYWNrKGNsaWVudCwgLi4uKQogCUN5cnVzX0lN
QVAgY2xpZW50CmRpZmYgLXJ1IGN5cnVzLWltYXBkLTIuMi44L3BlcmwvaW1hcC9NYWtlZmlsZS5Q
TCBjeXJ1cy1pbWFwZC0yLjIuOC5uZXcvcGVybC9pbWFwL01ha2VmaWxlLlBMCi0tLSBjeXJ1cy1p
bWFwZC0yLjIuOC9wZXJsL2ltYXAvTWFrZWZpbGUuUEwJMjAwMy0xMC0yMiAxMTo1MDoxOC4wMDAw
MDAwMDAgLTA3MDAKKysrIGN5cnVzLWltYXBkLTIuMi44Lm5ldy9wZXJsL2ltYXAvTWFrZWZpbGUu
UEwJMjAwNC0xMC0yMiAxNjoxODo1NC4wMDAwMDAwMDAgLTA3MDAKQEAgLTEsNSArMSw0IEBACiAj
IAotIyBDb3B5cmlnaHQgKGMpIDIwMDAgQ2FybmVnaWUgTWVsbG9uIFVuaXZlcnNpdHkuICBBbGwg
cmlnaHRzIHJlc2VydmVkLgogIwogIyBSZWRpc3RyaWJ1dGlvbiBhbmQgdXNlIGluIHNvdXJjZSBh
bmQgYmluYXJ5IGZvcm1zLCB3aXRoIG9yIHdpdGhvdXQKICMgbW9kaWZpY2F0aW9uLCBhcmUgcGVy
bWl0dGVkIHByb3ZpZGVkIHRoYXQgdGhlIGZvbGxvd2luZyBjb25kaXRpb25zCkBAIC02Niw3ICs2
NSw3IEBACiAgICAgJ09CSkVDVCcgICAgPT4gJ0lNQVAubycsCiAgICAgJ01ZRVhUTElCJyAgPT4g
Jy4uLy4uL2xpYi9saWJjeXJ1cy5hIC4uLy4uL2xpYi9saWJjeXJ1c19taW4uYScsCiAgICAgJ0xJ
QlMnCT0+IFsiJEJEQl9MSUIgJFNBU0xfTElCICRPUEVOU1NMX0xJQiAkTElCX1JUIC1sc3NsIC1s
Y3J5cHRvIl0sCi0gICAgJ0RFRklORScJPT4gJy1EUEVSTF9QT0xMVVRFJywgICAgICMgZS5nLiwg
Jy1ESEFWRV9TT01FVEhJTkcnIAotICAgICdJTkMnCT0+ICItSS4uLy4uL2xpYiAkU0FTTF9JTkMg
JE9QRU5TU0xfSU5DIiwgCisgICAgJ0RFRklORScJPT4gJy1EUEVSTF9QT0xMVVRFJywgICAgIyBl
LmcuLCAnLURIQVZFX1NPTUVUSElORycgCisgICAgJ0lOQycJPT4gIi1JLi4vLi4vbGliIC1JLi4v
Li4gJFNBU0xfSU5DICRPUEVOU1NMX0lOQyIsIAogICAgICdFWEVfRklMRVMnID0+IFtjeXJhZG1d
LAogKTsK
</data>        

          </attachment>
      

    </bug>

</bugzilla>