<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3890</bug_id>
          
          <creation_ts>2015-03-23 17:24 EDT</creation_ts>
          <short_desc>UID SEARCH RETURN () ... results in untagged SEARCH instead of untagged ESEARCH</short_desc>
          <delta_ts>2015-03-23 17:24:27 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.4.16</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>NEW</bug_status>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jeffrey Stedfast">jeff@xamarin.com</reporter>
          <assigned_to name="Bron Gondwana">brong@fastmail.fm</assigned_to>
          
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Jeffrey Stedfast">jeff@xamarin.com</who>
            <bug_when>2015-03-23 17:24:02 EDT</bug_when>
            <thetext>This is a log against Cyrus IMAP v2.4.16-Debian-2.4.16-4+deb7u2

C: A00000004 UID SEARCH RETURN () CHARSET US-ASCII FROM xxx@brturbo.com.br
S: * SEARCH 3099
S: A00000004 OK Completed (1 msgs in 0.000 secs)

As far as I understand rfc4731, the server is expected to respond to this extended SEARCH command with an untagged ESEARCH response rather than an untagged SEARCH response.

In section 3.1, it states:

   If one or more result options described above are specified, the
   extended SEARCH command MUST return a single ESEARCH response
   [IMAPABNF], instead of the SEARCH response.

   An extended UID SEARCH command MUST cause an ESEARCH response with
   the UID indicator present.


Now, I think the confusion *may* be that &quot;options described above&quot; are about ALL, MIN, and COUNT but my search command does not explicitly use the ALL option. However, 1 paragraph later, it states:

   If the list of result options is empty, that requests the server to
   return an ESEARCH response instead of the SEARCH response.  This is
   equivalent to &quot;(ALL)&quot;.


I&apos;ve added a work-around in my IMAP library to handle untagged SEARCH responses even when using the ESEARCH syntax, but obviously it&apos;d be fantastic if this bug were fixed in Cyrus as well.


Since I don&apos;t personally have access to a Cyrus IMAPd server, I was also hoping to find out if a workaround of just explicitly sending &quot;(ALL)&quot; would fix this issue as it would make the workaround in my code a bit cleaner than it is now.

Thanks!</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>