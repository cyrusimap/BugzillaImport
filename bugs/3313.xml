<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3313</bug_id>
          
          <creation_ts>2010-11-05 11:20 EDT</creation_ts>
          <short_desc>Always use cyrus sasl md5 routines</short_desc>
          <delta_ts>2010-12-20 08:09:31 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>lib</component>
          <version>2.4.2</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>blocker</bug_severity>
          <target_milestone>2.4.6</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Jeroen van Meeuwen (Kolab Systems)">vanmeeuwen@kolabsys.com</reporter>
          <assigned_to name="Greg Banks">gnb@fastmail.fm</assigned_to>
          <cc>brong@fastmail.fm</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Jeroen van Meeuwen (Kolab Systems)">vanmeeuwen@kolabsys.com</who>
            <bug_when>2010-11-05 11:20:36 EDT</bug_when>
            <thetext>Currently we cannot build without libsasl, and it contains MD5
routines, so just always use them.  This simplifies a bunch of
things:

- We don&apos;t need to test for libmd in configure
- We don&apos;t need md5.c or md5global.h
- We need less ifdef futzery in imtest.c (it moves
  into md.5)
- We don&apos;t need our own MD5 implementation
- We weren&apos;t using hmac-md5.h anyway, remove it.

4a55cef76a18c78c42427e777ce55444fb6852ed</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Jeroen van Meeuwen (Kolab Systems)">vanmeeuwen@kolabsys.com</who>
            <bug_when>2010-11-05 11:20:58 EDT</bug_when>
            <thetext>Cherry-picked to cyrus-imapd-2.4</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Jeroen van Meeuwen (Kolab Systems)">vanmeeuwen@kolabsys.com</who>
            <bug_when>2010-11-08 16:20:04 EDT</bug_when>
            <thetext>Compile errors reported on IRC:

In file included from ./../lib/md5.h:12, from imtest.c:90:
/usr/local/include/sasl/md5.h:30: error: conflicting types for &apos;MD5_CTX&apos;
/usr/sfw/include/openssl/md5.h:105: error: previous declaration of &apos;MD5_CTX&apos; wa</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Jeroen van Meeuwen (Kolab Systems)">vanmeeuwen@kolabsys.com</who>
            <bug_when>2010-11-08 16:39:48 EDT</bug_when>
            <thetext>Reverted 71a4d6d34cfbeb723aeedd9dac203f7b93cb6639</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Jeroen van Meeuwen (Kolab Systems)">vanmeeuwen@kolabsys.com</who>
            <bug_when>2010-11-08 16:48:45 EDT</bug_when>
            <thetext>Postponed past 2.4.3 release as agreed upon in irc release meeting</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Greg Banks">gnb@fastmail.fm</who>
            <bug_when>2010-11-22 22:59:53 EDT</bug_when>
            <thetext>Created an attachment (id=1322)
proposed fix

I&apos;ve not been able to reproduce the compilation problem, even on
Solaris.  I suspect that it&apos;s due to an old version of the OpenSSL
headers always including their own copy of md5.h; recent versions
of the OpenSSL headers do not do this.

I think this patch will help: it uses the OpenSSL MD5 routines if
OpenSSL is configured, otherwise falls back to libsasl routines.
Builds with and without OpenSSL on Solaris proceed without warnings
and use the expected symbols from the expected libraries.

Please let me know if this fixes the issue on the troublesome platforms.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Greg Banks">gnb@fastmail.fm</who>
            <bug_when>2010-11-29 20:51:31 EDT</bug_when>
            <thetext>http://git.cyrusimap.org/cyrus-imapd/commit/?id=239d736928db5ba1ff80eb7860c32440ecce8770</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Jeroen van Meeuwen (Kolab Systems)">vanmeeuwen@kolabsys.com</who>
            <bug_when>2010-12-16 05:17:31 EDT</bug_when>
            <thetext>I cherry-picked both http://git.cyrusimap.org/cyrus-imapd/commit/?id=82b8e66a17c24c46c27b3b1371f43ed26c382e75 and http://git.cyrusimap.org/cyrus-imapd/commit/?id=239d736928db5ba1ff80eb7860c32440ecce8770 to cyrus-imapd-2.4, as the latter would not simply apply.</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1322</attachid>
            <date>2010-11-22 22:59 EDT</date>
            <desc>proposed fix</desc>
            <filename>bz3133.patch</filename>
            <type>text/plain</type>
            <size>2504</size>
            <attacher>gnb@fastmail.fm</attacher>
            
              <data encoding="base64">Y29tbWl0IGE0OTNjMjVmODZiYTk3NmIyNjZmNGExZDQ2ZTFiZjRhZGJiZTM2NDYKQXV0aG9yOiBH
cmVnIEJhbmtzIDxnbmJAZmFzdG1haWwuZm0+CkRhdGU6ICAgTW9uIE5vdiAyMiAxOTo0ODoxOCAy
MDEwIC0wNTAwCgogICAgQnVnIDMzMTM6IEZpeCBNRDUgY29kZSBjb21waWxhdGlvbgogICAgCiAg
ICBTb21lIG9sZCB2ZXJzaW9ucyBvZiBPcGVuU1NMIGFsd2F5cyBpbmNsdWRlIHRoZSBPcGVuU1NM
CiAgICBjb3B5IG9mIG1kNS5oLCB3aGljaCBkZWZpbmVzIHRoZSBzYW1lIHN0cnVjdHVyZSBhcyB0
aGUKICAgIGxpYlNBU0wgY29weSBvZiBtZC41LiAgVGhpcyBicmVha3MgdGhlIGJ1aWxkLiAgV29y
ayBhcm91bmQKICAgIGl0IGJ5IHVzaW5nIHRoZSBPcGVuU1NMIE1ENSByb3V0aW5lcyBpZiBPcGVu
U1NMIGlzIGNvbmZpZ3VyZWQsCiAgICBvdGhlcndpc2UgZmFsbGJhY2sgdG8gdGhlIGxpYlNBU0wg
b25lcy4KCmRpZmYgLS1naXQgYS9saWIvbWQ1LmggYi9saWIvbWQ1LmgKaW5kZXggOGIwNDI1Ni4u
ZGExMWMyNCAxMDA2NDQKLS0tIGEvbGliL21kNS5oCisrKyBiL2xpYi9tZDUuaApAQCAtNywxMyAr
Nyw1NSBAQAogI2luY2x1ZGUgPGNvbmZpZy5oPgogI2VuZGlmCiAKLS8qIFVzZSB0aGUgbGlic2Fz
bCBNRDUgcm91dGluZXMsIGFzIHdlIGNhbm5vdCBidWlsZCB3aXRob3V0IFNBU0wgYW55d2F5ICov
CisvKgorICogVGhpcyBpcyBnbmFybHksIHNvcnJ5IDooICBXZSBtaWdodCBoYXZlIGJlZW4gY29u
ZmlndXJlZCB0byBidWlsZAorICogd2l0aCBPcGVuU1NMLCBvciB3ZSBtaWdodCBub3QuICBTb21l
IG9sZGVyIHZlcnNpb25zIG9mIE9wZW5TU0wKKyAqIHdpbGwgZHJhZyBpbiB0aGVpciBvd24gbWQ1
Lmggd2hlbiB3ZSBpbmNsdWRlIDxvcGVuc3NsL3NzbC5oPiwgYnV0CisgKiBuZXdlciBvbmVzIGRv
bid0LiAgVGhlIE9wZW5TU0wgaGVhZGVyIG1pZ2h0IGJlIGluY2x1ZGVkIGJlZm9yZSBvcgorICog
YWZ0ZXIgdGhpcyBoZWFkZXIgZmlsZSBpcyBpbmNsdWRlZC4KKyAqCisgKiBTbywgd2UgKm1pZ2h0
KiBoYXZlIGEgZGVmaW5pdGlvbiBvZiB0aGUgTUQ1X0NUWCBzdHJ1Y3R1cmUgZnJvbQorICogT3Bl
blNTTCwgbm93IG9yIGxhdGVyLCBvciBub3QuCisgKgorICogTGliU0FTTCBhbHNvIGhhcyBNRDUg
cm91dGluZXMsIGRlY2xhcmVkIGluIDxzYXNsL21kNS5oPiwgYW5kIHRoYXQKKyAqIGhlYWRlciBh
bHNvIGRlZmluZXMgYSBNRDVfQ1RYIHN0cnVjdHVyZS4gIFNvIHdlIGNhbid0IGluY2x1ZGUKKyAq
IGJvdGggbWQ1LmgncywgYnV0IHdlIG5lZWQgb25lLgorICoKKyAqIFNvIHdlIGV4cGxpY2l0bHkg
aW5jbHVkZSB0aGUgT3BlblNTTCBtZDUuaCBpZiBPcGVuU1NMIGlzIGNvbmZpZ3VyZWQKKyAqIGlu
LCBvdGhlcndpc2Ugd2UgZmFsbGJhY2sgdG8gdGhlIGxpYlNBU0wgcm91dGluZXMuICBOb3RlIHRo
YXQgd2UKKyAqIGNhbm5vdCBidWlsZCB3aXRob3V0IGxpYlNBU0wgYW55d2F5LCBzbyB3ZSBkb24n
dCBuZWVkIHRvIGZhbGxiYWNrCisgKiBhbnkgZnVydGhlci4KKyAqCisgKiBUaGUgTUQ1IEFQSSB2
YXJpZXMgc2xpZ2h0bHkgZnJvbSBsaWJyYXJ5IHRvIGxpYnJhcnkuICBIZXJlJ3MgYQorICogZGVz
Y3JpcHRpb24gb2YgdGhlIEFQSSB0aGF0IEN5cnVzIGlzIGV4cGVjdGluZyBhbmQgdGhhdCB3ZSB0
cnkKKyAqIHRvIHByb3ZpZGUgb24gdG9wIG9mIHdoYXRldmVyIHRoZSBsaWJyYXJ5IGhhcy4KKyAq
CisgKiB0eXBlZGVmIHN0cnVjdCAuLi4geyAuLi4gfSBNRDVfQ1RYOworICogdm9pZCBNRDVJbml0
KE1ENV9DVFggKik7CisgKiB2b2lkIE1ENVVwZGF0ZShNRDVfQ1RYICosIGNvbnN0IHZvaWQgKmRh
dGEsIHNpemVfdCBsZW4pOworICogdm9pZCBNRDVGaW5hbCh1bnNpZ25lZCBjaGFyW01ENV9ESUdF
U1RfTEVOR1RIXSwgTUQ1X0NUWCAqKTsKKyAqLworCisjaWZkZWYgSEFWRV9TU0wKKyNpbmNsdWRl
IDxvcGVuc3NsL21kNS5oPgorCisjZGVmaW5lIE1ENUluaXQJCQkgICAgTUQ1X0luaXQKKyNkZWZp
bmUgTUQ1VXBkYXRlCQkgICAgTUQ1X1VwZGF0ZQorI2RlZmluZSBNRDVGaW5hbAkJICAgIE1ENV9G
aW5hbAorCisjZWxzZQorCiAjaW5jbHVkZSA8c2FzbC9tZDVnbG9iYWwuaD4KICNpbmNsdWRlIDxz
YXNsL21kNS5oPgogCi0jZGVmaW5lIE1ENUluaXQJCSAgICBfc2FzbF9NRDVJbml0Ci0jZGVmaW5l
IE1ENVVwZGF0ZQkgICAgX3Nhc2xfTUQ1VXBkYXRlCi0jZGVmaW5lIE1ENUZpbmFsCSAgICBfc2Fz
bF9NRDVGaW5hbAotI2RlZmluZSBNRDVfRElHRVNUX0xFTkdUSCAgIDE2CisjZGVmaW5lIE1ENUlu
aXQJCQkgICAgX3Nhc2xfTUQ1SW5pdAorI2RlZmluZSBNRDVVcGRhdGUJCSAgICBfc2FzbF9NRDVV
cGRhdGUKKyNkZWZpbmUgTUQ1RmluYWwJCSAgICBfc2FzbF9NRDVGaW5hbAorCisjZW5kaWYgLyog
IUhBVkVfU1NMICovCisKKyNpZm5kZWYgTUQ1X0RJR0VTVF9MRU5HVEgKKyNkZWZpbmUgTUQ1X0RJ
R0VTVF9MRU5HVEggMTYKKyNlbmRpZgogCiAjZW5kaWYgLyogX0NZUlVTX01ENV9IXyAqLwo=
</data>        

          </attachment>
      

    </bug>

</bugzilla>