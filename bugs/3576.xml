<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3576</bug_id>
          
          <creation_ts>2011-10-07 11:11 EDT</creation_ts>
          <short_desc>lib/mkchartabl.pl, stdout and stderr</short_desc>
          <delta_ts>2012-10-19 14:27:14 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>lib</component>
          <version>2.4.x (next)</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.5-next</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dilyan Palauzov">dilyan.palauzov@aegee.org</reporter>
          <assigned_to name="Bron Gondwana">brong@fastmail.fm</assigned_to>
          
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Dilyan Palauzov">dilyan.palauzov@aegee.org</who>
            <bug_when>2011-10-07 11:11:42 EDT</bug_when>
            <thetext>Created an attachment (id=1432)
lib/mkchartable.pl prints to stderr only real errors

Hello,

lib/mkchartabl.pl is used to generate lib/chartable.c on stdout .  It prints status messages to stderr.  Status messages do not belong to stderr.

The applied patch adds two parameters to mkchartable.pl:
  -- output / -o , specifying to which file the output shall be stored, and
  -- verbose / -V, controlling how much status messages are printed, and
  fixes Makefile.in to make use of the -o parameter.

With -V=0, only &quot;    GEN  chartable.c&quot; is printed, which fits perfectly in the output of Automake with SILENT_RULES([yes]).  -V=1 prints the invoked command and -V=2 (default) does not change anything compared to the current output to stderr.

&amp;#1057;&amp;#1098;&amp;#1089; &amp;#1079;&amp;#1076;&amp;#1088;&amp;#1072;&amp;#1074;&amp;#1077;
  &amp;#1044;&amp;#1080;&amp;#1083;&amp;#1103;&amp;#1085;</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2012-10-19 14:27:14 EDT</bug_when>
            <thetext>This was already committed to master, it will be in 2.5.

commit 49f8e2bd65a26d094265a2a255d8fc9b33e2d636
Author: &amp;#1044;&amp;#1080;&amp;#1083;&amp;#1103;&amp;#1085; &amp;#1055;&amp;#1072;&amp;#1083;&amp;#1072;&amp;#1091;&amp;#1079;&amp;#1086;&amp;#1074; &lt;git-dpa@aegee.org&gt;
Date:   Sun Nov 6 22:29:59 2011 +0000

    lib/mkchartable.pl move output from stderr to stdout</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1432</attachid>
            <date>2011-10-07 11:11 EDT</date>
            <desc>lib/mkchartable.pl prints to stderr only real errors</desc>
            <filename>mkchartable_stdout.patch</filename>
            <type>text/plain</type>
            <size>8287</size>
            <attacher>dilyan.palauzov@aegee.org</attacher>
            
              <data encoding="base64">LS0tIGN5cnVzLWltYXBkLTIuNC4xMi5vcmlnL2xpYi9NYWtlZmlsZS5pbgkyMDExLTEwLTA0IDE5
OjUzOjAzLjAwMDAwMDAwMCArMDAwMAorKysgY3lydXMtaW1hcGQtMi40LjEyL2xpYi9NYWtlZmls
ZS5pbgkyMDExLTEwLTA3IDE0OjU3OjA2LjQzMDY3MDA0MiArMDAwMApAQCAtMTQyLDE1ICsxMzEs
MTEgQEAKIGltYXBvcHRzLmg6IGltYXBvcHRzLmMKIAogY2hhcnRhYmxlLmM6IG1rY2hhcnRhYmxl
LnBsIGNoYXJzZXQvKi50IGNoYXJzZXQvdW5pZml4LnR4dCBjaGFyc2V0L1VuaWNvZGVEYXRhLnR4
dAotCUBlY2hvICIjIyMgQnVpbGRpbmcgY2hhcnRhYmxlcy4uLiIKLQlybSAtZiBjaGFydGFibGUu
YwogCXBlcmwgLi9ta2NoYXJ0YWJsZS5wbCBcCiAJIC1tICQoc3JjZGlyKS9jaGFyc2V0L3VuaWZp
eC50eHQgXAogCSAtbSAkKHNyY2RpcikvY2hhcnNldC9Vbmljb2RlRGF0YS50eHQgXAotCSAkKHNy
Y2RpcikvY2hhcnNldC8qLnQgXAotCSA+IGNoYXJ0YWJsZS5jIFwKLQkgfHwgKHJtIC1mIGNoYXJ0
YWJsZS5jICYmIGV4aXQgMSkKLQlAZWNobyAiIyMjIERvbmUgYnVpbGRpbmcgY2hhcnRhYmxlcy4i
CisJIC1vICRAIFwKKwkgJChzcmNkaXIpL2NoYXJzZXQvKi50CiAKIGNsZWFuOgogCXJtIC1mICou
byAqLmEgY2hhcnRhYmxlLmMgTWFrZWZpbGUuYmFrIG1ha2VkZXBlbmQubG9nIFwKZGlmZiAtcnUg
Y3lydXMtaW1hcGQtMi40LjEyLm9yaWcvbGliL21rY2hhcnRhYmxlLnBsIGN5cnVzLWltYXBkLTIu
NC4xMi9saWIvbWtjaGFydGFibGUucGwKLS0tIGN5cnVzLWltYXBkLTIuNC4xMi5vcmlnL2xpYi9t
a2NoYXJ0YWJsZS5wbAkyMDExLTEwLTA0IDE5OjUzOjAzLjAwMDAwMDAwMCArMDAwMAorKysgY3ly
dXMtaW1hcGQtMi40LjEyL2xpYi9ta2NoYXJ0YWJsZS5wbAkyMDExLTEwLTA3IDE0OjU1OjUzLjA0
NTY2OTk5OSArMDAwMApAQCAtNTAsMTEgKzUwLDMzIEBACiB1c2UgR2V0b3B0OjpMb25nOwogCiBt
eSBAbWFwczsKK215ICR2ZXJib3NlID0gMjsKK215ICRvdXRwdXQ7CiBteSAlY29kZW1hcDsKLUdl
dE9wdGlvbnMoICdtYXB8bT1zJyA9PiBcQG1hcHMgKTsKK215ICRwZXJsID0gIiI7CiAKLXByaW50
aGVhZGVyKFxAbWFwcywgXEBBUkdWKTsKK0dldE9wdGlvbnMoICdtYXB8bT1zJyAgICAgPT4gXEBt
YXBzLCAgICAgICNzdHJpbmdzCisgICAgICAgICAgICAnb3V0cHV0fG89cycgID0+IFwkb3V0cHV0
LCAgICAjc3RyaW5nCisgICAgICAgICAgICAncGVybHxwPXMnICAgID0+IFwkcGVybCwgICAgICAj
c3RyaW5nCisgICAgICAgICAgICAndmVyYm9zZXxWPWknID0+IFwkdmVyYm9zZSApOyAjIG51bWJl
cmljLCBWPTAgbWVhbnMgbGVzcyBvdXRwdXQKKworaWYgKCR2ZXJib3NlID09IDApIHsKKyAgICBw
cmludCAiICBHRU4gICAgJG91dHB1dFxuIjsKK30gZWxzaWYgKCR2ZXJib3NlID09IDEpIHsKKyAg
ICBpZiAoJHBlcmwgZXEgIiIpIHsKKwlwcmludCAicGVybCAkMCI7CisgICAgfSBlbHNlIHsKKwlw
cmludCAiJHBlcmwgJDAiOworICAgIH0KKyAgICBmb3JlYWNoKEBBUkdWKXsKKwlwcmludCAiICRf
IjsKKyAgICB9CisgICAgcHJpbnQgIlxuIjsKK30KIAorcHJpbnRfdmVyYm9zZSAoIiMjIyBCdWls
ZGluZyBjaGFydGFibGVzLi4uXG4iKTsKK29wZW4gKE9VVFBVVCwgIj4kb3V0cHV0Iik7Citwcmlu
dGhlYWRlcihcQG1hcHMsIFxAQVJHVik7CiAjIGZpcnN0IHdlIHBhcnNlIHRoZSBjaGFydGFibGUg
dW5pY29kZSBtYXBwaW5ncyBhbmQgdGhlIGZpeGVzCiAjIGZpbGUgdG8gYnVpbGQgdGhlIHVuaWNv
ZGUgdG8gc2VhcmNoIGNhbm9uaWNhbCBmb3JtIHRhYmxlcy4KIGZvcmVhY2ggbXkgJG1hcCAoQG1h
cHMpIHsKQEAgLTcyLDE3ICs5NCwyNCBAQAogIyBtZW50aW9uZWQgaW4gdGhlIGxvb2t1cCB0YWJs
ZSB0byBiZSBzcGVjaWZpZWQsCiAjIG9yIHRoaXMgc3Vja2VyIGFpbnRuJ3QgZ3VubmEgY29tcGls
ZS4KIGZvcmVhY2ggbXkgJG9wdCAoQEFSR1YpIHsKLSAgICB3YXJuICJta2NoYXJ0YWJsZTogbWFw
cGluZyAkb3B0Li4uXG4iOworICAgIHByaW50X3ZlcmJvc2UgKCJta2NoYXJ0YWJsZTogbWFwcGlu
ZyAkb3B0Li4uXG4iKTsKICAgICBteSAkdGFibGUgPSByZWFkY2hhcmZpbGUoJG9wdCk7CiAgICAg
cHJpbnR0YWJsZSgkdGFibGUsICRvcHQpOwogfQogCiBwcmludGxvb2t1cCgpOwotCitjbG9zZSAo
T1VUUFVUKTsKK3ByaW50X3ZlcmJvc2UgKCIjIyMgRG9uZSBidWlsZGluZyBjaGFydGFibGVzLlxu
Iik7CiBleGl0IDA7CiAKK3N1YiBwcmludF92ZXJib3NlIHsKKyAgICBteSAoJHRleHQpID0gQF87
CisgICAgaWYgKCR2ZXJib3NlICE9IDApIHsKKwlwcmludCAkdGV4dDsKKyAgICB9Cit9CiBzdWIg
dXNhZ2UgewotICAgIHdhcm4gInVzYWdlOiBta2NoYXJ0YWJsZSAtbSBtYXBmaWxlIGNoYXJzZXRm
aWxlLi4uXG4iOworICAgIHByaW50ICJ1c2FnZTogbWtjaGFydGFibGUgLW0gbWFwZmlsZSAtbyBv
dXRwdXRmaWxlICgtViB2ZXJib3NpdHkpIGNoYXJzZXRmaWxlLi4uXG4iOwogICAgIGV4aXQoMSk7
CiB9CiAKQEAgLTEzNiw3ICsxNjUsNyBAQAogICAgIAogICAgICMgS2VlcCBzY2FubmluZyB0aGUg
dGFibGUgdW50aWwgbm8gY2hhbmdlcyBhcmUgbWFkZQogICAgIHdoaWxlICgkZGlkY2hhbmdlKSB7
Ci0Jd2FybiAibWtjaGFydGFibGU6IGV4cGFuZGluZyB1bmljb2RlIG1hcHBpbmdzLi4uXG4iOwor
CXByaW50X3ZlcmJvc2UgKCJta2NoYXJ0YWJsZTogZXhwYW5kaW5nIHVuaWNvZGUgbWFwcGluZ3Mu
Li5cbiIpOwogCiAJJGRpZGNoYW5nZSA9IDA7CiAKQEAgLTE2Niw5ICsxOTUsOSBAQAogCX0KICAg
ICB9OwogCi0gICAgd2FybiAibWtjaGFydGFibGU6IGJ1aWxkaW5nIGV4cGFuc2lvbiB0YWJsZS4u
LlxuIjsKKyAgICBwcmludF92ZXJib3NlICgibWtjaGFydGFibGU6IGJ1aWxkaW5nIGV4cGFuc2lv
biB0YWJsZS4uLlxuIik7CiAKLSAgICBwcmludCA8PEVPRjsKKyAgICBwcmludCBPVVRQVVQgPDxF
T0Y7CiAvKiBUYWJsZSBvZiB0cmFuc2xhdGlvbnMgKi8KIGNvbnN0IGludCBjaGFydGFibGVzX3Ry
YW5zbGF0aW9uX211bHRpY2hhcltdID0gewogICAwLCAvKiB0aGUgaW5kZXggb2YgMCBpcyByZXNl
cnZlZCB0byBtZWFuICJubyB0cmFuc2xhdGlvbiIgKi8KQEAgLTE4Myw5ICsyMTIsOSBAQAogCSAg
ICAkbWF4bGVuID0gQCRjaGFycyBpZiAkbWF4bGVuIDwgQCRjaGFyczsKIAogCSAgICAjIGFkZCB0
byB0aGUgdHJhbnNsYXRpb24gdGFibGUKLQkgICAgcHJpbnQgIiAgIjsKLQkgICAgcHJpbnQgam9p
bigiLCAiLCAobWFwIHsgc3ByaW50ZigiMHglMDR4IiwgJF8pIH0gQCRjaGFycykpOwotCSAgICBw
cmludGYgIiwgMCwgLyogVHJhbnNsYXRpb24gZm9yICUwNHggKG9mZnNldCAlZCkgKi9cbiIsICRj
b2RlLCAkb2Zmc2V0OworCSAgICBwcmludCBPVVRQVVQgIiAgIjsKKwkgICAgcHJpbnQgT1VUUFVU
IGpvaW4oIiwgIiwgKG1hcCB7IHNwcmludGYoIjB4JTA0eCIsICRfKSB9IEAkY2hhcnMpKTsKKwkg
ICAgcHJpbnRmIE9VVFBVVCAiLCAwLCAvKiBUcmFuc2xhdGlvbiBmb3IgJTA0eCAob2Zmc2V0ICVk
KSAqL1xuIiwgJGNvZGUsICRvZmZzZXQ7CiAKIAkgICAgIyB1cGRhdGUgdHJhY2tpbmcKIAkgICAg
JGNvZGVtYXAtPnskY29kZX17dHJhbnN9ID0gJG9mZnNldDsKQEAgLTE5Myw3ICsyMjIsNyBAQAog
CX0KICAgICB9CiAKLSAgICBwcmludCA8PEVPRjsKKyAgICBwcmludCBPVVRQVVQgPDxFT0Y7CiB9
OwogCiBFT0YKQEAgLTIwNCw3ICsyMzMsNyBAQAogc3ViIHByaW50bWFwIHsKICAgICBteSAoJGNv
ZGVtYXApID0gQF87CiAKLSAgICB3YXJuICJta2NoYXJ0YWJsZTogYnVpbGRpbmcgdHJhbnNsYXRp
b24gdGFibGUuLi5cbiI7CisgICAgcHJpbnRfdmVyYm9zZSgibWtjaGFydGFibGU6IGJ1aWxkaW5n
IHRyYW5zbGF0aW9uIHRhYmxlLi4uXG4iKTsKIAogICAgICMgcmVjb3JkIHdoaWNoIGJsb2NrcyB3
ZSBuZWVkIG1hcHBpbmdzIGZvcgogICAgIG15IEBuZWVkYmxvY2s7CkBAIC0yMTIsNyArMjQxLDcg
QEAKIAkkbmVlZGJsb2NrWygkY29kZSA+PiAxNikgJiAweGZmXVsoJGNvZGUgPj4gOCkgJiAweGZm
XSA9IDE7CiAgICAgfQogCi0gICAgcHJpbnQgPDwgIkVPRiI7CisgICAgcHJpbnQgT1VUUFVUIDw8
ICJFT0YiOwogLyogVGhlIG5leHQgdHdvIHRhYmxlcyBhcmUgdXNlZCBmb3IgZG9pbmcgdHJhbnNs
YXRpb25zIGZyb20KICAqIDI0LWJpdCB1bmljb2RlIHZhbHVlcyB0byBjYW5vbmljYWwgZm9ybS4g
IEZpcnN0IGxvb2sgdXAgdGhlCiAgKiBjb2RlID4+IDE2IChoaWdoZXN0IG9yZGVyIGJsb2NrKSBp
biB0aGUgYmxvY2sxNiB0YWJsZSB0bwpAQCAtMjM0LDE0ICsyNjMsMTQgQEAKICAgICBteSAkbjE2
ID0gMDsKICAgICBmb3JlYWNoIG15ICRibG9jazE2ICgwLi4yNTUpIHsKIAlpZiAoJG5lZWRibG9j
a1skYmxvY2sxNl0pIHsKLQkgICAgcHJpbnRmKCIgJTNkLCIsICRuMTYrKyk7CisJICAgIHByaW50
ZiBPVVRQVVQgKCIgJTNkLCIsICRuMTYrKyk7CiAJfSBlbHNlIHsKLQkgICAgcHJpbnRmKCIgMjU1
LCIpOworCSAgICBwcmludGYgT1VUUFVUICIgMjU1LCI7CiAJfQotIAlwcmludCAiXG4iIGlmICgk
YmxvY2sxNiAlIDggPT0gNyk7CisgCXByaW50IE9VVFBVVCAiXG4iIGlmICgkYmxvY2sxNiAlIDgg
PT0gNyk7CiAgICAgfQogCi0gICAgcHJpbnQgPDxFT0Y7CisgICAgcHJpbnQgT1VUUFVUIDw8RU9G
OwogfTsKIAogY29uc3QgdW5zaWduZWQgY2hhciBjaGFydGFibGVzX3RyYW5zbGF0aW9uX2Jsb2Nr
OFskbjE2XVsyNTZdID0gewpAQCAtMjUwLDE5ICsyNzksMTkgQEAKICAgICBmb3JlYWNoIG15ICRi
bG9jazE2ICgwLi4yNTUpIHsKIAlteSAkbmVlZDggPSAkbmVlZGJsb2NrWyRibG9jazE2XTsKIAlu
ZXh0IHVubGVzcyAkbmVlZDg7Ci0JcHJpbnQgIiB7IC8qIHRyYW5zbGF0aW9uIGZvciAxNiBiaXQg
b2Zmc2V0ICRibG9jazE2ICovXG4gIjsKKwlwcmludCBPVVRQVVQgIiB7IC8qIHRyYW5zbGF0aW9u
IGZvciAxNiBiaXQgb2Zmc2V0ICRibG9jazE2ICovXG4gIjsKIAlmb3JlYWNoIG15ICRibG9jazgg
KDAuLjI1NSkgewogCSAgICBpZiAoJG5lZWQ4LT5bJGJsb2NrOF0pIHsKLQkJcHJpbnRmKCIgJTNk
LCIsICRuOCsrKTsKKwkJcHJpbnRmIE9VVFBVVCAoIiAlM2QsIiwgJG44KyspOwogCSAgICB9IGVs
c2UgewotCQlwcmludGYoIiAyNTUsIik7CisJCXByaW50ZiBPVVRQVVQgIiAyNTUsIjsKIAkgICAg
fQotIAkgICAgcHJpbnQgIlxuICIgaWYgKCRibG9jazggJSA4ID09IDcpOworIAkgICAgcHJpbnQg
T1VUUFVUICJcbiAiIGlmICgkYmxvY2s4ICUgOCA9PSA3KTsKIAl9Ci0JcHJpbnQgIn0sXG4iOwor
CXByaW50IE9VVFBVVCAifSxcbiI7CiAgICAgfQogCi0gICAgcHJpbnQgPDxFT0Y7CisgICAgcHJp
bnQgT1VUUFVUIDw8RU9GOwogfTsKIAogLyogTk9URTogVW5saWtlIG90aGVyIGNoYXJzZXQgdHJh
bnNsYXRpb24gdGFibGVzLCB0aGUKQEAgLTI3OSwyNCArMzA4LDI0IEBACiAJbmV4dCB1bmxlc3Mg
JG5lZWQ4OwogCWZvcmVhY2ggbXkgJGJsb2NrOCAoMC4uMjU1KSB7CiAJICAgIG5leHQgdW5sZXNz
ICRuZWVkOC0+WyRibG9jazhdOwotICAgIAkgICAgcHJpbnQgIiB7IC8qIE1hcHBpbmcgZm9yIHVu
aWNvZGUgY2hhcnMgaW4gYmxvY2sgJGJsb2NrMTYgJGJsb2NrOCAqL1xuICI7CisgICAgCSAgICBw
cmludCBPVVRQVVQgIiB7IC8qIE1hcHBpbmcgZm9yIHVuaWNvZGUgY2hhcnMgaW4gYmxvY2sgJGJs
b2NrMTYgJGJsb2NrOCAqL1xuICI7CiAJICAgIGZvcmVhY2ggbXkgJGkgKDAuLjI1NSkgewogCQlt
eSAkY29kZXBvaW50ID0gKCRibG9jazE2IDw8IDE2KSArICgkYmxvY2s4IDw8IDgpICsgJGk7CiAJ
CWlmIChub3QgJGNvZGVtYXAtPnskY29kZXBvaW50fSkgewotCQkgICAgcHJpbnRmICIgMHglMDR4
LCIsICRjb2RlcG9pbnQ7CisJCSAgICBwcmludGYgT1VUUFVUICIgMHglMDR4LCIsICRjb2RlcG9p
bnQ7CiAJCX0KIAkJZWxzaWYgKCRjb2RlbWFwLT57JGNvZGVwb2ludH17dHJhbnN9KSB7Ci0JCSAg
ICBwcmludGYgIiAtICU0ZCwiLCAkY29kZW1hcC0+eyRjb2RlcG9pbnR9e3RyYW5zfTsKKwkJICAg
IHByaW50ZiBPVVRQVVQgIiAtICU0ZCwiLCAkY29kZW1hcC0+eyRjb2RlcG9pbnR9e3RyYW5zfTsK
IAkJfQogCQllbHNlIHsKLQkJICAgIHByaW50ZiAiIDB4JTA0eCwiLCAkY29kZW1hcC0+eyRjb2Rl
cG9pbnR9e2NoYXJzfVswXTsKKwkJICAgIHByaW50ZiBPVVRQVVQgIiAweCUwNHgsIiwgJGNvZGVt
YXAtPnskY29kZXBvaW50fXtjaGFyc31bMF07CiAJCX0KLSAJCXByaW50ICJcbiAiIGlmICgkaSAl
IDggPT0gNyk7CisgCQlwcmludCBPVVRQVVQgIlxuICIgaWYgKCRpICUgOCA9PSA3KTsKIAkgICAg
fQotCSAgICBwcmludCAifSxcbiI7CisJICAgIHByaW50IE9VVFBVVCAifSxcbiI7CiAgICAgCX0K
ICAgICB9Ci0gICAgcHJpbnRmKCJ9O1xuXG4iKTsKKyAgICBwcmludGYgT1VUUFVUICJ9O1xuXG4i
OwogfQogCiAjIHJlYWQgYSBjaGFyc2V0IHRhYmxlLCBidWlsZGluZyBpbnRlcm1lZGlhdGUgc3Rh
dGUgdGFibGVzCkBAIC00MjUsNDYgKzQ1NCw0NiBAQAogICAgICRuYW1lID1+IHN7XC4uKn17fTsg
IyBhZnRlciBhIGRvdAogICAgICRuYW1lID1+IHN7LX17X31nOyAjIHVuZGVyc2NvcmVzCiAKLSAg
ICBwcmludCAiY29uc3Qgc3RydWN0IGNoYXJtYXAgY2hhcnRhYmxlc18kbmFtZVxbJG51bV1bMjU2
XSA9IHtcbiI7CisgICAgcHJpbnQgT1VUUFVUICJjb25zdCBzdHJ1Y3QgY2hhcm1hcCBjaGFydGFi
bGVzXyRuYW1lXFskbnVtXVsyNTZdID0ge1xuIjsKIAogICAgIGZvcmVhY2ggbXkgJHRhYmxlIChA
JHRhYmxlcykgewogCW15ICRjaGFycyA9ICR0YWJsZS0+e2NoYXJzfTsKLQlwcmludCAiIHsiOwor
CXByaW50IE9VVFBVVCAiIHsiOwogCWlmICgkdGFibGUtPntuYW1lfSkgewotCSAgICBwcmludCAi
IC8qICR0YWJsZS0+e25hbWV9ICovIjsKKwkgICAgcHJpbnQgT1VUUFVUICIgLyogJHRhYmxlLT57
bmFtZX0gKi8iOwogCX0KLQlwcmludCAiXG4iOworCXByaW50IE9VVFBVVCAiXG4iOwogCWZvcmVh
Y2ggbXkgJGkgKDAuLjI1NSkgewogCSAgICBteSAkY2hhciA9ICRjaGFycy0+WyRpXTsKIAkgICAg
aWYgKCRjaGFyKSB7Ci0JCXByaW50ICIgICB7ICRjaGFyLT5bMF0sICRjaGFyLT5bMV0gfSwgLyog
JGNoYXItPlsyXSAqL1xuIjsKKwkJcHJpbnQgT1VUUFVUICIgICB7ICRjaGFyLT5bMF0sICRjaGFy
LT5bMV0gfSwgLyogJGNoYXItPlsyXSAqL1xuIjsKIAkgICAgfQogCSAgICBlbHNlIHsKLQkJcHJp
bnQgIiAgIHsgMHhmZmZkLCAwIH0sIC8qIG5vIHN1Y2ggY2hhcmFjdGVyICovXG4iOworCQlwcmlu
dCBPVVRQVVQgIiAgIHsgMHhmZmZkLCAwIH0sIC8qIG5vIHN1Y2ggY2hhcmFjdGVyICovXG4iOwog
CSAgICB9CiAJfQotCXByaW50ICIgfSxcbiI7CisJcHJpbnQgT1VUUFVUICIgfSxcbiI7CiAgICAg
fQotICAgIHByaW50ICJ9O1xuXG4iOworICAgIHByaW50IE9VVFBVVCAifTtcblxuIjsKIH0KIAog
IyBwcmludCB0aGUgaGVhZGVyIG9mIHRoZSBjaGFydGFibGUuYyBmaWxlCiBzdWIgcHJpbnRoZWFk
ZXIgewogICAgIG15ICgkbWFwcywgJGNoYXJzZXRzKSA9IEBfOwogCi0gICAgcHJpbnQgPDxFT0Y7
CisgICAgcHJpbnQgT1VUUFVUIDw8RU9GOwogLyogVGhpcyBmaWxlIGlzIGdlbmVyYXRlZCBieSBt
a2NoYXJ0YWJsZS5wbCB3aXRoIHRoZSBmb2xsb3dpbmcgYXJndW1lbnRzCiAgKgogRU9GCiAgICAg
Zm9yZWFjaCBteSAkbWFwIChAJG1hcHMpIHsKIAlteSAkc2hhMSA9IGdldHNoYTEoJG1hcCk7Ci0J
cHJpbnQgIiAqIG1hcDogICAgICRzaGExICRtYXBcbiI7CisJcHJpbnQgT1VUUFVUICIgKiBtYXA6
ICAgICAkc2hhMSAkbWFwXG4iOwogICAgIH0KICAgICBmb3JlYWNoIG15ICRjaGFyc2V0IChAJGNo
YXJzZXRzKSB7CiAJbXkgJHNoYTEgPSBnZXRzaGExKCRjaGFyc2V0KTsKLQlwcmludCAiICogY2hh
cnNldDogJHNoYTEgJGNoYXJzZXRcbiI7CisJcHJpbnQgT1VUUFVUICIgKiBjaGFyc2V0OiAkc2hh
MSAkY2hhcnNldFxuIjsKICAgICB9Ci0gICAgcHJpbnQgPDxFT0Y7CisgICAgcHJpbnQgT1VUUFVU
IDw8RU9GOwogICovCiAKICNpbmNsdWRlICJjaGFydGFibGUuaCIKQEAgLTQ3NSw3ICs1MDQsNyBA
QAogIyBwcmludCB0aGUgbG9va3VwIHRhYmxlIGZvciBjaGFyYWN0ZXJzZXRzIGF0IHRoZSBlbmQK
ICMgb2YgdGhlIGNoYXJ0YWJsZS5jIGZpbGUuCiBzdWIgcHJpbnRsb29rdXAgewotICAgIHByaW50
IDw8RU9GOworICAgIHByaW50IE9VVFBVVCA8PEVPRjsKIAogLyoKICAqIE1hcHBpbmcgb2YgY2hh
cmFjdGVyIHNldHMgdG8gdGFibGVzCg==
</data>        

          </attachment>
      

    </bug>

</bugzilla>