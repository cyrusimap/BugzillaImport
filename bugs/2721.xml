<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2721</bug_id>
          
          <creation_ts>2005-10-06 20:30 EDT</creation_ts>
          <short_desc>&quot;Unknown Errors&quot; not using/logging imap_err.et&apos;s descriptions</short_desc>
          <delta_ts>2010-10-25 18:46:36 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.3.x</version>
          <rep_platform>Macintosh</rep_platform>
          <op_sys>Mac OS X</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="OpenMacNews">openmacnews@gmail.com</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          <cc>spamfilter@macspeno.com</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="OpenMacNews">openmacnews@gmail.com</who>
            <bug_when>2005-10-06 20:30:27 EDT</bug_when>
            <thetext>hi all,

i&apos;ve reported two instances of &quot;Unknown Error Codes&quot;

(1) &quot;[bug?] lmtpd prefork&gt;=1 results in &quot;FATAL: Unknown Error Code&quot;&quot;
http://www.mail-archive.com/info-cyrus%40lists.andrew.cmu.edu/msg25845.html
&gt; Oct  5 14:44:06 devbox master[11053]: service lmtp pid 11094 in READY
&gt; state: terminated abnormally
&gt; Oct  5 14:44:07 devbox lmtp[11095]: Unknown Error Code: -1904809464
&gt; Oct  5 14:44:07 devbox lmtp[11095]: FATAL: Unknown Error Code: -190480946

(2) &quot;Unknown Error Code&quot; on imtest ?&quot;
http://www.mail-archive.com/info-cyrus%40lists.andrew.cmu.edu/msg25882.html
&gt; S: C01 OK Unknown Error Code: -1904809420

grep&apos;ing src, i found these error nums in &quot;./imap/imap_err.strings&quot;

	&quot;KEManager -1904809420&quot; = &quot;imap&quot;;
	&quot;KEMessage -1904809420&quot; = &quot;Completed&quot;;

	&quot;KEManager -1904809464&quot; = &quot;imap&quot;;
	&quot;KEMessage -1904809464&quot; = &quot;Invalid namespace prefix in configuration file&quot;;

	&quot;KEManager -1904809469&quot; = &quot;imap&quot;;
	&quot;KEMessage -1904809469&quot; = &quot;mail system storage has been exceeded&quot;;

per:

http://groups.google.com/group/linux.debian.bugs.dist/browse_frm/thread/
6cbc16715dc3983/33c38dccd7645e55?lnk=st&amp;q=cyrus+%22mail+system+storage+has+been
+exceeded%22&amp;rnum=1#33c38dccd7645e55

there was question abt #comment lines

testing, i removed all comment lines from imap_err.et ...

then:

      compile_et imap_err.et

and rebuild cyrus-imap, to no avail. the errors still show as &quot;Unknown ... -##...##&quot;

richard</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">murch@andrew.cmu.edu</who>
            <bug_when>2005-12-01 18:30:12 EDT</bug_when>
            <thetext>I have no clue on this one at the moment.  It definitely seems like the error
code table is out of sync, but I have no explanation why.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="OpenMacNews">openmacnews@gmail.com</who>
            <bug_when>2005-12-01 19:03:00 EDT</bug_when>
            <thetext>thx for the response!

dunno if this is helpful ...

per a long-ago list suggestion recompiling the .et files, i get:

% cd /usr/ports/cyrus-cvs/et &amp;&amp; compile_et test1.et
	Error Table &quot;krb&quot; has base 39525376
% cd /usr/ports/cyrus-cvs/et &amp;&amp; compile_et test2.et
	Error Table &quot;quux&quot; has base -1359220224
% cd /usr/ports/cyrus-cvs/imap &amp;&amp; compile_et imap_err.et
	Error Table &quot;imap&quot; has base -1904809472
% cd /usr/ports/cyrus-cvs/imap &amp;&amp; compile_et mupdate_err.et
	Error Table &quot;mupd&quot; has base -1627742720
% cd /usr/ports/cyrus-cvs/imap &amp;&amp; compile_et nntp_err.et
	Error Table &quot;nntp&quot; has base -1567905280
% cd /usr/ports/cyrus-cvs/SIEVE &amp;&amp; compile_et sieve_err.et
	Error Table &quot;siev&quot; has base -1237848064

richard</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">murch@andrew.cmu.edu</who>
            <bug_when>2005-12-01 19:08:54 EDT</bug_when>
            <thetext>And do those base nu,bers correspond to the #defines in imap_err.h, etc?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="OpenMacNews">openmacnews@gmail.com</who>
            <bug_when>2005-12-01 19:21:55 EDT</bug_when>
            <thetext>hi,

fwiw, others have also seen this, e.g.:
   http://asg.web.cmu.edu/archive/message.php?mailbox=archive.cyrus-devel&amp;msg=1025

&gt; And do those base numbers correspond to the #defines in imap_err.h, etc?

looks like it ...

% grep 39525376 et/*
  et/test1.c:const struct error_table et_krb_error_table = { text, 39525376L, 22 };
  et/test1.h:#define KRB_MK_AP_TKFIL                          (39525376L)
  et/test1.h:#define ERROR_TABLE_BASE_krb                     (39525376L)
  et/test1.strings:&quot;KEManager 39525376&quot; = &quot;krb&quot;;
  et/test1.strings:&quot;KEMessage 39525376&quot; = &quot;Can&apos;t read ticket file&quot;;

% grep 1359220224 et/*
  et/test2.c:const struct error_table et_quux_error_table = { text,
-1359220224L, 3 };
  et/test2.h:#define FOO_ERR                                  (-1359220224L)
  et/test2.h:#define ERROR_TABLE_BASE_quux                    (-1359220224L)
  et/test2.strings:&quot;KEManager -1359220224&quot; = &quot;quux&quot;;
  et/test2.strings:&quot;KEMessage -1359220224&quot; = &quot;foo&quot;;

% grep 1904809472 imap/*
  imap/imap_err.c:const struct error_table et_imap_error_table = { text,
-1904809472L, 53 };
  imap/imap_err.h:#define IMAP_INTERNAL                            (-1904809472L)
  imap/imap_err.h:#define ERROR_TABLE_BASE_imap                    (-1904809472L)
  imap/imap_err.strings:&quot;KEManager -1904809472&quot; = &quot;imap&quot;;
  imap/imap_err.strings:&quot;KEMessage -1904809472&quot; = &quot;Internal Error&quot;;

% grep 1627742720 imap/*
  imap/mupdate_err.c:const struct error_table et_mupd_error_table = { text,
-1627742720L, 8 };
  imap/mupdate_err.h:#define MUPDATE_FAIL                             (-1627742720L)
  imap/mupdate_err.h:#define ERROR_TABLE_BASE_mupd                    (-1627742720L)
  imap/mupdate_err.strings:&quot;KEManager -1627742720&quot; = &quot;mupd&quot;;
  imap/mupdate_err.strings:&quot;KEMessage -1627742720&quot; = &quot;the mupdate operation failed&quot;;

% grep 1567905280 imap/*
  imap/nntp_err.c:const struct error_table et_nntp_error_table = { text,
-1567905280L, 5 };
  imap/nntp_err.h:#define NNTP_NO_NEWSGROUPS                       (-1567905280L)
  imap/nntp_err.h:#define ERROR_TABLE_BASE_nntp                    (-1567905280L)
  imap/nntp_err.strings:&quot;KEManager -1567905280&quot; = &quot;nntp&quot;;
  imap/nntp_err.strings:&quot;KEMessage -1567905280&quot; = &quot;No newsgroups header in article&quot;;

% grep 1237848064 SIEVE/*
  SIEVE/sieve_err.c:const struct error_table et_siev_error_table = { text,
-1237848064L, 7 };
  SIEVE/sieve_err.h:#define SIEVE_FAIL                               (-1237848064L)
  SIEVE/sieve_err.h:#define ERROR_TABLE_BASE_siev                    (-1237848064L)
  SIEVE/sieve_err.strings:&quot;KEManager -1237848064&quot; = &quot;siev&quot;;
  SIEVE/sieve_err.strings:&quot;KEMessage -1237848064&quot; = &quot;Generic Sieve error&quot;;

richard</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="OpenMacNews">openmacnews@gmail.com</who>
            <bug_when>2005-12-02 01:59:35 EDT</bug_when>
            <thetext>after googling around, i&apos;ve begun to suspect that this is an old problem with
OSX&apos;s compile_et.

what got me started down this line of thinking is an old thread:

   https://lists.openafs.org/pipermail/comerrers.mbox/comerrers.mbox

so, on a whim ...

with

	setenv WORK &quot;/path/to/cyrus/imap/cvs/src/&quot;

then, after ./configure:

	perl -pi -e &apos;s/\/usr\/lib\/libcom_err.a/-lcom_err/g&apos; ./config.status
	perl -pi -e &apos;s/\/usr\/lib\/libcom_err.a/-lcom_err/g&apos; ./imap/Makefile
	perl -pi -e &apos;s/\/usr\/lib\/libcom_err.a/-lcom_err/g&apos; ./master/Makefile
	perl -pi -e &apos;s/\/usr\/lib\/libcom_err.a/-lcom_err/g&apos; ./notifyd/Makefile
	perl -pi -e &apos;s/\/usr\/lib\/libcom_err.a/-lcom_err/g&apos; ./SIEVE/Makefile
	perl -pi -e &apos;s/\/usr\/lib\/libcom_err.a/-lcom_err/g&apos; ./timsieved/Makefile

replacing system compile_et:

	setenv MY_COMPILE_ET &quot;/usr/bin/compile_et&quot;

with:

	cd $WORK/et
	./config_script $WORK/et/compile_et.sh &gt; $WORK/et/my_compile_et.sh
	setenv MY_COMPILE_ET &quot;sh $WORK/et/my_compile_et.sh&quot;

where:
	ls -al `which awk`
		lrwxr-xr-x  1 root wheel 4 Oct 23 09:59 /usr/local/bin/awk -&gt; gawk
	gawk --version
		GNU Awk 3.1.5
	ls -al `which sed`
		-rwxr-xr-x  1 root wheel 201048 Oct 22 23:03 /usr/local/bin/sed
	sed --version
		GNU sed version 4.1.4

then:

	cd $WORK/et    &amp;&amp; $MY_COMPILE_ET test1.et
	cd $WORK/et    &amp;&amp; $MY_COMPILE_ET test2.et
	cd $WORK/imap  &amp;&amp; $MY_COMPILE_ET imap_err.et
	cd $WORK/imap  &amp;&amp; $MY_COMPILE_ET mupdate_err.et
	cd $WORK/imap  &amp;&amp; $MY_COMPILE_ET nntp_err.et
	cd $WORK/SIEVE &amp;&amp; $MY_COMPILE_ET sieve_err.et

noting that I *no longer* see the output, as above, i.e.:

	---	Error Table &quot;krb&quot; has base 39525376
	---	Error Table &quot;quux&quot; has base -1359220224
	---	Error Table &quot;imap&quot; has base -1904809472
	---	Error Table &quot;mupd&quot; has base -1627742720
	---	Error Table &quot;nntp&quot; has base -1567905280
	---	Error Table &quot;siev&quot; has base -1237848064

a subsequent:

	cd $WORK
	make depend
	make all

now fails at:

	...
	gcc -L/usr/local/ssl/lib -L/usr/local//berkeley-db/lib -bind_at_load -ldl
-L/usr/local/berkeley-db/lib -ldb -L/usr/local/cyrus-sasl/lib -lsasl2 -lresolv
-ldl -o sievec sievec.o libsieve.a ../lib/libcyrus.a ../lib/libcyrus_min.a 
libsieve.a -L/usr/local//cyrus-sasl//lib  -lsasl2   -lresolv -lfl  
-L/usr/local//berkeley-db/lib  -ldb-4.3 -lssl -lcrypto  -lcom_err
	/usr/bin/ld: Undefined symbols:
	__et_list
	collect2: ld returned 1 exit status
	make[1]: *** [sievec] Error 1
	make: *** [all] Error 1


which is a problem in $WORK/SIEVE/sieve_err.c ...

now what I don&apos;t (yet) know is if i&apos;m better, or worse off, using the awk-able
compile_et.sh bundled with cyrus, or not ...

for reference/comparison, I&apos;ve posted the OSX /usr/bin/compile_et (perl script)
here:

	http://paste.lisp.org/display/14222

thoughts?

richard</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="OpenMacNews">openmacnews@gmail.com</who>
            <bug_when>2005-12-02 02:21:23 EDT</bug_when>
            <thetext>it&apos;s also probably worth noting that, on OSX 10.4.3:

% ls -al /usr/lib/*com_err*
        lrwxr-xr-x  1 root wheel 54 Nov  1 12:12 libcom_err.dylib -&gt;
/System/Library/Frameworks/Kerberos.framework/Kerberos
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="OpenMacNews">openmacnews@gmail.com</who>
            <bug_when>2005-12-02 02:38:12 EDT</bug_when>
            <thetext>finally (for tonite) i&apos;m reading through:

	./cmulocal/README.andrew

and find the text:

CMU_COMERR
  Requires that com_err exist in the collection (at CMU, do this by
  running &quot;cvs checkout com_err&quot;, and adding com_err to DIST_SUBDIRS
  in your Makefile.am).

  It sets the output variable COMPILE_ET to the compile_et program to
  use, and adds the appropriate paths to LDFLAGS and CPPFLAGS.

  It does *not* add -lcom_err to LIBS (this would cause later library
  checks to fail if com_err needs to be built), so Makefiles need to
  explicitly add -lcom_err (which, after all, should always exist as
  long as the com_err compile doesn&apos;t blow up).  Makefiles should do
  this by using LIB_COMERR, which will substitute to the appropriate
  magic to use to grab the library.  (This may involve a libtool archive;
  you should be using libtool to link your program if you distribute
  libraries with it that the program may link against).

  Note that com_err will only be compiled if the configure script
  can&apos;t find compile_et or libcom_err; if the system already has them,
  the configure script will use the system installation (although, due
  to some autoconf wonkiness, com_err will still be configured; it just
  won&apos;t show up in the @subdirs@ expansion).

for which:

(a) i don&apos;t understand the implications in my case
(b) i&apos;m nonetheless *more* suspicious of the compile_et/com_err issues ...

best for me to shut up now and wait for some *knowledgeable* insight.

richard</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">murch@andrew.cmu.edu</who>
            <bug_when>2005-12-02 08:15:37 EDT</bug_when>
            <thetext>Its too early for me to read an understand everything that you posted, but if
the compile_et in OSX is broken, why not just pass --with-com_err=yes to
configure, which will force it to use the one shipped with Cyrus.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="OpenMacNews">openmacnews@gmail.com</who>
            <bug_when>2005-12-02 11:59:39 EDT</bug_when>
            <thetext>hi ken,

&gt; why not just pass --with-com_err=yes to configure, which will force it to use
the one shipped with Cyrus

hrm.

um ... er ... (digging in my notes) ... well, because (apparently), from
./configure:

	--with-com_err=PATH     use com_err from path -- includes in PATH/include,
	                          libs in PATH/lib, and compile_et in PATH/bin

which, to my naiive read, suggested that to NOT use &quot;com_err from path&quot;, and
therefore USE the cyrus-included one, one was to *OMIT* &quot;--with-com_err&quot;.

and, omitting it causes probs not finding lcom_err, etc., which is what (quite a
while ago, with list discussion) led me to the use of:

	perl -pi -e &apos;s/\/usr\/lib\/libcom_err.a/-lcom_err/g&apos; ./config.status
	perl -pi -e &apos;s/\/usr\/lib\/libcom_err.a/-lcom_err/g&apos; ./imap/Makefile
	perl -pi -e &apos;s/\/usr\/lib\/libcom_err.a/-lcom_err/g&apos; ./master/Makefile
	perl -pi -e &apos;s/\/usr\/lib\/libcom_err.a/-lcom_err/g&apos; ./notifyd/Makefile
	perl -pi -e &apos;s/\/usr\/lib\/libcom_err.a/-lcom_err/g&apos; ./SIEVE/Makefile
	perl -pi -e &apos;s/\/usr\/lib\/libcom_err.a/-lcom_err/g&apos; ./timsieved/Makefile

and 

	--with-com_err=/usr

in the first place :-|  grrr.

(a suggestion, if I may? :

	a comment in the ./configure re: --with-com_err that &quot;=yes&quot; forces use of the
included com_err.)

soooooo, that said, let&apos;s try.

	--with-com_err=yes
	
		and, *NO*
	
	perl -pi -e ...

(tick ... tock ...)

good -- no &apos;make&apos; errors.

checking the previously unknown-error-code-generating &apos;imtest&apos; in a known fail
sit&apos;n:

% imtest -v \
	-t &quot;/var/MailServer/Data/CERTS/mail.testdomain.com.CYRUSkey.rsa.pem&quot; \
	-p imap \
	-m cram-md5 \
	-a testuser.admin@mail.testdomain.com \
	-u testuser.admin@mail.testdomain.com \
	-r mail.testdomain.com\
	localhost

console outputs:

	S: * OK mail.testdomain.com Cyrus IMAP4 v2.2.12 server ready
	C: C01 CAPABILITY
	S: * CAPABILITY IMAP4 IMAP4rev1 ACL QUOTA LITERAL+ MAILBOX-REFERRALS NAMESPACE
UIDPLUS ID NO_ATOMIC_RENAME UNSELECT CHILDREN MULTIAPPEND BINARY SORT
THREAD=ORDEREDSUBJECT THREAD=REFERENCES ANNOTATEMORE IDLE STARTTLS LOGINDISABLED
AUTH=DIGEST-MD5 AUTH=DIGEST-MD5 AUTH=DIGEST-MD5 SASL-IR LISTEXT LIST-SUBSCRIBED
	S: C01 OK Unknown Error Code: -1904809420
	C: S01 STARTTLS
	S: S01 OK Begin TLS negotiation now
	starting TLS engine
	setting up TLS connection
(snip)
	TLS connection established: TLSv1 with cipher AES256-SHA (256/256 bits)
	Asking for capabilities again since they might have changed
	C: C01 CAPABILITY
	S: * CAPABILITY IMAP4 IMAP4rev1 ACL QUOTA LITERAL+ MAILBOX-REFERRALS NAMESPACE
UIDPLUS ID NO_ATOMIC_RENAME UNSELECT CHILDREN MULTIAPPEND BINARY SORT
THREAD=ORDEREDSUBJECT THREAD=REFERENCES ANNOTATEMORE IDLE AUTH=DIGEST-MD5
AUTH=DIGEST-MD5 AUTH=DIGEST-MD5 SASL-IR LISTEXT LIST-SUBSCRIBED
	S: C01 OK Unknown Error Code: -1904809420
	C: A01 AUTHENTICATE CRAM-MD5
	S: A01 NO no mechanism available
	Authentication failed. generic failure
	Security strength factor: 256

note now that there&apos;s a *mix* of errors, with correctly-mapped strings:

	S: A01 NO no mechanism available

and still-UNmapped error codes:

	S: C01 OK Unknown Error Code: -1904809420


so, at the very least, it seems that there&apos;s an &apos;issue&apos; with OSX&apos;s sys-included
compile_et/com_err.

the use of cyrus&apos; embedded com_err seemingly works around SOME of it, but not
(yet) all ...

richard
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="OpenMacNews">openmacnews@gmail.com</who>
            <bug_when>2005-12-02 20:06:04 EDT</bug_when>
            <thetext>i note, also, that cyrus-sasl makes use of compile_et+com_err ... but that
there&apos;s no immediately obvious way in its ./configure to specify a &apos;bundled&apos;
version.

as a result, i presume (?) its built with the system&apos;s version.

if imapd is built with the bundled version, is this a potential conflict?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="OpenMacNews">openmacnews@gmail.com</who>
            <bug_when>2005-12-05 13:36:51 EDT</bug_when>
            <thetext>hi,

in trying to resolve this i&apos;ve attempted to force use of a &apos;standalone&apos;
instance/build of kerberos5 and its included com_err/compile_et, rather than
either the &apos;system&apos; or cyrus-bundled versions.

thought i can build a static version of krb5, i&apos;ve had no luck building dynamic
(yet).

AND, even with the static, i can&apos;t get the cyrus-build to use it. :-(

one point of note, however: the standalone build&apos;s compile_et seems to be the
awk version, similar to that bundled with cyrus, rather than the perl-script
that OSX includes.

although i remain suspicious of compile_et/com_err ... at this point, until i
can get the krb5 build to behave w/ cyrus, i&apos;m clearly flailing.

if/when you get around to it, let me know if you think this is the right/wrong
track.

thx.

richard</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="John P. Speno">spamfilter@macspeno.com</who>
            <bug_when>2006-01-26 10:01:17 EDT</bug_when>
            <thetext>Anyone got a workaround for this problem yet? I&apos;ll even take a nasty hack at this point :-)
Thanks!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">murch@andrew.cmu.edu</who>
            <bug_when>2006-01-26 10:05:17 EDT</bug_when>
            <thetext>Nope.  I don&apos;t have access to an OSX box to play with.  I&apos;ll have to ask some
others in my group if we have one.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="John P. Speno">spamfilter@macspeno.com</who>
            <bug_when>2006-01-27 09:57:00 EDT</bug_when>
            <thetext>Well, Apple includes in darwin cyrus 2.2.12 and you can find their version here:
http://www.opensource.apple.com/darwinsource/10.4.4.ppc/

Maybe that is of some help for this issue.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="John P. Speno">spamfilter@macspeno.com</who>
            <bug_when>2006-01-27 10:29:27 EDT</bug_when>
            <thetext>I think I got it working now. I used the --with-com_err to configure and used the included et/compile_et 
to build the *_err.c files like so:

cd imap &amp;&amp; sh ../compile_et *.et
cd ../SIEVE &amp;&amp; sh ../compile_et *.et

Now I just have to learn cyrus administration. :-)</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>