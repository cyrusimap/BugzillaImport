<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>1053</bug_id>
          
          <creation_ts>2001-12-03 18:59 EDT</creation_ts>
          <short_desc>STARTTLS allows the NULL cipher for plaintext login</short_desc>
          <delta_ts>2010-10-18 12:42:52 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.1.x</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</reporter>
          <assigned_to name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</assigned_to>
          <cc>ichbin@shadlen.org</cc>
          

      

      

      
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2001-12-03 18:59:35 EDT</bug_when>
            <thetext> </thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2001-12-03 19:00:12 EDT</bug_when>
            <thetext>STARTTLS could negotiate a trivial cipher; the server still accepts
&quot;allowplaintext&quot;.

Perhaps only accepting LOGIN if the external ssf &gt; sasl_minimum_layer makes
sense, though then the option is misnamed.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2002-02-27 00:03:51 EDT</bug_when>
            <thetext>Looking at the OpenSSL docs, I get the impressionn that the NULL ciphers are 
disabled by default, and must be explicitly turned on.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2002-02-28 17:02:27 EDT</bug_when>
            <thetext>I started noticing entries like these in my log:

Feb 28 15:46:52 eagle imapd[2729]: starttls: TLSv1 with cipher (NONE) (0/0 bits 
new) no authentication
Feb 28 15:46:52 eagle imapd[2729]: Success, closing connection

It kind of looks like the negotiation failed (ie, the immediate closing and no 
login), but we still reported the connection info.  I&apos;m going to look into some 
of the return codes from the SSL stuff.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2002-03-01 13:07:00 EDT</bug_when>
            <thetext>Assuming that we are talking about the logging of the NONE cipher, this is not 
really a security problem (the connection is closed), just an annoyance.  We 
should bail is SSL_accept() == 0.  Otherwise, I don&apos;t see where the NONE cipher 
is allowed in Cyrus (its not allowed by default in OpenSSL), but I added a 
tls_cipher_list option to control the list of available ciphers allowed.

SSL_accept(3):

RETURN VALUES
       The following return values can occur:

       1   The TLS/SSL handshake was successfully completed, a
           TLS/SSL connection has been established.

       0   The TLS/SSL handshake was not successful but was shut
           down controlled and by the specifications of the
           TLS/SSL protocol. Call SSL_get_error() with the return
           value ret to find out the reason.

       &lt;0  The TLS/SSL handshake was not successful because a
           fatal error occurred either at the protocol level or a
           connection failure occurred. The shutdown was not
           clean. It can also occur of action is need to continue
           the operation for non-blocking BIOs. Call
           SSL_get_error() with the return value ret to find out
           the reason.
</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>