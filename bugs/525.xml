<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>525</bug_id>
          
          <creation_ts>2001-07-11 07:50 EDT</creation_ts>
          <short_desc>audit mechanisms for client-send-first/server-send-last problems</short_desc>
          <delta_ts>2001-07-30 13:52:42 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus SASL</product>
          <component>SASL</component>
          <version>2.0</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          <blocked>524</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</reporter>
          <assigned_to name="Rob Siemborski">rjs3@andrew.cmu.edu</assigned_to>
          
          

      

      

      
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2001-07-11 07:50:26 EDT</bug_when>
            <thetext>the xxx in digestmd5.c is a symptom of the fact that the v1 code didn&apos;t deal 
well with client-send-first or server-send-last SASL profiles.

i vaguely recall a conversation with john myers (jgmyers@iplanet.com) and chris 
newman where john claimed that to deal with server-send-last problems (when a 
server can return data and success simultaneously, a la ACAP/LDAP) we needed a 
flag to sasl_{client,server}_new indicating that the protocol supported that.
the middleware would then do the adjustment for protocols that didn&apos;t, and all 
mechanisms would happily assume that the protocol supported it.

so with server-send-last profiles, you get a 

sasl_server_step(...) = SASL_OK, with serverout set to some string.

the client then does a step, even though it already got the protocol OK from 
the server, since it might have to verify mutual authentication.  but this 
means that it always needs to step for those protocols, even if there wasn&apos;t a 
server-send-last string (otherwise an evil remote server would just omit 
sending the last string and we wouldn&apos;t catch it).  but obviously some 
mechanisms just don&apos;t have server-send-last.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2001-07-19 18:48:28 EDT</bug_when>
            <thetext>should be much better now except for random mechs that do client-first at
random.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>