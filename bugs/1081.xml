<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>1081</bug_id>
          
          <creation_ts>2002-01-10 18:05 EDT</creation_ts>
          <short_desc>ctl_cyrusdb should help with db3 archival/removal of log files</short_desc>
          <delta_ts>2010-10-18 12:42:52 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.1.x</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</reporter>
          <assigned_to name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</assigned_to>
          
          

      

      

      
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2002-01-10 18:05:43 EDT</bug_when>
            <thetext>ctl_cyrusdb should probably copy the (important) databases and log files to a
seperate directory, and then remove all log files it can (whatever db_archive
returns).

thus when the filesystem is backed up, there&apos;s always a copy of the database
around that&apos;s been copied in the proper order and can be used for catastrophic
recovery.  also, that was admins don&apos;t have to remove the log files themselves.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2002-01-22 10:39:53 EDT</bug_when>
            <thetext>should this be a standard or hot backup as described by 
http://www.sleepycat.com/docs/ref/transapp/archival.html?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2002-01-22 10:58:00 EDT</bug_when>
            <thetext>should the archival/removal take place during checkpointing (-c) option, or 
have its own archive option (-a)?  checkpointing has to be done before 
archiving.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2002-01-31 12:11:42 EDT</bug_when>
            <thetext>so in general i don&apos;t think we actually have to archive anything that&apos;s output
from db_archive.

i think it could be done after a checkpoint, or maybe it should be another
process that&apos;s done less frequently.

i see something like:
/var/imap/db
/var/imap/db.back1
/var/imap/db.back2

every &quot;archival&quot; cycle we (in shell commands; this should probably be translated
to C):
cd /var/imap/db
rm `db_archive`
cd /var/imap
rm -rf db.back2
mv db.back1 db.back2
mkdir db.back1
cp mailboxes.db db.back1
cd /var/imap/db
cp `db_archive -l` ../db.back1


this way we always have a clean copy to backup (db.back1 or db.back2 will always
have a valid snapshot from some point in time) and we don&apos;t waste space backing
up log files that don&apos;t matter.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2002-02-05 16:36:12 EDT</bug_when>
            <thetext>committed implementation.  tested it locally and nothing bad happened</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>