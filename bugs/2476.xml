<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2476</bug_id>
          
          <creation_ts>2004-08-06 09:58 EDT</creation_ts>
          <short_desc>sievec coredumps when processing script with &quot;:localpart :is&quot; syntax</short_desc>
          <delta_ts>2010-10-18 12:43:06 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Sieve</component>
          <version>2.2.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P1</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Miroslav Zubcic">miroslav.zubcic@nimium.hr</reporter>
          <assigned_to name="Rob Siemborski">rjs3@andrew.cmu.edu</assigned_to>
          <cc>adkinss@ohio.edu</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Miroslav Zubcic">miroslav.zubcic@nimium.hr</who>
            <bug_when>2004-08-06 09:58:12 EDT</bug_when>
            <thetext>Hi people!

I&apos;m having troubles migrating cyrus imapd server to new iron box.
I hope I gave you enough debuging info here.

Platform: IA64 (Itanium)
OS: Linux
Distro: Enterprise server 3.0 (Update2)
Cyrus Imapd server 2.2.6, 2.2.8
Sasl version: 2.1.18
gcc 3.2.3
binutils 2.14.90.0.4
flex: 2.5.4a

How sievec linked:
        libsasl2.so.2 =&gt; /usr/lib/libsasl2.so.2 (0x2000000000040000)
        libresolv.so.2 =&gt; /lib/libresolv.so.2 (0x200000000008c000)
        libssl.so.4 =&gt; /lib/libssl.so.4 (0x20000000000c0000)
        libcrypto.so.4 =&gt; /lib/libcrypto.so.4 (0x200000000013c000)
        libdb-4.2.so =&gt; /usr/lib/tls/libdb-4.2.so (0x2000000000340000)
        libcom_err.so.2 =&gt; /lib/libcom_err.so.2 (0x2000000000530000)
        libc.so.6.1 =&gt; /lib/tls/libc.so.6.1 (0x2000000000544000)
        libdl.so.2 =&gt; /lib/libdl.so.2 (0x20000000007b0000)
        libcrypt.so.1 =&gt; /lib/libcrypt.so.1 (0x20000000007c8000)
        libgssapi_krb5.so.2 =&gt; /local/lib/libgssapi_krb5.so.2 (0x2000000000810000)
        libkrb5.so.3 =&gt; /local/lib/libkrb5.so.3 (0x2000000000848000)
        libcom_err.so.3 =&gt; /local/lib/libcom_err.so.3 (0x2000000000930000)
        libk5crypto.so.3 =&gt; /local/lib/libk5crypto.so.3 (0x2000000000944000)
        libz.so.1 =&gt; /usr/lib/libz.so.1 (0x2000000000994000)
        libpthread.so.0 =&gt; /lib/tls/libpthread.so.0 (0x20000000009c0000)
        /lib/ld-linux-ia64.so.2 =&gt; /lib/ld-linux-ia64.so.2 (0x2000000000000000)

sievec with LD_ASSUME_KERNEL=2.4.0 (old linux thread model) will also core dump.
It will core dump wheater compiled with optimization, or with `-g&apos;.

Signal 11 will occur when sievec finds &quot;:localpart :is&quot; syntax in sieve script.
When this part of script is commented out, bytecode file is normaly produced.
With envelope/localpart/domain, segmentation fault will happen.

How to reproduce:

Test script:
--------------------------------------------------
require [&quot;fileinto&quot;, &quot;regex&quot;, &quot;envelope&quot;];

if header :regex &quot;from&quot; &quot;Cron .*&quot;
{
        fileinto &quot;INBOX.cron&quot;;
}
elsif envelope :localpart :is &quot;From&quot; &quot;foo&quot;
{
        fileinto &quot;INBOX.foo&quot;;
}
elsif envelope :localpart :is &quot;From&quot; &quot;bar&quot;
{
        fileinto &quot;INBOX.bar&quot;;
}
--------------------------------------------------

Action:

--------------------------------------------------------------
# /usr/src/redhat/BUILD/cyrus-imapd-2.2.8/sieve/sievec test.script test.bc
Segmentation fault (core dumped)
# gdb -q /usr/src/redhat/BUILD/cyrus-imapd-2.2.8/sieve/sievec core..27478
Using host libthread_db library &quot;/lib/tls/libthread_db.so.1&quot;.
Core was generated by `/usr/src/redhat/BUILD/cyrus-imapd-2.2.8/sieve/sievec
test.script test.bc&apos;.
Program terminated with signal 11, Segmentation fault.
Reading symbols from /usr/lib/libsasl2.so.2...done.
Loaded symbols for /usr/lib/libsasl2.so.2
Reading symbols from /lib/libresolv.so.2...done.
Loaded symbols for /lib/libresolv.so.2
Reading symbols from /lib/libssl.so.4...done.
Loaded symbols for /lib/libssl.so.4
Reading symbols from /lib/libcrypto.so.4...done.
Loaded symbols for /lib/libcrypto.so.4
Reading symbols from /usr/lib/tls/libdb-4.2.so...done.
Loaded symbols for /usr/lib/tls/libdb-4.2.so
Reading symbols from /lib/libcom_err.so.2...done.
Loaded symbols for /lib/libcom_err.so.2
Reading symbols from /lib/tls/libc.so.6.1...done.
Loaded symbols for /lib/tls/libc.so.6.1
Reading symbols from /lib/libdl.so.2...done.
Loaded symbols for /lib/libdl.so.2
Reading symbols from /lib/libcrypt.so.1...done.
Loaded symbols for /lib/libcrypt.so.1
Reading symbols from /local/lib/libgssapi_krb5.so.2...done.
Loaded symbols for /local/lib/libgssapi_krb5.so.2
Reading symbols from /local/lib/libkrb5.so.3...done.
Loaded symbols for /local/lib/libkrb5.so.3
Reading symbols from /local/lib/libcom_err.so.3...done.
Loaded symbols for /local/lib/libcom_err.so.3
Reading symbols from /local/lib/libk5crypto.so.3...done.
Loaded symbols for /local/lib/libk5crypto.so.3
Reading symbols from /usr/lib/libz.so.1...done.
Loaded symbols for /usr/lib/libz.so.1
Reading symbols from /lib/tls/libpthread.so.0...done.
Loaded symbols for /lib/tls/libpthread.so.0
Reading symbols from /lib/ld-linux-ia64.so.2...done.
Loaded symbols for /lib/ld-linux-ia64.so.2
#0  bc_stringlist_generate (codep=30, retval=0x600000000000ca60, sl=0x12f) at
bc_generate.c:100
100             assert((cur-&gt;s)!=NULL);
(gdb) bt
#0  bc_stringlist_generate (codep=30, retval=0x600000000000ca60, sl=0x12f) at
bc_generate.c:100
#1  0x4000000000007ac0 in bc_test_generate (codep=29, retval=0x600000000000ca60,
t=0x6000000000011bc0) at bc_generate.c:354
#2  0x400000000000a790 in bc_action_generate (codep=18,
retval=0x600000000000ca60, c=0x6000000000011d80) at bc_generate.c:620
#3  0x400000000000a9e0 in bc_action_generate (codep=3,
retval=0x600000000000ca60, c=0x6000000000011dc0) at bc_generate.c:642
#4  0x400000000000ae60 in sieve_generate_bytecode (retval=0x60000fffffffb588,
s=0x600000000000cb30) at bc_generate.c:697
#5  0x4000000000003470 in main (argc=3, argv=0x60000fffffffb9e8) at sievec.c:119
(gdb) print cur-&gt;s
Cannot access memory at address 0x12f
--------------------------------------------------------------

Looks like bug is someware in sieve/sievec.c. If I comment out
&quot;assert((cur-&gt;s)!=NULL);&quot;
it will broke on line 106 - retval-&gt;data[codep++].len = strlen(cur-&gt;s);

Hope this helps ... I don&apos;t know how to fix this and produce patch myself.

Bye ...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Scott Adkins">adkinss@ohio.edu</who>
            <bug_when>2004-08-30 00:32:50 EDT</bug_when>
            <thetext>Created an attachment (id=306)
Solves core dumping problems with sievec when compiling scripts that use
&apos;envelope&apos; or &apos;address&apos; on some platforms.

I ran into this problem on Tru64 5.x as well.  In fact, any sieve script that
use either &apos;envelope&apos; or &apos;address&apos; (as opposed to &apos;header&apos;) core dump, and it
was not dependant on the usage of &quot;:localpart :is&quot; or anything.  In fact, I got
core dumps with just using something as simple as &quot;address :contains&quot;.

The debugging output I found was identical to what was posted above, leading me
to the same assert() function call that was core dumping inside the
bc_test_generate() function.

I traced the problem back to a the &quot;Test&quot; structure defined in sieve/tree.h. 
Basically, the structure contains a union.  The union defines three structures,
two of which share many of the same variable names.  The problem is that the
variable &apos;relation&apos; is defined in a different location in each of the structs. 
The following is a trimmed down version of the structure.

struct Test {
    union {
	struct { /* it&apos;s a header test */
	    int comptag;
	    char * comparator;
	    int relation;
	    void *comprock;
	    .....
	} h;
	struct { /* it&apos;s an address or envelope test */
	    int comptag;
	    int relation;
	    char * comparator;
	    void *comprock;
	    .....
	} ae;
    }
}

By moving the variable &apos;relation&apos; in one structure or the other to the matching
location of the other structure, it fixed the problem and I no longer have core
dumps.	This certainly fixes the problem in Tru64, where I believe it is just a
weirdness of the &apos;cc&apos; compiler of that platform.  I was surprised to see what
looks like the same problem on a Linux platform...

I will attach the patch that I used to solve my problem.  Can somebody verify
if this solves the problem on the Linux platform too?
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Miroslav Zubcic">miroslav.zubcic@nimium.hr</who>
            <bug_when>2004-08-30 06:43:04 EDT</bug_when>
            <thetext>Yes. This little patch also solves problem on IA64 (itanium) with
GNU/Linux and gcc 3.2.3. I just edited structure in sieve/tree.h and
moved integer relation down, recompiled sievec, and tested with test
script from my example which I posted here initialy. No SIGSEGV
anymore, so I can remove 32-bit workaround compiled on PC and running
under /emul/ia32-linux/ on itanium, and use native binary.

Thanks Scott.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">ken@oceana.com</who>
            <bug_when>2004-08-30 07:35:24 EDT</bug_when>
            <thetext>Actually, I *believe* that the fix to the problem is also the fix to 2477, but I
committed this anyways because it makes sense to keep the fields in the same
order for consistency.</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>306</attachid>
            <date>2004-08-30 00:32 EDT</date>
            <desc>Solves core dumping problems with sievec when compiling scripts that use &apos;envelope&apos; or &apos;address&apos; on some platforms.</desc>
            <filename>SIEVE_UNION.patch</filename>
            <type>text/plain</type>
            <size>436</size>
            <attacher>adkinss@ohio.edu</attacher>
            
              <data encoding="base64">ZGlmZiAtdXIgaW1hcGQtMi4yLjgtb2xkL3NpZXZlL3RyZWUuaCBpbWFwZC0yLjIuOC1uZXcvc2ll
dmUvdHJlZS5oCi0tLSBpbWFwZC0yLjIuOC1vbGQvc2lldmUvdHJlZS5oCTIwMDQtMDgtMjkgMjM6
NDQ6MTguMDAwMDAwMDAwIC0wNDAwCisrKyBpbWFwZC0yLjIuOC1uZXcvc2lldmUvdHJlZS5oCTIw
MDQtMDgtMjkgMjM6Mzc6MDQuMDAwMDAwMDAwIC0wNDAwCkBAIC02OSw4ICs2OSw4IEBACiAJfSBo
OwogCXN0cnVjdCB7IC8qIGl0J3MgYW4gYWRkcmVzcyBvciBlbnZlbG9wZSB0ZXN0ICovCiAJICAg
IGludCBjb21wdGFnOwotCSAgICBpbnQgcmVsYXRpb247IAogCSAgICBjaGFyICogY29tcGFyYXRv
cjsKKwkgICAgaW50IHJlbGF0aW9uOyAKIAkgICAgdm9pZCAqY29tcHJvY2s7CiAJICAgIHN0cmlu
Z2xpc3RfdCAqc2w7CiAJICAgIHN0cmluZ2xpc3RfdCAqcGw7Cg==
</data>        

          </attachment>
      

    </bug>

</bugzilla>