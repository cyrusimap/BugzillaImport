<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3459</bug_id>
          
          <creation_ts>2011-05-09 17:48 EDT</creation_ts>
          <short_desc>client.c:138:1: error: static declaration of &apos;getpassphrase&apos; follows non-static declaration</short_desc>
          <delta_ts>2012-06-03 13:33:52 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus SASL</product>
          <component>SASL</component>
          <version>2.1.x</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Solaris</op_sys>
          <bug_status>RESOLVED</bug_status>
          <resolution>WORKSFORME</resolution>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Pavel Heimlich">tropikhajma@gmail.com</reporter>
          <assigned_to name="Alexey Melnikov">Alexey.Melnikov@isode.com</assigned_to>
          <cc>Alexey.Melnikov@isode.com</cc>
    
    <cc>woods-bugzilla.andrew.cmu.edu@planix.ca</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Pavel Heimlich">tropikhajma@gmail.com</who>
            <bug_when>2011-05-09 17:48:32 EDT</bug_when>
            <thetext>buiding cyrus-sasl 2.1.23 on Solaris 11e, x86 with gcc 4.5.2 fails with the below error.

To avoid it, I have to run configure as
CFLAGS=&quot;-DHAVE_GETPASSPHRASE&quot; ./configure


I guess configure should detect that automagically.



...
Making all in sample
gmake[2]: Entering directory `/home/test/packages/BUILD/cyrus-sasl-2.1.21/i386/cyrus-sasl-2.1.21/sample&apos;
if /usr/gcc/4.5/bin/gcc -DHAVE_CONFIG_H -I. -I. -I.. -I../include    -Wall -W -g -O2 -MT client.o -MD -MP -MF &quot;.deps/client.Tpo&quot; \
	  -c -o client.o `test -f &apos;client.c&apos; || echo &apos;./&apos;`client.c; \
	then mv &quot;.deps/client.Tpo&quot; &quot;.deps/client.Po&quot;; \
	else rm -f &quot;.deps/client.Tpo&quot;; exit 1; \
	fi
client.c: In function &apos;getrealm&apos;:
client.c:81:27: warning: unused parameter &apos;context&apos;
client.c: In function &apos;simple&apos;:
client.c:106:25: warning: unused parameter &apos;context&apos;
client.c: At top level:
client.c:138:1: error: static declaration of &apos;getpassphrase&apos; follows non-static declaration
/usr/include/stdlib.h:230:14: note: previous declaration of &apos;getpassphrase&apos; was here
...
...
gmake[2]: *** [client.o] Error 1</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Greg A. Woods">woods-bugzilla.andrew.cmu.edu@planix.ca</who>
            <bug_when>2011-12-16 22:31:53 EDT</bug_when>
            <thetext>Created an attachment (id=1446)
updated fixes for static-linking</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Greg A. Woods">woods-bugzilla.andrew.cmu.edu@planix.ca</who>
            <bug_when>2011-12-16 22:33:59 EDT</bug_when>
            <thetext>oops, my attachment is now on the wrong bug and I see no way to delete an attachment from here.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Alexey Melnikov">Alexey.Melnikov@isode.com</who>
            <bug_when>2012-06-01 12:53:18 EDT</bug_when>
            <thetext>configure.in is already checking for &quot;getpassphrase&quot;. Maybe it didn&apos;t detect it? Can you try again with 2.1.25?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Pavel Heimlich">tropikhajma@gmail.com</who>
            <bug_when>2012-06-03 13:33:52 EDT</bug_when>
            <thetext>indeed, 2.1.25 is detecting it alright


$ ./configure 
...
checking for getpassphrase... yes
...</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1446</attachid>
            <date>2011-12-16 22:31 EDT</date>
            <desc>updated fixes for static-linking</desc>
            <filename>sasl-2.patch</filename>
            <type>text/plain</type>
            <size>32492</size>
            <attacher>woods-bugzilla.andrew.cmu.edu@planix.ca</attacher>
            
              <data encoding="base64">SGVyZSdzIG15IG1haW4gbG9jYWwgcGF0Y2ggc2V0IGluY2x1ZGluZyBmaXhlcyB0byBtYWtlIHN0
YXRpYyBsaW5raW5nCmFjdHVhbGx5IHdvcmsgcHJvcGVybHkuICBUaGVzZSBhcmUgaW4gdGhlIGNv
bmZpZ3VyZS5pbiBhbmQgTWFrZWZpbGUuYW0KY2hhbmdlcy4KCkFsc28gaW5jbHVkZWQgYXJlIHNv
bWUgbWlub3IgcGF0Y2hlcyB0byBtYWtlIGRlYnVnZ2luZyBlYXNpZXIsIGFzIHdlbGwKYXMgc29t
ZSBmaXhlcyB0byBtYWtlIHRoaW5ncyB3b3JrIHByb3Blcmx5IG9uIFNvbGFyaXMtMTAgd2l0aCBz
eXN0ZW0KcGFzc3dvcmQgYXV0aGVudGljYXRpb24uICBUaGVzZSBhcmUgaW4gdGhlICouYyBjaGFu
Z2VzLgoKCkluZGV4OiB1dGlscy9NYWtlZmlsZS5hbQo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3Zz
L3NyYy9zYXNsL3V0aWxzL01ha2VmaWxlLmFtLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjM0CmRp
ZmYgLXUgLXIxLjM0IE1ha2VmaWxlLmFtCi0tLSB1dGlscy9NYWtlZmlsZS5hbQkxOCBNYXkgMjAw
NiAxODozMzo0NyAtMDAwMAkxLjM0CisrKyB1dGlscy9NYWtlZmlsZS5hbQkxNyBEZWMgMjAxMSAw
MzowOTowMyAtMDAwMApAQCAtNDMsNyArNDMsNiBAQAogIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMj
IyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIwogCiBhbGxfc2FzbF9saWJz
ID0gLi4vbGliL2xpYnNhc2wyLmxhICQoU0FTTF9EQl9MSUIpICQoTElCX1NPQ0tFVCkKLWFsbF9z
YXNsX3N0YXRpY19saWJzID0gLi4vbGliLy5saWJzL2xpYnNhc2wyLmEgJChTQVNMX0RCX0xJQikg
JChMSUJfU09DS0VUKSAkKEdTU0FQSUJBU0VfTElCUykgJChHU1NBUElfTElCUykgJChTQVNMX0tS
Ql9MSUIpICQoTElCX0RFUykgJChQTEFJTl9MSUJTKSAkKFNSUF9MSUJTKSAkKExJQl9NWVNRTCkg
JChMSUJfUEdTUUwpICQoTElCX1NRTElURSkKIAogc2Jpbl9QUk9HUkFNUyA9IEBTQVNMX0RCX1VU
SUxTQCBAU01UUFRFU1RfUFJPR1JBTUAgcGx1Z2ludmlld2VyCiBFWFRSQV9QUk9HUkFNUyA9IHNh
c2xwYXNzd2QyIHNhc2xkYmxpc3R1c2VyczIgdGVzdHN1aXRlIHRlc3RzdWl0ZXN0YXRpYyBzbXRw
dGVzdCBwbHVnaW52aWV3ZXIKQEAgLTU4LDkgKzU3LDEyIEBACiAKIHNhc2xwYXNzd2QyX0xEQURE
ID0gLi4vc2FzbGRiL2xpYnNhc2xkYi5sYSAkKGFsbF9zYXNsX2xpYnMpCiBzYXNscGFzc3dkMl9T
T1VSQ0VTID0gc2FzbHBhc3N3ZC5jCisKIHNhc2xkYmxpc3R1c2VyczJfTERBREQgPSAuLi9zYXNs
ZGIvbGlic2FzbGRiLmxhICQoYWxsX3Nhc2xfbGlicykKIHNhc2xkYmxpc3R1c2VyczJfU09VUkNF
UyA9IHNhc2xkYmxpc3R1c2Vycy5jCisKIGRiY29udmVydGVyXzJfTERBREQgPSAuLi9zYXNsZGIv
bGlic2FzbGRiLmxhICQoYWxsX3Nhc2xfbGlicykKKwogcGx1Z2ludmlld2VyX0xEQUREID0gJChh
bGxfc2FzbF9saWJzKQogcGx1Z2ludmlld2VyX1NPVVJDRVMgPSBwbHVnaW52aWV3ZXIuYwogCkBA
IC02OSw4ICs3MSwxMSBAQAogQ0xFQU5GSUxFUz0kKEVYVFJBX1BST0dSQU1TKQogCiB0ZXN0c3Vp
dGVzdGF0aWNfU09VUkNFUyA9IHRlc3RzdWl0ZS5jCi10ZXN0c3VpdGVzdGF0aWNfTERBREQgPSAk
KGFsbF9zYXNsX3N0YXRpY19saWJzKSBARE1BTExPQ19MSUJTQCBAU0FTTF9ETF9MSUJACi10ZXN0
c3VpdGVzdGF0aWNfREVQRU5ERU5DSUVTID0gLi4vbGliLy5saWJzL2xpYnNhc2wyLmEKKyMgWFhY
IHdoYXQvd2h5IFNBU0xfRExfTElCIT8hPyE/Cit0ZXN0c3VpdGVzdGF0aWNfTERBREQgPSAkKGFs
bF9zYXNsX2xpYnMpIEBETUFMTE9DX0xJQlNAIEBTQVNMX0RMX0xJQkAKKyMgbGlidG9vbCB0cmFu
c2xhdGVzIC1zdGF0aWMgcHJvcGVybHksIGFuZCBnZXRzIGFsbCBkZXBlbmRlbnQgbGlicyB0b28g
dXNpbmcgLmxhIGZpbGVzIQordGVzdHN1aXRlc3RhdGljX0xERkxBR1MgPSAtc3RhdGljCit0ZXN0
c3VpdGVzdGF0aWNfREVQRU5ERU5DSUVTID0gLi4vbGliL2xpYnNhc2wyLmxhCiAKIHNtdHB0ZXN0
X1NPVVJDRVMgPQogc210cHRlc3RfREVQRU5ERU5DSUVTID0gLi9zbXRwdGVzdC5sbyAuL2xpYnNm
c2FzbDIubGEKSW5kZXg6IHNhc2xhdXRoZC91dGlscy5jCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9j
dnMvc3JjL3Nhc2wvc2FzbGF1dGhkL3V0aWxzLmMsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuNApk
aWZmIC11IC1yMS40IHV0aWxzLmMKLS0tIHNhc2xhdXRoZC91dGlscy5jCTkgU2VwIDIwMDMgMTU6
Mzg6MTUgLTAwMDAJMS40CisrKyBzYXNsYXV0aGQvdXRpbHMuYwkxNyBEZWMgMjAxMSAwMzowOTow
MyAtMDAwMApAQCAtMjI3LDYgKzIyNyw1MSBAQAogCX0KIH0KIAorI2lmbmRlZiBIQVZFX0FTUFJJ
TlRGCisKKyMgaW5jbHVkZSA8c3RkYXJnLmg+CisKKy8qCisgKiBhc3ByaW50ZiAtLSB3b3JrIGFy
b3VuZCBsYW1lIHN5c3RlbXMgdGhhdCBoYXZlbid0IGFkZGVkIHRoZWlyIG93biB5ZXQKKyAqCisg
KiBYWFggcmVsaWVzIG9uIGEgdmFsaWQgd29ya2luZyAoU3VTdjMpIHZzbnByaW50ZigpLCBPSyBv
biBTdW5PUy01LjEwIEJVVCBOT1QgQkVGT1JFIQorICovCitpbnQKK2FzcHJpbnRmKGNoYXIgKipz
dHIsCisJIGNvbnN0IGNoYXIgKmZtdCwKKwkgLi4uKQoreworICAgICAgICB2YV9saXN0IGFwOwor
CWNoYXIgKm5ld3N0cjsKKwlzaXplX3QgbGVuOworCWludCByZXQ7CisKKwkqc3RyID0gTlVMTDsK
KworCXZhX3N0YXJ0KGFwLCBmbXQpOworCXJldCA9IHZzbnByaW50ZigoY2hhciAqKSBOVUxMLCAo
c2l6ZV90KSAwLCBmbXQsIGFwKTsKKwl2YV9lbmQoYXApOworCWlmIChyZXQgPCAwKSB7CisJCXJl
dHVybiByZXQ7CisJfQorCWxlbiA9IChzaXplX3QpIHJldCArIDE7CQkvKiBhbGxvdyBmb3IgbnVs
ICovCisJaWYgKChuZXdzdHIgPSBtYWxsb2MobGVuKSkgPT0gTlVMTCkgeworCQlyZXR1cm4gKC0x
KTsKKwl9CisJdmFfc3RhcnQoYXAsIGZtdCk7CisJcmV0ID0gdnNucHJpbnRmKG5ld3N0ciwgbGVu
LCBmbXQsIGFwKTsKKwl2YV9lbmQoYXApOworCWlmIChyZXQgPj0gMCAmJiAoc2l6ZV90KSByZXQg
PCBsZW4pIHsgLyogWFhYIChyZXQgPT0gbGVuLTEpICovCisJCSpzdHIgPSBuZXdzdHI7CisJfSBl
bHNlIHsKKwkJZnJlZShuZXdzdHIpOworCQlyZXR1cm4gcmV0OworCX0KKworCXJldHVybiByZXQ7
Cit9CisjZW5kaWYgLyogSEFWRV9BU1BSSU5URiAqLworCiAjaWZuZGVmIEhBVkVfU1RSTENQWQog
Lyogc3RybGNweSAtLSBjb3B5IHN0cmluZyBzbWFydGx5LgogICoKSW5kZXg6IHNhc2xhdXRoZC9z
YXNsYXV0aGQubWRvYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zYXNsL3Nhc2xhdXRo
ZC9zYXNsYXV0aGQubWRvYyx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4xOQpkaWZmIC11IC1yMS4x
OSBzYXNsYXV0aGQubWRvYwotLS0gc2FzbGF1dGhkL3Nhc2xhdXRoZC5tZG9jCTExIEFwciAyMDA5
IDIwOjA4OjQ4IC0wMDAwCTEuMTkKKysrIHNhc2xhdXRoZC9zYXNsYXV0aGQubWRvYwkxNyBEZWMg
MjAxMSAwMzowOTowMyAtMDAwMApAQCAtMTAsNyArMTAsNyBAQAogLlwiIG1hbnBhZ2UgaW4gc2Fz
bGF1dGhkLjggd2hlbmV2ZXIgeW91IGNoYW5nZSB0aGlzIHNvdXJjZQogLlwiIHZlcnNpb24uIE9u
bHkgdGhlIHByZS1mb3JtYXR0ZWQgbWFucGFnZSBpcyBpbnN0YWxsZWQuCiAuXCIKLS5EZCAxMCAy
NCAyMDAyCisuRGQgMTIgMTIgMjAwNQogLkR0IFNBU0xBVVRIRCA4CiAuT3MgIkNNVS1TQVNMIgog
LlNoIE5BTUUKQEAgLTk4LDggKzk4LDEzIEBACiBEaXNhYmxlIHRoZSB1c2Ugb2YgYSBsb2NrIGZp
bGUgZm9yIGNvbnRyb2xsaW5nIGFjY2VzcyB0byBhY2NlcHQoKS4KIC5JdCBGbCByCiBDb21iaW5l
IHRoZSByZWFsbSB3aXRoIHRoZSBsb2dpbiAod2l0aCBhbiAnQCcgc2lnbiBpbiBiZXR3ZWVuKS4g
IGUuZy4KLWxvZ2luOiAiZm9vIiByZWFsbTogImJhciIgd2lsbCBnZXQgcGFzc2VkIGFzIGxvZ2lu
OiAiZm9vQGJhciIuICBOb3RlIHRoYXQKLXRoZSByZWFsbSB3aWxsIHN0aWxsIGJlIHBhc3NlZCwg
d2hpY2ggbWF5IGxlYWQgdG8gdW5leHBlY3RlZCBiZWhhdmlvdXIuCitsb2dpbjogImZvbyIgcmVh
bG06ICJiYXIiIHdpbGwgZ2V0IHBhc3NlZCBhcyBsb2dpbjogImZvb0BiYXIiLiAgTm90ZQordGhh
dCB0aGUgcmVhbG0gd2lsbCBzdGlsbCBiZSBwYXNzZWQsIHdoaWNoIG1heSBsZWFkIHRvIHVuZXhw
ZWN0ZWQKK2JlaGF2aW9yIGZvciBhdXRoZW50aWNhdGlvbiBtZWNoYW5pc21zIHRoYXQgbWFrZSB1
c2Ugb2YgdGhlIHJlYWxtLAoraG93ZXZlciBmb3IgbWVjaGFuaXNtcyB3aGljaCBkb24ndCwgc3Vj
aCBhcworLkFyIGdldHB3ZW50ICwKK3RoaXMgaXMgdGhlIG9ubHkgd2F5IHRvIGF1dGhlbnRpY2F0
ZSBkb21haW4tc3BlY2lmaWMgdXNlcnMgc2hhcmluZyB0aGUKK3NhbWUgdXNlcmlkLgogLkl0IEZs
IHYKIFByaW50IHRoZSB2ZXJzaW9uIG51bWJlciBhbmQgYXZhaWxhYmxlIGF1dGhlbnRpY2F0aW9u
CiBtZWNoYW5pc21zIG9uIHN0YW5kYXJkIGVycm9yLCB0aGVuIGV4aXQuCkBAIC0xMTksNyArMTI0
LDcgQEAKIC5RcSBhdXRoZW50aWNhdGlvbiBtZWNoYW5pc21zICwKIGRlcGVuZGVudCB1cG9uIHRo
ZSBmYWNpbGl0aWVzIHByb3ZpZGVkIGJ5IHRoZSB1bmRlcmx5aW5nIG9wZXJhdGluZyBzeXN0ZW0u
CiBUaGUgbWVjaGFuaXNtIGlzIHNlbGVjdGVkIGJ5IHRoZQotLkZsIGFobworLkZsIGEKIGZsYWcg
ZnJvbSB0aGUgZm9sbG93aW5nIGxpc3Qgb2YgY2hvaWNlczoKIC5CbCAtdGFnIC13aWR0aCAia2Vy
YmVyb3M0IgogLkl0IExpIGRjZQpJbmRleDogc2FzbGF1dGhkL2NvbmZpZ3VyZS5pbgo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zYXNsL3Nhc2xhdXRoZC9jb25maWd1cmUuaW4sdgpyZXRy
aWV2aW5nIHJldmlzaW9uIDEuNjQKZGlmZiAtdSAtcjEuNjQgY29uZmlndXJlLmluCi0tLSBzYXNs
YXV0aGQvY29uZmlndXJlLmluCTUgU2VwIDIwMTEgMTQ6MTg6MTAgLTAwMDAJMS42NAorKysgc2Fz
bGF1dGhkL2NvbmZpZ3VyZS5pbgkxNyBEZWMgMjAxMSAwMzowOTowMyAtMDAwMApAQCAtNzcsNyAr
NzcsNyBAQAogICBBQ19ERUZJTkUoQVVUSF9TQVNMREIsW10sW0luY2x1ZGUgU0FTTGRiIFN1cHBv
cnRdKQogICBTQVNMX0RCX1BBVEhfQ0hFQ0soKQogICBTQVNMX0RCX0NIRUNLKCkKLSAgU0FTTF9E
Ql9MSUI9IiRTQVNMX0RCX0xJQiAuLi9zYXNsZGIvLmxpYnMvbGlic2FzbGRiLmFsIgorICBTQVNM
X0RCX0xJQj0iJFNBU0xfREJfTElCIC4uL3Nhc2xkYi8ubGlicy9saWJzYXNsZGIubGEiCiBmaQog
CiBBQ19BUkdfRU5BQkxFKGh0dHBmb3JtLCBbICAtLWVuYWJsZS1odHRwZm9ybSAgICAgICBlbmFi
bGUgSFRUUCBmb3JtIGF1dGhlbnRpY2F0aW9uIFtbbm9dXSBdLApAQCAtMTk1LDggKzE5NSw5IEBA
CiBkbmwgQ2hlY2tzIGZvciBsaWJyYXJ5IGZ1bmN0aW9ucy4KIEFDX1RZUEVfU0lHTkFMCiBBQ19D
SEVDS19GVU5DUyhnZXRob3N0bmFtZSBta2RpciBzb2NrZXQgc3RyZHVwKQorZG5sIE9ubHkgbG9v
ayBmb3Igb25lIG9yIHRoZSBvdGhlcgogQUNfQ0hFQ0tfRlVOQ1MoZ2V0c3BuYW0gZ2V0dXNlcnB3
LCBicmVhaykKLUFDX0NIRUNLX0ZVTkNTKHN0cmxjYXQgc3RybGNweSkKK0FDX0NIRUNLX0ZVTkNT
KGFzcHJpbnRmIHN0cmxjYXQgc3RybGNweSkKIAogaWYgdGVzdCAkYWNfY3ZfZnVuY19nZXRzcG5h
bSA9IHllczsgdGhlbgogCUFDX01TR19DSEVDS0lORyhpZiBnZXRwd25hbV9yL2dldHNwbmFtX3Ig
dGFrZSA1IGFyZ3VtZW50cykKSW5kZXg6IHNhc2xhdXRoZC9hdXRoX3NoYWRvdy5jCj09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3Nhc2wvc2FzbGF1dGhkL2F1dGhfc2hhZG93LmMsdgpyZXRy
aWV2aW5nIHJldmlzaW9uIDEuMTIKZGlmZiAtdSAtcjEuMTIgYXV0aF9zaGFkb3cuYwotLS0gc2Fz
bGF1dGhkL2F1dGhfc2hhZG93LmMJMTQgQXVnIDIwMDkgMTQ6NTg6MzggLTAwMDAJMS4xMgorKysg
c2FzbGF1dGhkL2F1dGhfc2hhZG93LmMJMTcgRGVjIDIwMTEgMDM6MDk6MDMgLTAwMDAKQEAgLTQ0
LDYgKzQ0LDcgQEAKICMgaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiAjIGluY2x1ZGUgPHRpbWUuaD4K
ICMgaW5jbHVkZSA8cHdkLmg+CisjIGluY2x1ZGUgPGVycm5vLmg+CiAjIGluY2x1ZGUgPHN5c2xv
Zy5oPgogCiAjaWZkZWYgSEFWRV9DUllQVF9ICkBAIC02MCw3ICs2MSw4IEBACiAjICBlbmRpZiAv
KiBXSVRIX1NTTF9ERVMgKi8KICMgZW5kaWYgLyogV0lUSF9ERVMgKi8KIAotI2VuZGlmIC8qICEg
SEFWRV9HRVRTUE5BTSAqLworIyBlbmRpZiAvKiAhIEhBVkVfR0VUU1BOQU0gKi8KKwogIyBpZmRl
ZiBIQVZFX0dFVFVTRVJQVwogIyAgaW5jbHVkZSA8dXNlcnB3Lmg+CiAjICBpbmNsdWRlIDx1c2Vy
c2VjLmg+CkBAIC0xMDksNiArMTExLDcgQEAKICAgICBjaGFyICpjcHc7CQkJCS8qIHBvaW50ZXIg
dG8gY3J5cHQoKSByZXN1bHQgKi8KICAgICBzdHJ1Y3QgcGFzc3dkCSpwdzsJCS8qIHJldHVybiBm
cm9tIGdldHB3bmFtX3IoKSAqLwogICAgIHN0cnVjdCBzcHdkICAgCSpzcDsJCS8qIHJldHVybiBm
cm9tIGdldHNwbmFtX3IoKSAqLworICAgIGludCBlcnJudW07CiAjICBpZmRlZiBfUkVFTlRSQU5U
CiAgICAgc3RydWN0IHBhc3N3ZCBwd2J1ZjsKICAgICBjaGFyIHB3ZGF0YVtQV0JVRlNaXTsJCS8q
IHB3YnVmIGluZGlyZWN0IGRhdGEgZ29lcyBpbiBoZXJlICovCkBAIC0xMjEsMTEgKzEyNCwxMCBA
QAogIyAgZGVmaW5lIFJFVFVSTih4KSByZXR1cm4gc3RyZHVwKHgpCiAKICAgICAvKgotICAgICAq
ICJNYWdpYyIgcGFzc3dvcmQgZmllbGQgZW50cmllcyBmb3IgU3VuT1MuCisgICAgICogIk1hZ2lj
IiBwYXNzd29yZCBmaWVsZCBlbnRyaWVzIGZvciBTdW5PUy9TeXNWCiAgICAgICoKLSAgICAgKiAq
TEsqIGlzIGhpbnRlZCBhdCBpbiB0aGUgc2hhZG93KDQpIG1hbiBwYWdlLCBidXQgdGhlCi0gICAg
ICogb25seSBkZWZpbml0aW9uIGZvciBpdCAodGhhdCBJIGNvdWxkIGZpbmQpIGlzIGluIHRoZSBw
YXNzbWdtdCgxTSkKLSAgICAgKiBtYW4gcGFnZS4KKyAgICAgKiAiKkxLKiIgaXMgZGVmaW5lZCBh
dCBpbiB0aGUgc2hhZG93KDQpIG1hbiBwYWdlLCBidXQgb2YgY291cnNlIGFueSBzdHJpbmcKKyAg
ICAgKiBpbnNlcnRlZCBpbiBmcm9udCBvZiB0aGUgcGFzc3dvcmQgd2lsbCBwcmV2ZW50IHRoZSBz
dHJpbmdzIGZyb20gbWF0Y2hpbmcKICAgICAgKgogICAgICAqICpOUCogaXMgZG9jdW1lbnRlZCBp
biBnZXRzcG5hbSgzKSBhbmQgaW5kaWNhdGVzIHRoZSBjYWxsZXIgaGFkCiAgICAgICogaW5zdWZm
aWNpZW50IHBlcm1pc3Npb24gdG8gcmVhZCB0aGUgc2hhZG93IHBhc3N3b3JkIGRhdGFiYXNlCkBA
IC0xNDQsMTIgKzE0NiwyNyBAQAogIyAgZWxzZQogICAgIHB3ID0gZ2V0cHduYW0obG9naW4pOwog
IyAgZW5kaWYgLyogX1JFRU5UUkFOVCAqLworICAgIGVycm51bSA9IGVycm5vOwogICAgIGVuZHB3
ZW50KCk7CisKICAgICBpZiAocHcgPT0gTlVMTCkgewotCWlmIChmbGFncyAmIFZFUkJPU0UpIHsK
LQkgICAgc3lzbG9nKExPR19ERUJVRywgIkRFQlVHOiBhdXRoX3NoYWRvdzogZ2V0cHduYW0oJXMp
IHJldHVybmVkIE5VTEwiLCBsb2dpbik7CisJaWYgKGVycm51bSAhPSAwKSB7CisJICAgIGNoYXIg
KmVycnN0cjsKKworCSAgICBpZiAoZmxhZ3MgJiBWRVJCT1NFKSB7CisJCXN5c2xvZyhMT0dfREVC
VUcsICJERUJVRzogYXV0aF9zaGFkb3c6IGdldHB3bmFtKCVzKSBmYWlsdXJlOiAlbSIsIGxvZ2lu
KTsKKwkgICAgfQorCSAgICBpZiAoYXNwcmludGYoJmVycnN0ciwgIk5PIFVzZXJuYW1lIGxvb2t1
cCBmYWlsdXJlOiAlcyIsIHN0cmVycm9yKGVycm5vKSkgPT0gLTEpIHsKKwkJLyogWFhYIHRoZSBo
aWRkZW4gc3RyZHVwKCkgd2lsbCBsaWtlbHkgZmFpbCBhbmQgcmV0dXJuIE5VTEwgaGVyZS4uLi4g
Ki8KKwkJUkVUVVJOKCJOTyBVc2VybmFtZSBsb29rdXAgZmFpbHVyZTogdW5rbm93biBlcnJvciAo
RU5PTUVNIGZvcm1hdHRpbmcgc3RyZXJyb3IoKSkiKTsKKwkgICAgfQorCSAgICByZXR1cm4gZXJy
c3RyOworCX0gZWxzZSB7CisJICAgIGlmIChmbGFncyAmIFZFUkJPU0UpIHsKKwkJc3lzbG9nKExP
R19ERUJVRywgIkRFQlVHOiBhdXRoX3NoYWRvdzogZ2V0cHduYW0oJXMpOiBpbnZhbGlkIHVzZXJu
YW1lIiwgbG9naW4pOworCSAgICB9CisJICAgIFJFVFVSTigiTk8gSW52YWxpZCB1c2VybmFtZSIp
OwogCX0KLQlSRVRVUk4oIk5PIik7CiAgICAgfQogCiAgICAgdG9kYXkgPSAobG9uZyl0aW1lKE5V
TEwpLygyNEwqNjAqNjApOwpAQCAtMTYzLDEzICsxODAsMjcgQEAKICMgIGVsc2UKICAgICBzcCA9
IGdldHNwbmFtKGxvZ2luKTsKICMgIGVuZGlmIC8qIF9SRUVOVFJBTlQgKi8KKyAgICBlcnJudW0g
PSBlcnJubzsKICAgICBlbmRzcGVudCgpOwogCiAgICAgaWYgKHNwID09IE5VTEwpIHsKLQlpZiAo
ZmxhZ3MgJiBWRVJCT1NFKSB7Ci0JICAgIHN5c2xvZyhMT0dfREVCVUcsICJERUJVRzogYXV0aF9z
aGFkb3c6IGdldHNwbmFtKCVzKSByZXR1cm5lZCBOVUxMIiwgbG9naW4pOworCWlmIChlcnJudW0g
IT0gMCkgeworCSAgICBjaGFyICplcnJzdHI7CisKKwkgICAgaWYgKGZsYWdzICYgVkVSQk9TRSkg
eworCQlzeXNsb2coTE9HX0RFQlVHLCAiREVCVUc6IGF1dGhfc2hhZG93OiBnZXRzcG5hbSglcykg
ZmFpbHVyZTogJW0iLCBsb2dpbik7CisJICAgIH0KKwkgICAgaWYgKGFzcHJpbnRmKCZlcnJzdHIs
ICJOTyBVc2VybmFtZSBzaGFkb3cgbG9va3VwIGZhaWx1cmU6ICVzIiwgc3RyZXJyb3IoZXJybm8p
KSA9PSAtMSkgeworCQkvKiBYWFggdGhlIGhpZGRlbiBzdHJkdXAoKSB3aWxsIGxpa2VseSBmYWls
IGFuZCByZXR1cm4gTlVMTCBoZXJlLi4uLiAqLworCQlSRVRVUk4oIk5PIFVzZXJuYW1lIHNoYWRv
dyBsb29rdXAgZmFpbHVyZTogdW5rbm93biBlcnJvciAoRU5PTUVNIGZvcm1hdHRpbmcgc3RyZXJy
b3IoKSkiKTsKKwkgICAgfQorCSAgICByZXR1cm4gZXJyc3RyOworCX0gZWxzZSB7CisJICAgIGlm
IChmbGFncyAmIFZFUkJPU0UpIHsKKwkJc3lzbG9nKExPR19ERUJVRywgIkRFQlVHOiBhdXRoX3No
YWRvdzogZ2V0c3BuYW0oJXMpOiBpbnZhbGlkIHNoYWRvdyB1c2VybmFtZSIsIGxvZ2luKTsKKwkg
ICAgfQorCSAgICBSRVRVUk4oIk5PIEludmFsaWQgc2hhZG93IHVzZXJuYW1lIik7CiAJfQotCVJF
VFVSTigiTk8iKTsKICAgICB9CiAKICAgICBpZiAoIXN0cmNtcChzcC0+c3BfcHdkcCwgU0hBRE9X
X1BXX0VQRVJNKSkgewpAQCAtMTc5LDIwICsyMTAsMTkgQEAKIAlSRVRVUk4oIk5PIEluc3VmZmlj
aWVudCBwZXJtaXNzaW9uIHRvIGFjY2VzcyBOSVMgYXV0aGVudGljYXRpb24gZGF0YWJhc2UgKHNh
c2xhdXRoZCkiKTsKICAgICB9CiAKLSAgICAvKgotICAgICAqIE5vdGU6IG5vIGNoZWNrIGZvciBT
SEFET1dfUFdfTE9DS0VELiBSZXR1cm5pbmcgYSAibG9ja2VkIiBub3RpZmljYXRpb24KLSAgICAg
KiB3b3VsZCBhbGxvdyBsb2dpbi1pZCBuYW1lc3BhY2UgcHJvYmVzLCBhbmQgdmlvbGF0ZXMgb3Vy
IHBvbGljeSBvZgotICAgICAqIG5vdCByZXR1cm5pbmcgYW55IGluZm9ybWF0aW9uIGFib3V0IGEg
bG9naW4gdW50aWwgd2UgaGF2ZSB2YWxpZGF0ZWQKLSAgICAgKiB0aGUgcGFzc3dvcmQuCi0gICAg
ICovCiAgICAgY3B3ID0gc3RyZHVwKChjb25zdCBjaGFyICopY3J5cHQocGFzc3dvcmQsIHNwLT5z
cF9wd2RwKSk7CiAgICAgaWYgKHN0cmNtcChzcC0+c3BfcHdkcCwgY3B3KSkgewogCWlmIChmbGFn
cyAmIFZFUkJPU0UpIHsKKwkgICAgLyoKKwkgICAgICogVGhpcyBfc2hvdWxkXyByZXZlYWwgdGhl
IFNIQURPV19QV19MT0NLRUQgcHJlZml4IHRvIGFuCisJICAgICAqIGFkbWluaXN0cmF0b3IgdHJ5
aW5nIHRvIGRlYnVnIHRoZSBzaXR1YXRpb24sIHRob3VnaCBtYXliZSB3ZQorCSAgICAgKiBzaG91
bGQgZG8gdGhlIGNoZWNrIGhlcmUgYW5kIGJlIGxlc3Mgb2J0dXNlIGFib3V0IGl0Li4uLgorCSAg
ICAgKi8KIAkgICAgc3lzbG9nKExPR19ERUJVRywgIkRFQlVHOiBhdXRoX3NoYWRvdzogcHcgbWlz
bWF0Y2g6ICclcycgIT0gJyVzJyIsCiAJCSAgIHNwLT5zcF9wd2RwLCBjcHcpOwogCX0KIAlmcmVl
KGNwdyk7Ci0JUkVUVVJOKCJOTyIpOworCVJFVFVSTigiTk8gSW5jb3JyZWN0IHBhc3N3b3JkIik7
CiAgICAgfQogICAgIGZyZWUoY3B3KTsKIApAQCAtMjUwLDEwICsyODAsMTAgQEAKICAgCiAgICAg
aWYgKHVwdyA9PSAwKSB7CiAJaWYgKGZsYWdzICYgVkVSQk9TRSkgewotCSAgICBzeXNsb2coTE9H
X0RFQlVHLCAiYXV0aF9zaGFkb3c6IGdldHVzZXJwdyglcykgPT0gMCIsCisJICAgIHN5c2xvZyhM
T0dfREVCVUcsICJhdXRoX3NoYWRvdzogZ2V0dXNlcnB3KCVzKSBmYWlsZWQ6ICVtIiwKIAkJICAg
bG9naW4pOwogCX0KLQlSRVRVUk4oIk5PIik7CisJUkVUVVJOKCJOTyBJbnZhbGlkIHVzZXJuYW1l
Iik7CiAgICAgfQogICAKICAgICBpZiAoc3RyY21wKHVwdy0+dXB3X3Bhc3N3ZCwgY3J5cHQocGFz
c3dvcmQsIHVwdy0+dXB3X3Bhc3N3ZCkpICE9IDApIHsKQEAgLTI2MSw3ICsyOTEsNyBAQAogCSAg
ICBzeXNsb2coTE9HX0RFQlVHLCAiYXV0aF9zaGFkb3c6IHB3IG1pc21hdGNoOiAlcyAhPSAlcyIs
CiAJCSAgIHBhc3N3b3JkLCB1cHctPnVwd19wYXNzd2QpOwogCX0KLQlSRVRVUk4oIk5PIik7CisJ
UkVUVVJOKCJOTyBJbmNvcnJlY3QgcGFzc3dvcmQiKTsKICAgICB9CiAKICAgICBSRVRVUk4oIk9L
Iik7CkluZGV4OiBzYXNsYXV0aGQvYXV0aF9nZXRwd2VudC5jCj09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6
IC9jdnMvc3JjL3Nhc2wvc2FzbGF1dGhkL2F1dGhfZ2V0cHdlbnQuYyx2CnJldHJpZXZpbmcgcmV2
aXNpb24gMS45CmRpZmYgLXUgLXIxLjkgYXV0aF9nZXRwd2VudC5jCi0tLSBzYXNsYXV0aGQvYXV0
aF9nZXRwd2VudC5jCTEzIEZlYiAyMDA5IDE0OjIzOjI2IC0wMDAwCTEuOQorKysgc2FzbGF1dGhk
L2F1dGhfZ2V0cHdlbnQuYwkxNyBEZWMgMjAxMSAwMzowOTowMyAtMDAwMApAQCAtNDAsNiArNDAs
OCBAQAogI2luY2x1ZGUgPHVuaXN0ZC5oPgogI2luY2x1ZGUgPHN0cmluZy5oPgogI2luY2x1ZGUg
PHB3ZC5oPgorI2luY2x1ZGUgPGVycm5vLmg+CisjaW5jbHVkZSA8c3lzbG9nLmg+CiAKICNpZmRl
ZiBIQVZFX0NSWVBUX0gKICNpbmNsdWRlIDxjcnlwdC5oPgpAQCAtNTUsNiArNTcsOCBAQAogIyAg
IGluY2x1ZGUgPGRlcy5oPgogIyAgZW5kaWYgLyogV0lUSF9TU0xfREVTICovCiAjIGVuZGlmIC8q
IFdJVEhfREVTICovCisKKyMgaW5jbHVkZSAiZ2xvYmFscy5oIgogLyogRU5EIFBVQkxJQyBERVBF
TkRFTkNJRVMgKi8KIAogI2RlZmluZSBSRVRVUk4oeCkgcmV0dXJuIHN0cmR1cCh4KQpAQCAtNzMs
MTkgKzc3LDQ0IEBACiB7CiAgICAgLyogVkFSSUFCTEVTICovCiAgICAgc3RydWN0IHBhc3N3ZCAq
cHc7CQkJLyogcG9pbnRlciB0byBwYXNzd2QgZmlsZSBlbnRyeSAqLworICAgIGludCBlcnJudW07
CiAgICAgLyogRU5EIFZBUklBQkxFUyAqLwogICAKKyAgICBlcnJubyA9IDA7CiAgICAgcHcgPSBn
ZXRwd25hbShsb2dpbik7CisgICAgZXJybnVtID0gZXJybm87CiAgICAgZW5kcHdlbnQoKTsKIAog
ICAgIGlmIChwdyA9PSBOVUxMKSB7Ci0JUkVUVVJOKCJOTyIpOworCWlmIChlcnJudW0gIT0gMCkg
eworCSAgICBjaGFyICplcnJzdHI7CisKKwkgICAgaWYgKGZsYWdzICYgVkVSQk9TRSkgeworCQlz
eXNsb2coTE9HX0RFQlVHLCAiREVCVUc6IGF1dGhfZ2V0cHdlbnQ6IGdldHB3bmFtKCVzKSBmYWls
dXJlOiAlbSIsIGxvZ2luKTsKKwkgICAgfQorCSAgICBpZiAoYXNwcmludGYoJmVycnN0ciwgIk5P
IFVzZXJuYW1lIGxvb2t1cCBmYWlsdXJlOiAlcyIsIHN0cmVycm9yKGVycm5vKSkgPT0gLTEpIHsK
KwkJLyogWFhYIHRoZSBoaWRkZW4gc3RyZHVwKCkgd2lsbCBsaWtlbHkgZmFpbCBhbmQgcmV0dXJu
IE5VTEwgaGVyZS4uLi4gKi8KKwkJUkVUVVJOKCJOTyBVc2VybmFtZSBsb29rdXAgZmFpbHVyZTog
dW5rbm93biBlcnJvciAoRU5PTUVNIGZvcm1hdHRpbmcgc3RyZXJyb3IoKSkiKTsKKwkgICAgfQor
CSAgICByZXR1cm4gZXJyc3RyOworCX0gZWxzZSB7CisJICAgIGlmIChmbGFncyAmIFZFUkJPU0Up
IHsKKwkJc3lzbG9nKExPR19ERUJVRywgIkRFQlVHOiBhdXRoX2dldHB3ZW50OiBnZXRwd25hbSgl
cyk6IGludmFsaWQgdXNlcm5hbWUiLCBsb2dpbik7CisJICAgIH0KKwkgICAgUkVUVVJOKCJOTyBJ
bnZhbGlkIHVzZXJuYW1lIik7CisJfQogICAgIH0KIAogICAgIGlmIChzdHJjbXAocHctPnB3X3Bh
c3N3ZCwgKGNvbnN0IGNoYXIgKiljcnlwdChwYXNzd29yZCwgcHctPnB3X3Bhc3N3ZCkpKSB7Ci0J
UkVUVVJOKCJOTyIpOworCWlmIChmbGFncyAmIFZFUkJPU0UpIHsKKwkgICAgc3lzbG9nKExPR19E
RUJVRywgIkRFQlVHOiBhdXRoX2dldHB3ZW50OiAlczogaW52YWxpZCBwYXNzd29yZCIsIGxvZ2lu
KTsKKwl9CisJUkVUVVJOKCJOTyBJbmNvcnJlY3QgcGFzc3dvcmQiKTsKICAgICB9CiAKKyAgICBp
ZiAoZmxhZ3MgJiBWRVJCT1NFKSB7CisJc3lzbG9nKExPR19ERUJVRywgIkRFQlVHOiBhdXRoX2dl
dHB3ZW50OiBPSzogJXMiLCBsb2dpbik7CisgICAgfQogICAgIFJFVFVSTigiT0siKTsKIH0KIApJ
bmRleDogc2FzbGF1dGhkL01ha2VmaWxlLmFtCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3Jj
L3Nhc2wvc2FzbGF1dGhkL01ha2VmaWxlLmFtLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjQxCmRp
ZmYgLXUgLXIxLjQxIE1ha2VmaWxlLmFtCi0tLSBzYXNsYXV0aGQvTWFrZWZpbGUuYW0JMjQgQXBy
IDIwMDYgMTg6MDI6MDQgLTAwMDAJMS40MQorKysgc2FzbGF1dGhkL01ha2VmaWxlLmFtCTE3IERl
YyAyMDExIDAzOjA5OjAzIC0wMDAwCkBAIC0xLDQgKzEsNSBAQAogQVVUT01BS0VfT1BUSU9OUyA9
IDEuNworQUNMT0NBTF9BTUZMQUdTID0gLUkgLi4vY211bG9jYWwgLUkgLi4vY29uZmlnCiBzYmlu
X1BST0dSQU1TCT0gc2FzbGF1dGhkIHRlc3RzYXNsYXV0aGQKIEVYVFJBX1BST0dSQU1TICA9IHNh
c2xjYWNoZQogCkluZGV4OiBwbHVnaW5zL2xkYXBkYi5jCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9j
dnMvc3JjL3Nhc2wvcGx1Z2lucy9sZGFwZGIuYyx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS43CmRp
ZmYgLXUgLXIxLjcgbGRhcGRiLmMKLS0tIHBsdWdpbnMvbGRhcGRiLmMJMTIgQXByIDIwMTEgMTA6
NDY6MzEgLTAwMDAJMS43CisrKyBwbHVnaW5zL2xkYXBkYi5jCTE3IERlYyAyMDExIDAzOjA5OjA0
IC0wMDAwCkBAIC0zOTUsOCArMzk1LDcgQEAKIAogICAgIGlmIChyZXQgIT0gTERBUF9TVUNDRVNT
KSBnb3RvIGRvbmU7CiAKLSAgICBmb3IobXNnPWxkYXBfZmlyc3RfbWVzc2FnZShjcC5sZCwgcmVz
KTsgbXNnOyBtc2c9bGRhcF9uZXh0X21lc3NhZ2UoY3AubGQsIG1zZykpCi0gICAgeworICAgIGZv
cihtc2c9bGRhcF9maXJzdF9tZXNzYWdlKGNwLmxkLCByZXMpOyBtc2c7IG1zZz1sZGFwX25leHRf
bWVzc2FnZShjcC5sZCwgbXNnKSkgewogICAgIAlpZiAobGRhcF9tc2d0eXBlKG1zZykgIT0gTERB
UF9SRVNfU0VBUkNIX0VOVFJZKSBjb250aW51ZTsKIAlidmFscyA9IGxkYXBfZ2V0X3ZhbHVlc19s
ZW4oY3AubGQsIG1zZywgYXR0cnNbMF0pOwogCWlmICghYnZhbHMpIGNvbnRpbnVlOwpAQCAtNDYy
LDQxICs0NjEsNDIgQEAKICAgICBjb25zdCBjaGFyICpzOwogICAgIHVuc2lnbmVkIGxlbjsKIAot
ICAgIGlmKHAtPmluaXRlZCkgcmV0dXJuIFNBU0xfT0s7CisgICAgaWYgKHAtPmluaXRlZCkKKwly
ZXR1cm4gU0FTTF9PSzsKIAogICAgIHV0aWxzLT5nZXRvcHQodXRpbHMtPmdldG9wdF9jb250ZXh0
LCBsZGFwZGIsICJsZGFwZGJfdXJpIiwgJnAtPnVyaSwgTlVMTCk7Ci0gICAgaWYoIXAtPnVyaSkg
cmV0dXJuIFNBU0xfQkFEUEFSQU07CisgICAgaWYgKCFwLT51cmkpCisJcmV0dXJuIFNBU0xfTk9N
RUNIOwogCiAgICAgdXRpbHMtPmdldG9wdCh1dGlscy0+Z2V0b3B0X2NvbnRleHQsIGxkYXBkYiwg
ImxkYXBkYl9pZCIsCi0gICAgCShjb25zdCBjaGFyICoqKSZwLT5pZC5idl92YWwsICZsZW4pOwor
CQkgIChjb25zdCBjaGFyICoqKSZwLT5pZC5idl92YWwsICZsZW4pOwogICAgIHAtPmlkLmJ2X2xl
biA9IGxlbjsKICAgICB1dGlscy0+Z2V0b3B0KHV0aWxzLT5nZXRvcHRfY29udGV4dCwgbGRhcGRi
LCAibGRhcGRiX3B3IiwKLSAgICAJKGNvbnN0IGNoYXIgKiopJnAtPnB3LmJ2X3ZhbCwgJmxlbik7
CisJCSAgKGNvbnN0IGNoYXIgKiopJnAtPnB3LmJ2X3ZhbCwgJmxlbik7CiAgICAgcC0+cHcuYnZf
bGVuID0gbGVuOwogICAgIHV0aWxzLT5nZXRvcHQodXRpbHMtPmdldG9wdF9jb250ZXh0LCBsZGFw
ZGIsICJsZGFwZGJfbWVjaCIsCi0gICAgCShjb25zdCBjaGFyICoqKSZwLT5tZWNoLmJ2X3ZhbCwg
Jmxlbik7CisJCSAgKGNvbnN0IGNoYXIgKiopJnAtPm1lY2guYnZfdmFsLCAmbGVuKTsKICAgICBw
LT5tZWNoLmJ2X2xlbiA9IGxlbjsKICAgICB1dGlscy0+Z2V0b3B0KHV0aWxzLT5nZXRvcHRfY29u
dGV4dCwgbGRhcGRiLCAibGRhcGRiX3N0YXJ0dGxzIiwgJnMsIE5VTEwpOwotICAgIGlmIChzKQot
ICAgIHsKLSAgICAJaWYgKCFzdHJjYXNlY21wKHMsICJkZW1hbmQiKSkgcC0+dXNlX3RscyA9IDI7
Ci0JZWxzZSBpZiAoIXN0cmNhc2VjbXAocywgInRyeSIpKSBwLT51c2VfdGxzID0gMTsKKyAgICBp
ZiAocykgeworICAgIAlpZiAoIXN0cmNhc2VjbXAocywgImRlbWFuZCIpKQorCSAgICBwLT51c2Vf
dGxzID0gMjsKKwllbHNlIGlmICghc3RyY2FzZWNtcChzLCAidHJ5IikpCisJICAgIHAtPnVzZV90
bHMgPSAxOwogICAgIH0KICAgICB1dGlscy0+Z2V0b3B0KHV0aWxzLT5nZXRvcHRfY29udGV4dCwg
bGRhcGRiLCAibGRhcGRiX3JjIiwgJnMsICZsZW4pOwotICAgIGlmIChzKQotICAgIHsKKyAgICBp
ZiAocykgewogICAgIAljaGFyICpzdHIgPSB1dGlscy0+bWFsbG9jKHNpemVvZigiTERBUFJDPSIp
K2xlbik7CiAJaWYgKCFzdHIpIHJldHVybiBTQVNMX05PTUVNOwogCXN0cmNweSggc3RyLCAiTERB
UFJDPSIgKTsKIAlzdHJjcHkoIHN0ciArIHNpemVvZigiTERBUFJDPSIpLTEsIHMgKTsKLQlpZiAo
cHV0ZW52KHN0cikpCi0JeworCWlmIChwdXRlbnYoc3RyKSkgewogCSAgICB1dGlscy0+ZnJlZShz
dHIpOwogCSAgICByZXR1cm4gU0FTTF9OT01FTTsKIAl9CiAgICAgfQogICAgIHV0aWxzLT5nZXRv
cHQodXRpbHMtPmdldG9wdF9jb250ZXh0LCBsZGFwZGIsICJsZGFwZGJfY2Fub25fYXR0ciIsCi0J
KGNvbnN0IGNoYXIgKiopJnAtPmNhbm9uLmJ2X3ZhbCwgJmxlbik7CisJCSAgKGNvbnN0IGNoYXIg
KiopJnAtPmNhbm9uLmJ2X3ZhbCwgJmxlbik7CiAgICAgcC0+Y2Fub24uYnZfbGVuID0gbGVuOwog
ICAgIHAtPmluaXRlZCA9IDE7CiAKSW5kZXg6IHBsdWdpbnMvTWFrZWZpbGUuYW0KPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQpSQ1MgZmlsZTogL2N2cy9zcmMvc2FzbC9wbHVnaW5zL01ha2VmaWxlLmFtLHYKcmV0cmlldmlu
ZyByZXZpc2lvbiAxLjg2CmRpZmYgLXUgLXIxLjg2IE1ha2VmaWxlLmFtCi0tLSBwbHVnaW5zL01h
a2VmaWxlLmFtCTUgU2VwIDIwMTEgMTQ6MTg6MTAgLTAwMDAJMS44NgorKysgcGx1Z2lucy9NYWtl
ZmlsZS5hbQkxNyBEZWMgMjAxMSAwMzowOTowNCAtMDAwMApAQCAtMTMzLDcgKzEzMyw3IEBACiBs
aWJzcWxfbGFfTERGTEFHUyA9ICQoTElCX01ZU1FMKSAkKExJQl9QR1NRTCkgJChMSUJfU1FMSVRF
KSAkKExJQl9TUUxJVEUzKSBcCiAJJChBTV9MREZMQUdTKQogbGlic3FsX2xhX0RFUEVOREVOQ0lF
UyA9ICQoQ09NUEFUX09CSlMpCi1saWJzcWxfbGFfTElCQUREID0gJChDT01QQVRfT0JKUykKK2xp
YnNxbF9sYV9MSUJBREQgPSAgJChMSUJfTVlTUUwpICQoTElCX1BHU1FMKSAkKExJQl9TUUxJVEUp
ICQoQ09NUEFUX09CSlMpCiAKIAogIyBJbnN0cnVjdGlvbnMgZm9yIG1ha2luZyB0aGUgX2luaXQg
ZmlsZXMKSW5kZXg6IGxpYi9zZXJ2ZXIuYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9z
YXNsL2xpYi9zZXJ2ZXIuYyx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4xNzcKZGlmZiAtdSAtcjEu
MTc3IHNlcnZlci5jCi0tLSBsaWIvc2VydmVyLmMJOCBOb3YgMjAxMSAxNzoyMjo0MCAtMDAwMAkx
LjE3NworKysgbGliL3NlcnZlci5jCTE3IERlYyAyMDExIDAzOjA5OjA0IC0wMDAwCkBAIC00NDAs
MTYgKzQ0MCwxOSBAQAogICAgIGlmICgocmVzdWx0ICE9IFNBU0xfT0spICYmIChyZXN1bHQgIT0g
U0FTTF9OT1VTRVIpCiAgICAgICAgICYmIChyZXN1bHQgIT0gU0FTTF9DT05USU5VRSkpIHsKIAlf
c2FzbF9sb2coTlVMTCwgU0FTTF9MT0dfREVCVUcsCi0JCSAgInNlcnZlciBhZGRfcGx1Z2luIGVu
dHJ5X3BvaW50IGVycm9yICV6XG4iLCByZXN1bHQpOworCQkgICIlc19jbGllbnRfcGx1Z19pbml0
KCkgZmFpbGVkIGluIHNhc2xfc2VydmVyX2FkZF9wbHVnaW4oKTogJXpcbiIsCisJCSAgcGx1Z25h
bWUsIHJlc3VsdCk7CiAJcmV0dXJuIHJlc3VsdDsKICAgICB9CiAKICAgICAvKiBNYWtlIHN1cmUg
cGx1Z2luIGlzIHVzaW5nIHRoZSBzYW1lIFNBU0wgdmVyc2lvbiBhcyB1cyAqLworICAgIC8qIFhY
WCB3aHkgY2hlY2sgdGhpcyBhZ2Fpbj8gICpfc2VydmVyX3BsdWdfaW5pdCgpIGZ1bmN0aW9ucyBk
byB0aGlzIGNoZWNrIGFscmVhZHkhICovCiAgICAgaWYgKHZlcnNpb24gIT0gU0FTTF9TRVJWRVJf
UExVR19WRVJTSU9OKQogICAgIHsKIAlfc2FzbF9sb2coTlVMTCwKIAkJICBTQVNMX0xPR19FUlIs
Ci0JCSAgInZlcnNpb24gbWlzbWF0Y2ggb24gcGx1Z2luOiAlZCBleHBlY3RlZCwgYnV0ICVkIHJl
cG9ydGVkIiwKKwkJICAidmVyc2lvbiBtaXNtYXRjaCBvbiAgc2FzbF9zZXJ2ZXJfYWRkX3BsdWdp
biBmb3IgJyVzJzogJWQgZXhwZWN0ZWQsIGJ1dCAlZCByZXBvcnRlZCIsCisJCSAgcGx1Z25hbWUs
CiAJCSAgU0FTTF9TRVJWRVJfUExVR19WRVJTSU9OLAogCQkgIHZlcnNpb24pOwogCXJldHVybiBT
QVNMX0JBRFZFUlM7CkluZGV4OiBsaWIvY2xpZW50LmMKPT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2
cy9zcmMvc2FzbC9saWIvY2xpZW50LmMsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuODYKZGlmZiAt
dSAtcjEuODYgY2xpZW50LmMKLS0tIGxpYi9jbGllbnQuYwkxIFNlcCAyMDExIDE0OjEyOjUzIC0w
MDAwCTEuODYKKysrIGxpYi9jbGllbnQuYwkxNyBEZWMgMjAxMSAwMzowOTowNCAtMDAwMApAQCAt
MTk1LDExICsxOTUsMTIgQEAKICAgICBpZiAocmVzdWx0ICE9IFNBU0xfT0spCiAgICAgewogCV9z
YXNsX2xvZyhOVUxMLCBTQVNMX0xPR19XQVJOLAotCSAgICAgICJlbnRyeV9wb2ludCBmYWlsZWQg
aW4gc2FzbF9jbGllbnRfYWRkX3BsdWdpbiBmb3IgJXMiLAotCSAgICAgIHBsdWduYW1lKTsKKwkJ
ICAiIHNhc2xfY2xpZW50X2FkZF9wbHVnaW4oKTogZW50cnlfcG9pbnQoKTogZmFpbGVkIGZvciBw
bHVnbmFtZSAlczogJXoiLAorCQkgIHBsdWduYW1lLCByZXN1bHQpOwogCXJldHVybiByZXN1bHQ7
CiAgICAgfQogCisgICAgLyogWFhYIHdoeSBjaGVjayB0aGlzIGFnYWluPyAgKl9jbGllbnRfcGx1
Z19pbml0KCkgZnVuY3Rpb25zIGRvIHRoaXMgY2hlY2sgYWxyZWFkeSEgKi8KICAgICBpZiAodmVy
c2lvbiAhPSBTQVNMX0NMSUVOVF9QTFVHX1ZFUlNJT04pCiAgICAgewogCV9zYXNsX2xvZyhOVUxM
LCBTQVNMX0xPR19XQVJOLApAQCAtNjgzLDYgKzY4NCwxNyBAQAogICogQXBwcyBzaG91bGQgYmUg
ZW5jb3VyYWdlZCB0byBzaW1wbHkgdXNlIHNwYWNlIG9yIGNvbW1hIHNwYWNlCiAgKiB0aG91Z2gK
ICAqLworLyoKKyAqIFhYWCBEZWJ1Z2dpbmcgY2xpZW50L3NlcnZlciAiTm8gd29ydGh5IG1lY2hz
IGZvdW5kIiBmYWlsdXJlcyBmcm9tIHRoZSBsb2dpYworICogaGVyZWluIGlzIG5leHQgdG8gaW1w
b3NzaWJsZSEKKyAqCisgKiBFcnJvciBmbGFncyBzaG91bGQgYmUgc2V0IHNvIHRoYXQgdXNlcnMg
Y2FuIGRldGVybWluZSB3aGljaCByZXF1aXJlbWVudHMKKyAqIHdlcmUgbWV0IGFuZCB3aGljaCB3
ZXJlIG5vdC4KKyAqCisgKiBJbiB0aGUgbWVhbiB0aW1lIHRoZSBiZXN0IG9uZSBjYW4gZG8gaXMg
c3RvcCBleGVjdXRpb24gaW4gdGhpcyBmdW5jdGlvbiwKKyAqIHByaW50ICpjb25uLCAqbWVjaGxp
c3QsIGV0Yy4sIGFuZCB0aGVuLCBpZiBuZWNlc3NhcnksIGkuZS4gaXQncyBub3QKKyAqIGJsYXRh
bnRseSBvYnZpb3VzLCBzdGVwIHRocm91Z2ggZWFjaCBydWxlIHRvIHNlZSB3aGF0IGhhcHBlbnMu
CisgKi8KIGludCBzYXNsX2NsaWVudF9zdGFydChzYXNsX2Nvbm5fdCAqY29ubiwKIAkJICAgICAg
Y29uc3QgY2hhciAqbWVjaGxpc3QsCiAJCSAgICAgIHNhc2xfaW50ZXJhY3RfdCAqKnByb21wdF9u
ZWVkLApAQCAtNzUyLDcgKzc2NCw4IEBACiAKIAkvKiBmb3IgZWFjaCBtZWNoYW5pc20gaW4gY2xp
ZW50J3MgbGlzdCAqLwogCWZvciAobSA9IGNfY29ubi0+bWVjaF9saXN0OyBtICE9IE5VTEw7IG0g
PSBtLT5uZXh0KSB7Ci0JICAgIGludCBteWZsYWdzLCBwbHVzOworCSAgICB1bnNpZ25lZCBpbnQg
bXlmbGFnczsKKwkgICAgaW50IHBsdXM7CiAKIAkgICAgaWYgKCFfc2FzbF9pc19lcXVhbF9tZWNo
KG5hbWUsIG0tPm0ucGx1Zy0+bWVjaF9uYW1lLCBuYW1lX2xlbiwgJnBsdXMpKSB7CiAJCWNvbnRp
bnVlOwpAQCAtNzY2LDE1ICs3NzksMTYgQEAKIAkgICAgaWYgKG1pbnNzZiA+IG0tPm0ucGx1Zy0+
bWF4X3NzZikKIAkJYnJlYWs7CiAKLQkgICAgLyogRG9lcyBpdCBtZWV0IG91ciBzZWN1cml0eSBw
cm9wZXJ0aWVzPyAqLworCSAgICAvKiBpZiB0aGVyZSdzIGFuIGV4dGVybmFsIGxheWVyIHdpdGgg
YSBiZXR0ZXIgU1NGIHRoZW4gdGhpcyBpcyBubworCSAgICAgKiBsb25nZXIgY29uc2lkZXJlZCBh
IHBsYWludGV4dCBtZWNoYW5pc20KKwkgICAgICovCiAJICAgIG15ZmxhZ3MgPSBjb25uLT5wcm9w
cy5zZWN1cml0eV9mbGFnczsKLQkgICAgCi0JICAgIC8qIGlmIHRoZXJlJ3MgYW4gZXh0ZXJuYWwg
bGF5ZXIgdGhpcyBpcyBubyBsb25nZXIgcGxhaW50ZXh0ICovCiAJICAgIGlmICgoY29ubi0+cHJv
cHMubWluX3NzZiA8PSBjb25uLT5leHRlcm5hbC5zc2YpICYmIAogCQkoY29ubi0+ZXh0ZXJuYWwu
c3NmID4gMSkpIHsKIAkJbXlmbGFncyAmPSB+U0FTTF9TRUNfTk9QTEFJTlRFWFQ7CiAJICAgIH0K
IAorCSAgICAvKiBEb2VzIGl0IG1lZXQgb3VyIHNlY3VyaXR5IHByb3BlcnRpZXM/ICovCiAJICAg
IGlmICgoKG15ZmxhZ3MgXiBtLT5tLnBsdWctPnNlY3VyaXR5X2ZsYWdzKSAmIG15ZmxhZ3MpICE9
IDApIHsKIAkJYnJlYWs7CiAJICAgIH0KSW5kZXg6IGxpYi9jYW5vbnVzci5jCj09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0K
UkNTIGZpbGU6IC9jdnMvc3JjL3Nhc2wvbGliL2Nhbm9udXNyLmMsdgpyZXRyaWV2aW5nIHJldmlz
aW9uIDEuMjIKZGlmZiAtdSAtcjEuMjIgY2Fub251c3IuYwotLS0gbGliL2Nhbm9udXNyLmMJMSBT
ZXAgMjAxMSAxNjozMzo0MiAtMDAwMAkxLjIyCisrKyBsaWIvY2Fub251c3IuYwkxNyBEZWMgMjAx
MSAwMzowOTowNCAtMDAwMApAQCAtMzE2LDE0ICszMTYsMTUgQEAKIAkJCSAgICZvdXRfdmVyc2lv
biwgJnBsdWcsIHBsdWduYW1lKTsKIAogICAgIGlmKHJlc3VsdCAhPSBTQVNMX09LKSB7Ci0JX3Nh
c2xfbG9nKE5VTEwsIFNBU0xfTE9HX0VSUiwgImNhbm9udXNlcmZ1bmMgZXJyb3IgJWlcbiIscmVz
dWx0KTsKKwlfc2FzbF9sb2coTlVMTCwgU0FTTF9MT0dfRVJSLCAiJXNfY2Fub251c2VyX3BsdWdf
aW5pdCgpIGZhaWxlZCBpbiBzYXNsX2Nhbm9udXNlcl9hZGRfcGx1Z2luKCk6ICV6XG4iLAorCQkg
IHBsdWduYW1lLCByZXN1bHQpOwogCXJldHVybiByZXN1bHQ7CiAgICAgfQogCiAgICAgaWYoIXBs
dWctPmNhbm9uX3VzZXJfc2VydmVyICYmICFwbHVnLT5jYW5vbl91c2VyX2NsaWVudCkgewogCS8q
IFdlIG5lZWQgYXQgbGVhc3Qgb25lIG9mIHRoZXNlIGltcGxlbWVudGVkICovCiAJX3Nhc2xfbG9n
KE5VTEwsIFNBU0xfTE9HX0VSUiwKLQkJICAiY2Fub251c2VyIHBsdWdpbiB3aXRob3V0IGVpdGhl
ciBjbGllbnQgb3Igc2VydmVyIHNpZGUiKTsKKwkJICAiY2Fub251c2VyIHBsdWdpbiAnJXMnIHdp
dGhvdXQgZWl0aGVyIGNsaWVudCBvciBzZXJ2ZXIgc2lkZSIsIHBsdWduYW1lKTsKIAlyZXR1cm4g
U0FTTF9CQURQUk9UOwogICAgIH0KICAgICAKSW5kZXg6IGxpYi9hdXhwcm9wLmMKPT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PQpSQ1MgZmlsZTogL2N2cy9zcmMvc2FzbC9saWIvYXV4cHJvcC5jLHYKcmV0cmlldmluZyByZXZp
c2lvbiAxLjIxCmRpZmYgLXUgLXIxLjIxIGF1eHByb3AuYwotLS0gbGliL2F1eHByb3AuYwkxIFNl
cCAyMDExIDE0OjEyOjUzIC0wMDAwCTEuMjEKKysrIGxpYi9hdXhwcm9wLmMJMTcgRGVjIDIwMTEg
MDM6MDk6MDQgLTAwMDAKQEAgLTgxMywxMyArODEzLDE1IEBACiAKICAgICAvKiBDaGVjayBpZiBv
dXRfdmVyc2lvbiBpcyB0b28gb2xkLgogICAgICAgIFdlIG9ubHkgc3VwcG9ydCB0aGUgY3VycmVu
dCBhdCB0aGUgbW9tZW50ICovCisgICAgLyogWFhYIHdoeSBjaGVjayB0aGlzIGFnYWluPyAgKl9h
dXhwcm9wX3BsdWdfaW5pdCgpIGZ1bmN0aW9ucyBkbyB0aGlzIGNoZWNrIGFscmVhZHkhICovCiAg
ICAgaWYgKHJlc3VsdCA9PSBTQVNMX09LICYmIG91dF92ZXJzaW9uIDwgU0FTTF9BVVhQUk9QX1BM
VUdfVkVSU0lPTikgewogICAgICAgICByZXN1bHQgPSBTQVNMX0JBRFZFUlM7CiAgICAgfQogCiAg
ICAgaWYocmVzdWx0ICE9IFNBU0xfT0spIHsKLQlfc2FzbF9sb2coTlVMTCwgU0FTTF9MT0dfRVJS
LCAiYXV4cHJvcGZ1bmMgZXJyb3IgJXNcbiIsCi0JCSAgc2FzbF9lcnJzdHJpbmcocmVzdWx0LCBO
VUxMLCBOVUxMKSk7CisJX3Nhc2xfbG9nKE5VTEwsIChyZXN1bHQgIT0gU0FTTF9OT01FQ0gpID8g
U0FTTF9MT0dfV0FSTiA6IFNBU0xfTE9HX05PVEUsCisJCSAgIiVzX2F1eHByb3BfcGx1Z19pbml0
KCkgZmFpbGVkIGluIHNhc2xfYXV4cHJvcF9hZGRfcGx1Z2luKCk6ICV6XG4iLAorCQkgIHBsdWdu
YW1lLCByZXN1bHQpOwogCXJldHVybiByZXN1bHQ7CiAgICAgfQogCkluZGV4OiBsaWIvTWFrZWZp
bGUuYW0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvc2FzbC9saWIvTWFrZWZpbGUuYW0s
dgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuODgKZGlmZiAtdSAtcjEuODggTWFrZWZpbGUuYW0KLS0t
IGxpYi9NYWtlZmlsZS5hbQk1IFNlcCAyMDExIDE0OjE4OjEwIC0wMDAwCTEuODgKKysrIGxpYi9N
YWtlZmlsZS5hbQkxNyBEZWMgMjAxMSAwMzowOTowNCAtMDAwMApAQCAtNDYsOSArNDYsNiBAQAog
SU5DTFVERVM9LUkkKHRvcF9zcmNkaXIpL2luY2x1ZGUgLUkkKHRvcF9zcmNkaXIpL3BsdWdpbnMg
LUkkKHRvcF9idWlsZGRpcikvaW5jbHVkZSAtSSQodG9wX3NyY2Rpcikvc2FzbGRiCiAKIEVYVFJB
X0RJU1QgPSB3aW5kbG9wZW4uYyBzdGF0aWNvcGVuLmggTlRNYWtlZmlsZQotRVhUUkFfTElCUkFS
SUVTID0gbGlic2FzbDIuYQotbm9pbnN0X0xJQlJBUklFUyA9IEBTQVNMX1NUQVRJQ19MSUJTQAot
bGlic2FzbDJfYV9TT1VSQ0VTPQogCiBCVUlMVF9TT1VSQ0VTID0gJChTQVNMX1NUQVRJQ19TUkNT
KQogCkBAIC03NiwxMCArNzMsMzIgQEAKIGluc3RhbGwtZXhlYy1ob29rOgogZW5kaWYKIAorIyB3
ZSBoYXZlIHRvIHVwZGF0ZSBsaWJzYXNsMi5hIGFuZCBsaWJzYXNsMi5sYSBhZnRlciB0aGV5IGhh
dmUgYmVlbgorIyBidWlsdCBzbyBhcyB0byBpbmNsdWRlIHRoZSBkZXNpcmVkIHN0YXRpY2FsbHkg
Y29tcGlsZWQgcGx1Z2luIG1vZHVsZQorIyBjb2RlIGFzIHdlbGwKKyMKK2FsbC1sb2NhbDogZml4
LWxpYnNhc2wyLWxhCisKKyMgd2Ugc2hvdWxkIHByb2JhYmx5IHVzZSB0aGUgYWxyZWFkeSBjb21w
aWxlZCBwbHVnaW4gY29kZSAubyBmaWxlcworIyBpbnN0ZWFkIG9mIHJlY29tcGlsaW5nIHRoZW0g
YWdhaW4gKHdlIGFscmVhZHkgZGVwZW5kIG9uIHRoZSBwbHVnaW4KKyMgLmxhIGZpbGVzIGJlaW5n
IGNyZWF0ZWQpCisjCiBsaWJzYXNsMi5hOiBsaWJzYXNsMi5sYSAkKFNBU0xfU1RBVElDX09CSlMp
CiAJQGVjaG8gYWRkaW5nIHN0YXRpYyBwbHVnaW5zIGFuZCBkZXBlbmRlbmNpZXMKIAkkKEFSKSBj
cnUgLmxpYnMvJEAgJChTQVNMX1NUQVRJQ19PQkpTKQotCUBmb3IgaSBpbiAuL2xpYnNhc2wyLmxh
IC4uL3Nhc2xkYi9saWJzYXNsZGIubGEgLi4vcGx1Z2lucy9saWIqLmxhOyBkbyBcCisJcm0gLWYg
JEAKKwlsbiAtcyAubGlicy8kQCAkQAorCitjbGVhbi1sb2NhbDoKKwlybSAtZiBsaWJzYXNsMi5h
CisKKyMgaGVyZSB3ZSBhY2N1bXVsYXRlIHRoZSAtTCBhbmQgLWwgb3B0aW9ucyBmcm9tIGFsbCB0
aGUgcGx1Z2luIG1vZHVsZQorIyBsaWJ0b29sIC5sYSBmaWxlcyBhbmQgYWRkIHRoZW0gdG8gbGli
c2FzbDIubGEgc28gbGlidG9vbCB3aWxsIHNlZQorIyB0aGVtIG9uIGluc3RhbGwuCisjCitmaXgt
bGlic2FzbDItbGE6IGxpYnNhc2wyLmEgJChTQVNMX01FQ0hTX0xJQlMpCisJQGVjaG8gdXBkYXRp
bmcgZGVwZW5kZW5jeV9saWJzIGluIGxpYnNhc2wyLmxhCisJQGZvciBpIGluIC4vbGlic2FzbDIu
bGEgJChTQVNMX01FQ0hTX0xJQlMpOyBkbyBcCiAJaWYgdGVzdCAhIC1mICQkaTsgdGhlbiBjb250
aW51ZTsgZmk7IC4gJCRpOyBcCiAJZm9yIGogaW4gJCRkZXBlbmRlbmN5X2xpYnMgZm9vOyBkbyBc
CiAJY2FzZSAkJGogaW4gZm9vKSA7OyBcCkBAIC05MiwxMSArMTExLDEwIEBACiAJZXNhYzsgZG9u
ZTsgZGVwZW5kZW5jeV9saWJzPSIiOyBkb25lOyBcCiAJc2VkIC1lICIvXmRlcGVuZGVuY3lfbGli
cz0vcyU9LiolPSckJHtkZXBkaXJzfSQke2RlcGxpYnN9JyUiIFwKIAlsaWJzYXNsMi5sYSA+VE1Q
LiQkICYmIG12IFRNUC4kJCBsaWJzYXNsMi5sYQotCXJtIC1mICRACi0JbG4gLXMgLmxpYnMvJEAg
JEAKKyMjIwlybSAtZiAkQAorIyMjCWxuIC1zIC5saWJzLyRAICRACiAKICQoU0FTTF9TVEFUSUNf
U1JDUyk6IGxpbmtzcmNzCiAKIGxpbmtzcmNzOgogCS1sbiAtcyAkKFNBU0xfU1RBVElDX1NSQ1Mp
IC4KLQpJbmRleDogY29uZmlndXJlLmluCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3Nh
c2wvY29uZmlndXJlLmluLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjIyNApkaWZmIC11IC1yMS4y
MjQgY29uZmlndXJlLmluCi0tLSBjb25maWd1cmUuaW4JMjIgU2VwIDIwMTEgMTQ6NDQ6MTUgLTAw
MDAJMS4yMjQKKysrIGNvbmZpZ3VyZS5pbgkxNyBEZWMgMjAxMSAwMzowOTowNCAtMDAwMApAQCAt
MTA4LDcgKzEwOCw3IEBACiBmaQogCiAjIG5ldyBsaWJ0b29sCi1BTV9ESVNBQkxFX1NUQVRJQwor
I0FNX0RJU0FCTEVfU1RBVElDCiBBQ19QUk9HX0xJQlRPT0wKIAogdGFyZ2V0PSRzYXZlX3Rhcmdl
dApAQCAtMTE5LDEyICsxMTksMTQgQEAKIAlTQVNMX1NUQVRJQ19MSUJTPQogZmkKIAorIyB0aGlz
IGlzIHN0dXBpZCBhbmQgaW1wb3NzaWJsZSBvbiBtb3N0IHNhbmUgcGxhdGZvcm1zIQorIwogQUNf
QVJHX0VOQUJMRShzdGF0aWNkbG9wZW4sIFsgIC0tZW5hYmxlLXN0YXRpY2Rsb3BlbiAgIHRyeSBk
eW5hbWljIHBsdWdpbnMgd2hlbiB3ZSBhcmUgYSBzdGF0aWMgbGlic2FzbCBbW25vXV0gXSwKICAg
ICAgICAgICAgICAgICBlbmFibGVfc3RhdGljZGxvcGVuPSRlbmFibGV2YWwsCiAgICAgICAgICAg
ICAgICAgZW5hYmxlX3N0YXRpY2Rsb3Blbj1ubykKIAogaWYgdGVzdCAiJGVuYWJsZV9zdGF0aWNk
bG9wZW4iID0geWVzOyB0aGVuCi0gIEFDX0RFRklORShUUllfRExPUEVOX1dIRU5fU1RBVElDLFtd
LFtTaG91bGQgd2UgdHJ5IHRvIGRsb3BlbigpIHBsdWdpbnMgd2hpbGUgc3RhdGljbHkgY29tcGls
ZWQ/XSkKKyAgQUNfREVGSU5FKFRSWV9ETE9QRU5fV0hFTl9TVEFUSUMsW10sW1Nob3VsZCB3ZSB0
cnkgdG8gZGxvcGVuKCkgcGx1Z2lucyB3aGlsZSBzdGF0aWNhbGx5IGNvbXBpbGVkP10pCiBmaQog
CiBpZiB0ZXN0ICIkYWNfY3ZfcHJvZ19nY2MiID0geWVzOyB0aGVuCkBAIC0zOTIsMTUgKzM5NCw1
NCBAQAogICAgIENQUEZMQUdTPSIkQ1BQRkxBR1MgLURPQlNPTEVURV9DUkFNX0FUVFI9MSIKICAg
ZmkKICAgaWYgdGVzdCAiJGVuYWJsZV9zdGF0aWMiID0geWVzOyB0aGVuCi0gICAgU0FTTF9TVEFU
SUNfT0JKUz0iJFNBU0xfU1RBVElDX09CSlMgY3JhbS5vIgogICAgIFNBU0xfU1RBVElDX1NSQ1M9
IiRTQVNMX1NUQVRJQ19TUkNTIFwkKHRvcF9zcmNkaXIpL3BsdWdpbnMvY3JhbS5jIgotICAgIEFD
X0RFRklORShTVEFUSUNfQ1JBTU1ENSwgW10sIFtMaW5rIENSQU0tTUQ1IFN0YXRpY2x5XSkKKyAg
ICBTQVNMX1NUQVRJQ19PQkpTPSIkU0FTTF9TVEFUSUNfT0JKUyBjcmFtLm8iCisgICAgQUNfREVG
SU5FKFNUQVRJQ19DUkFNTUQ1LCBbXSwgW0xpbmsgQ1JBTS1NRDUgU3RhdGljYWxseV0pCiAgIGZp
CiBlbHNlCiAgIEFDX01TR19SRVNVTFQoZGlzYWJsZWQpCiBmaQogCi1DTVVfSEFWRV9PUEVOU1NM
CitkbmwKK2RubCBUZXN0IGZvciBPcGVuU1NMCitkbmwKK0lNQVBfUFJPR1M9IiIKK0FDX0FSR19X
SVRIKG9wZW5zc2wsWyAgLS13aXRoLW9wZW5zc2w9UEFUSCAgICAgdXNlIE9wZW5TU0wgZnJvbSBQ
QVRIXSwKKwl3aXRoX29wZW5zc2w9IiR7d2l0aHZhbH0iKQorCitPUEVOU1NMX0lOQz0KK09QRU5T
U0xfTElCPQorY2FzZSAiJHdpdGhfb3BlbnNzbCIgaW4KKwlubykgd2l0aF9vcGVuc3NsPSJubyI7
OworCSIifHllcykgCisJICBkbmwgaWYgb3BlbnNzbCBoYXMgYmVlbiBjb21waWxlZCB3aXRoIHRo
ZSByc2FyZWYyIGxpYnJhcmllcywKKwkgIGRubCB3ZSBuZWVkIHRvIGluY2x1ZGUgdGhlIHJzYXJl
ZiBsaWJyYXJpZXMgaW4gdGhlIGNyeXB0byBjaGVjaworICAgICAgICAgICAgICAgIExJQl9SU0FS
RUY9IiIKKwkgICAgICAgIEFDX0NIRUNLX0xJQihyc2FyZWYsIFJTQVB1YmxpY0VuY3J5cHQsCisJ
CSAgICAgICBMSUJfUlNBUkVGPSItbFJTQWdsdWUgLWxyc2FyZWYiOyBjbXVfaGF2ZV9yc2FyZWY9
eWVzLAorCQkgICAgICAgY211X2hhdmVfcnNhcmVmPW5vKQorCisJCXdpdGhfb3BlbnNzbD0ieWVz
IgorCQlBQ19DSEVDS19MSUIoY3J5cHQsZGVzX2NpcGhlciwKKwkJCQlMSUJTPSItbGNyeXB0ICR7
TElCU30iLAorCQkJCXdpdGhfb3BlbnNzbD0ibm8iKQorCQlBQ19DSEVDS19MSUIoY3J5cHRvLEJJ
T19hY2NlcHQsCisgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBMSUJTPSItbGNy
eXB0byAkTElCX1JTQVJFRiAke0xJQlN9IiwKKwkJICAgICAgICAgICAgICAgICAgICB3aXRoX29w
ZW5zc2w9Im5vIiwgLWxjcnlwdCAkTElCX1JTQVJFRikKKwkJQUNfQ0hFQ0tfTElCKHNzbCwgU1NM
X0NUWF9uZXcsCisJCQkJICBMSUJTPSItbHNzbCAke0xJQlN9IiwKKwkJCQkgIHdpdGhfb3BlbnNz
bD0ibm8iLCAtbGNyeXB0byAtbGNyeXB0ICRMSUJfUlNBUkVGKQorCQkKKwkJOzsKKwkqKSAgT1BF
TlNTTF9JTkM9Ii1JJHt3aXRoX29wZW5zc2x9L2luY2x1ZGUiCisJICAgIE9QRU5TU0xfTElCUEFU
SD0iJHt3aXRoX29wZW5zc2x9L2xpYiIKKwkgICAgT1BFTlNTTF9MSUI9Ii1MJHtPUEVOU1NMX0xJ
QlBBVEh9IgorCSAgICBDUFBGTEFHUz0iJHtDUFBGTEFHU30gJHtPUEVOU1NMX0lOQ30iCisJICAg
IENNVV9BRERfTElCUEFUSCgke09QRU5TU0xfTElCUEFUSH0pCisJICAgIENNVV9BRERfTElCUEFU
SF9UTygke09QRU5TU0xfTElCUEFUSH0sIE9QRU5TU0xfTElCKQorCSAgICBMSUJTPSIke0xJQlN9
IC1sc3NsIC1sY3J5cHRvIC1sY3J5cHQiOzsKK2VzYWMKKwogQUNfTVNHX0NIRUNLSU5HKGZvciBP
cGVuU1NMKQogQUNfTVNHX1JFU1VMVCgkd2l0aF9vcGVuc3NsKQogCkBAIC00MjksNyArNDcwLDcg
QEAKICAgaWYgdGVzdCAiJGVuYWJsZV9zdGF0aWMiID0geWVzOyB0aGVuCiAgICAgU0FTTF9TVEFU
SUNfU1JDUz0iJFNBU0xfU1RBVElDX1NSQ1MgXCQodG9wX3NyY2RpcikvcGx1Z2lucy9kaWdlc3Rt
ZDUuYyIKICAgICBTQVNMX1NUQVRJQ19PQkpTPSIkU0FTTF9TVEFUSUNfT0JKUyBkaWdlc3RtZDUu
byIKLSAgICBBQ19ERUZJTkUoU1RBVElDX0RJR0VTVE1ENSwgW10sIFtMaW5rIERJR0VTVC1NRDUg
U3RhdGljbHldKQorICAgIEFDX0RFRklORShTVEFUSUNfRElHRVNUTUQ1LCBbXSwgW0xpbmsgRElH
RVNULU1ENSBTdGF0aWNhbGx5XSkKICAgZmkKIGVsc2UKICAgQUNfTVNHX1JFU1VMVChkaXNhYmxl
ZCkKQEAgLTQ4MSw3ICs1MjIsNyBAQAogICBpZiB0ZXN0ICIkZW5hYmxlX3N0YXRpYyIgPSB5ZXM7
IHRoZW4KICAgICBTQVNMX1NUQVRJQ19TUkNTPSIkU0FTTF9TVEFUSUNfU1JDUyBcJCh0b3Bfc3Jj
ZGlyKS9wbHVnaW5zL290cC5jIgogICAgIFNBU0xfU1RBVElDX09CSlM9IiRTQVNMX1NUQVRJQ19P
QkpTIG90cC5vIgotICAgIEFDX0RFRklORShTVEFUSUNfT1RQLCBbXSwgW0xpbmsgT1RQIFN0YXRp
Y2x5XSkKKyAgICBBQ19ERUZJTkUoU1RBVElDX09UUCwgW10sIFtMaW5rIE9UUCBTdGF0aWNhbGx5
XSkKICAgZmkKIAogICBkbmwgVGVzdCBmb3IgT1BJRQpAQCAtNTM4LDcgKzU3OSw3IEBACiAgIGlm
IHRlc3QgIiRlbmFibGVfc3RhdGljIiA9IHllczsgdGhlbgogICAgIFNBU0xfU1RBVElDX1NSQ1M9
IiRTQVNMX1NUQVRJQ19TUkNTIFwkKHRvcF9zcmNkaXIpL3BsdWdpbnMvc3JwLmMiCiAgICAgU0FT
TF9TVEFUSUNfT0JKUz0iJFNBU0xfU1RBVElDX09CSlMgc3JwLm8iCi0gICAgQUNfREVGSU5FKFNU
QVRJQ19TUlAsIFtdLCBbTGluayBTUlAgU3RhdGljbHldKQorICAgIEFDX0RFRklORShTVEFUSUNf
U1JQLCBbXSwgW0xpbmsgU1JQIFN0YXRpY2FsbHldKQogICBmaQogCiBkbmwgc3JwX3NldHBhc3Mg
c3VwcG9ydApAQCAtNTY0LDcgKzYwNSw3IEBACiBTQVNMX0dTU0FQSV9DSEsKIAogaWYgdGVzdCAi
JGdzc2FwaSIgIT0gIm5vIjsgdGhlbgotICBBQ19ERUZJTkUoU1RBVElDX0dTU0FQSVYyLFtdLFtM
aW5rIEdTU0FQSSBTdGF0aWNseV0pCisgIEFDX0RFRklORShTVEFUSUNfR1NTQVBJVjIsW10sW0xp
bmsgR1NTQVBJIFN0YXRpY2FsbHldKQogICBtdXRleF9kZWZhdWx0PSJubyIKICAgaWYgdGVzdCAi
JGdzc19pbXBsIiA9ICJtaXQiOyB0aGVuCiAgICAgIG11dGV4X2RlZmF1bHQ9InllcyIKQEAgLTU5
Miw5ICs2MzMsOSBAQAogICBBQ19NU0dfUkVTVUxUKGVuYWJsZWQpCiAgIFNBU0xfTUVDSFM9IiRT
QVNMX01FQ0hTIGxpYmFub255bW91cy5sYSIKICAgaWYgdGVzdCAiJGVuYWJsZV9zdGF0aWMiID0g
eWVzOyB0aGVuCi0gICAgU0FTTF9TVEFUSUNfT0JKUz0iJFNBU0xfU1RBVElDX09CSlMgYW5vbnlt
b3VzLm8iCiAgICAgU0FTTF9TVEFUSUNfU1JDUz0iJFNBU0xfU1RBVElDX1NSQ1MgXCQodG9wX3Ny
Y2RpcikvcGx1Z2lucy9hbm9ueW1vdXMuYyIKLSAgICBBQ19ERUZJTkUoU1RBVElDX0FOT05ZTU9V
UywgW10sIFtMaW5rIEFOT05ZTU9VUyBTdGF0aWNseV0pCisgICAgU0FTTF9TVEFUSUNfT0JKUz0i
JFNBU0xfU1RBVElDX09CSlMgYW5vbnltb3VzLm8iCisgICAgQUNfREVGSU5FKFNUQVRJQ19BTk9O
WU1PVVMsIFtdLCBbTGluayBBTk9OWU1PVVMgU3RhdGljYWxseV0pCiAgIGZpCiBlbHNlCiAgIEFD
X01TR19SRVNVTFQoZGlzYWJsZWQpCkBAIC02MTIsNyArNjUzLDcgQEAKICAgaWYgdGVzdCAiJGVu
YWJsZV9zdGF0aWMiID0geWVzOyB0aGVuCiAgICAgU0FTTF9TVEFUSUNfU1JDUz0iJFNBU0xfU1RB
VElDX1NSQ1MgXCQodG9wX3NyY2RpcikvcGx1Z2lucy9sb2dpbi5jIgogICAgIFNBU0xfU1RBVElD
X09CSlM9IiRTQVNMX1NUQVRJQ19PQkpTIGxvZ2luLm8iCi0gICAgQUNfREVGSU5FKFNUQVRJQ19M
T0dJTixbXSxbTGluayBMT0dJTiBTdGF0aWNseV0pCisgICAgQUNfREVGSU5FKFNUQVRJQ19MT0dJ
TixbXSxbTGluayBMT0dJTiBTdGF0aWNhbGx5XSkKICAgZmkKIGVsc2UKICAgQUNfTVNHX1JFU1VM
VChkaXNhYmxlZCkKQEAgLTYzOCw3ICs2NzksNyBAQAogICBpZiB0ZXN0ICIkZW5hYmxlX3N0YXRp
YyIgPSB5ZXM7IHRoZW4KICAgICBTQVNMX1NUQVRJQ19TUkNTPSIkU0FTTF9TVEFUSUNfU1JDUyBc
JCh0b3Bfc3JjZGlyKS9wbHVnaW5zL250bG0uYyIKICAgICBTQVNMX1NUQVRJQ19PQkpTPSIkU0FT
TF9TVEFUSUNfT0JKUyBudGxtLm8iCi0gICAgQUNfREVGSU5FKFNUQVRJQ19OVExNLFtdLFtMaW5r
IE5UTE0gU3RhdGljbHldKQorICAgIEFDX0RFRklORShTVEFUSUNfTlRMTSxbXSxbTGluayBOVExN
IFN0YXRpY2FsbHldKQogICBmaQogZWxzZQogICBBQ19NU0dfUkVTVUxUKGRpc2FibGVkKQpAQCAt
NjYyLDkgKzcwMyw5IEBACiAKICAgU0FTTF9NRUNIUz0iJFNBU0xfTUVDSFMgbGlicGFzc2Rzcy5s
YSIKICAgaWYgdGVzdCAiJGVuYWJsZV9zdGF0aWMiID0geWVzOyB0aGVuCi0gICAgU0FTTF9TVEFU
SUNfT0JKUz0iJFNBU0xfU1RBVElDX09CSlMgcGFzc2Rzcy5vIgogICAgIFNBU0xfU1RBVElDX1NS
Q1M9IiRTQVNMX1NUQVRJQ19TUkNTIFwkKHRvcF9zcmNkaXIpL3BsdWdpbnMvcGFzc2Rzcy5jIgot
ICAgIEFDX0RFRklORShTVEFUSUNfUEFTU0RTUyxbXSxbTGluayBQQVNTRFNTIFN0YXRpY2x5XSkK
KyAgICBTQVNMX1NUQVRJQ19PQkpTPSIkU0FTTF9TVEFUSUNfT0JKUyBwYXNzZHNzLm8iCisgICAg
QUNfREVGSU5FKFNUQVRJQ19QQVNTRFNTLFtdLFtMaW5rIFBBU1NEU1MgU3RhdGljYWxseV0pCiAg
IGZpCiBlbHNlCiAgIEFDX01TR19SRVNVTFQoZGlzYWJsZWQpCkBAIC02OTUsNyArNzM2LDcgQEAK
ICAgaWYgdGVzdCAiJGVuYWJsZV9zdGF0aWMiID0geWVzOyB0aGVuCiAgICAgU0FTTF9TVEFUSUNf
U1JDUz0iJFNBU0xfU1RBVElDX1NSQ1MgXCQodG9wX3NyY2RpcikvcGx1Z2lucy9zcWwuYyIKICAg
ICBTQVNMX1NUQVRJQ19PQkpTPSIkU0FTTF9TVEFUSUNfT0JKUyBzcWwubyIKLSAgICBBQ19ERUZJ
TkUoU1RBVElDX1NRTCxbXSxbTGluayBTUUwgcGx1Z2luIHN0YXRpY2x5XSkKKyAgICBBQ19ERUZJ
TkUoU1RBVElDX1NRTCxbXSxbTGluayBTUUwgcGx1Z2luIHN0YXRpY2FsbHldKQogICBmaQogZWxz
ZQogICBBQ19NU0dfUkVTVUxUKGRpc2FibGVkKQpAQCAtOTQ2LDYgKzk4NywxMiBAQAogQUNfQVJH
X0VOQUJMRShsZGFwZGIsIFsgIC0tZW5hYmxlLWxkYXBkYiAgICAgICAgIGVuYWJsZSBMREFQREIg
cGx1Z2luIFtub10gXSwKICAgbGRhcGRiPSRlbmFibGV2YWwsCiAgIGxkYXBkYj1ubykKKworaWYg
dGVzdCAiJHdpdGhfb3BlbnNzbCIgPSBubzsgdGhlbgorICBBQ19XQVJOKFtPcGVuU1NMIG5vdCBm
b3VuZCAtLSBMREFQREIgd2lsbCBiZSBkaXNhYmxlZF0pCisgIGxkYXBkYj1ubworZmkKKwogQUNf
TVNHX0NIRUNLSU5HKExEQVBEQikKIGlmIHRlc3QgIiRsZGFwZGIiICE9IG5vOyB0aGVuCiAgICAg
QUNfTVNHX1JFU1VMVChlbmFibGVkKQpAQCAtOTg3LDcgKzEwMzQsNyBAQAogICAgICAgICAgICAg
aWYgdGVzdCAiJGVuYWJsZV9zdGF0aWMiID0geWVzOyB0aGVuCiAgICAgICAgICAgICAgICAgU0FT
TF9TVEFUSUNfU1JDUz0iJFNBU0xfU1RBVElDX1NSQ1MgXCQodG9wX3NyY2RpcikvcGx1Z2lucy9s
ZGFwZGIuYyIKICAgICAgICAgICAgICAgICBTQVNMX1NUQVRJQ19PQkpTPSIkU0FTTF9TVEFUSUNf
T0JKUyBsZGFwZGIubyIKLSAgICAgICAgICAgICAgICBBQ19ERUZJTkUoU1RBVElDX0xEQVBEQixb
XSxbTGluayBsZGFwZGIgcGx1Z2luIFN0YXRpY2x5XSkKKyAgICAgICAgICAgICAgICBBQ19ERUZJ
TkUoU1RBVElDX0xEQVBEQixbXSxbTGluayBsZGFwZGIgcGx1Z2luIFN0YXRpY2FsbHldKQogICAg
ICAgICAgICAgZmkKICAgICAgICAgZmkKICAgICBmaQpAQCAtMTAwMSwxMCArMTA0OCwxNiBAQAog
ZmkKIAogQUNfU1VCU1QoU0FTTF9NRUNIUykKK1NBU0xfTUVDSFNfTElCUz0iIgorZm9yIGxpYiBp
biAke1NBU0xfTUVDSFN9OyBkbworICAgIFNBU0xfTUVDSFNfTElCUz0iJFNBU0xfTUVDSFNfTElC
UyAuLi9wbHVnaW5zLyR7bGlifSIKK2RvbmUKK0FDX1NVQlNUKFNBU0xfTUVDSFNfTElCUykKIEFD
X1NVQlNUKFNBU0xfU1RBVElDX1NSQ1MpCiBBQ19TVUJTVChTQVNMX1NUQVRJQ19PQkpTKQogQUNf
U1VCU1QoU0FTTF9TVEFUSUNfTElCUykKIAorcGx1Z2luZGlyPS91c3IvbGliL3Nhc2wyCiBBQ19B
UkdfV0lUSChwbHVnaW5kaXIsIFsgIC0td2l0aC1wbHVnaW5kaXI9RElSICAgIHNldCB0aGUgZGly
ZWN0b3J5IHdoZXJlIHBsdWdpbnMgd2lsbAogICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBm
b3VuZCBbWy91c3IvbGliL3Nhc2wyXV0gXSwKICAgcGx1Z2luZGlyPSR3aXRodmFsLApAQCAtMTAx
Myw3ICsxMDY2LDcgQEAKIEFDX1NVQlNUKHBsdWdpbmRpcikKIAogQUNfQVJHX1dJVEgoY29uZmln
ZGlyLCBbICAgLS13aXRoLWNvbmZpZ2Rpcj1ESVIgICAgc2V0IHRoZSBkaXJlY3Rvcnkgd2hlcmUg
Y29uZmlnIGZpbGVzIHdpbGwKLSAgICAgICAgICAgICAgICAgICAgICAgICAgYmUgZm91bmQgWy91
c3IvbGliL3Nhc2wyXSBdLAorICAgICAgICAgICAgICAgICAgICAgICAgICBiZSBmb3VuZCBbJHBs
dWdpbmRpcjovZXRjL3Nhc2wyXSBdLAogICBjb25maWdkaXI9JHdpdGh2YWwsCiAgIGNvbmZpZ2Rp
cj0kcGx1Z2luZGlyOi9ldGMvc2FzbDIpCiBBQ19ERUZJTkVfVU5RVU9URUQoQ09ORklHRElSLCAi
JGNvbmZpZ2RpciIsIFtSdW50aW1lIGNvbmZpZyBmaWxlIGxvY2F0aW9uXSkKSW5kZXg6IFJFQURN
RQo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9zYXNsL1JFQURNRSx2CnJldHJpZXZpbmcg
cmV2aXNpb24gMS4zMwpkaWZmIC11IC1yMS4zMyBSRUFETUUKLS0tIFJFQURNRQkyNSBKYW4gMjAw
OCAwMTo1Nzo0MCAtMDAwMAkxLjMzCisrKyBSRUFETUUJMTcgRGVjIDIwMTEgMDM6MDk6MDQgLTAw
MDAKQEAgLTE2LDcgKzE2LDcgQEAKIElmIHlvdSBhcmUgbG9va2luZyB0byBwb3J0IFNBU0x2MSBh
cHBsaWNhdGlvbnMgdG8gU0FTTHYyLCBwbGVhc2Ugc2VlCiBkb2MvYXBwY29udmVydC5odG1sCiAK
LUJ1Z3MgY2FuIGJlIHNlYXJjaGVkL3JlcG9ydGVkIGF0OiBodHRwOi8vYnVnemlsbGEuYW5kcmV3
LmNtdS5lZHUKK0J1Z3MgY2FuIGJlIHNlYXJjaGVkL3JlcG9ydGVkIGF0OiBodHRwOi8vYnVnemls
bGEuY3lydXNpbWFwLm9yZy8KIAogRE9DVU1FTlRBVElPTgogLS0tLS0tLS0tLS0tLS0KSW5kZXg6
IE1ha2VmaWxlLmFtCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL3Nhc2wvTWFrZWZpbGUu
YW0sdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMzAKZGlmZiAtdSAtcjEuMzAgTWFrZWZpbGUuYW0K
LS0tIE1ha2VmaWxlLmFtCTIyIFNlcCAyMDExIDE0OjQxOjEyIC0wMDAwCTEuMzAKKysrIE1ha2Vm
aWxlLmFtCTE3IERlYyAyMDExIDAzOjA5OjA1IC0wMDAwCkBAIC0xLDQgKzEsNSBAQAogQVVUT01B
S0VfT1BUSU9OUyA9IDEuNworQUNMT0NBTF9BTUZMQUdTID0gLUkgY211bG9jYWwgLUkgY29uZmln
CiAjIFRvcC1sZXZlbCBNYWtlZmlsZS5hbSBmb3IgU0FTTAogIyBSb2IgRWFyaGFydAogIwpAQCAt
NjksNyArNzAsNyBAQAogSU5TVEFMTE9TWCA9IAogZW5kaWYKIAotU1VCRElSUz1pbmNsdWRlIHNh
c2xkYiBsaWIgcGx1Z2lucyB1dGlscyBkb2MgbWFuICQoUFdDKSAkKFNBTSkgJChKQVYpICQoU0FE
KQorU1VCRElSUz1pbmNsdWRlIHNhc2xkYiBwbHVnaW5zIGxpYiB1dGlscyBkb2MgbWFuICQoUFdD
KSAkKFNBTSkgJChKQVYpICQoU0FEKQogRVhUUkFfRElTVD1jb25maWcgY211bG9jYWwgd2luMzIg
bWFjIGRsY29tcGF0LTIwMDEwNTA1IE5UTWFrZWZpbGUgSU5TVEFMTC5UWFQKIAogZGlzdC1ob29r
Ogo=
</data>        

          </attachment>
      

    </bug>

</bugzilla>