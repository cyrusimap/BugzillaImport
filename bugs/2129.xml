<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2129</bug_id>
          
          <creation_ts>2003-08-20 20:06 EDT</creation_ts>
          <short_desc>Patches for lib/checkpw.c and saslauthd/ipc_doors.c</short_desc>
          <delta_ts>2010-10-25 18:46:33 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus SASL</product>
          <component>saslauthd</component>
          <version>2.1.x</version>
          <rep_platform>Sun</rep_platform>
          <op_sys>Solaris</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Gary Mills">mills@cc.umanitoba.ca</reporter>
          <assigned_to name="Rob Siemborski">rjs3@andrew.cmu.edu</assigned_to>
          
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Gary Mills">mills@cc.umanitoba.ca</who>
            <bug_when>2003-08-20 20:06:11 EDT</bug_when>
            <thetext>These patches improve doors functionality under Solaris.  They set a limit
on the maximum number of door_call threads, in accord with the man page.
`saslauthd -n 0&apos; restores the original behavior of unlimited threads.
The patches also add error checking to detect door call failures, to
eliminate a bogus error message.

If threads are not limited, they can increase without limit whenever the
underlying authentication system stalls.  When the logjam is broken,
saslauthd will have hundreds of idle threads.

`saslauthd -a pam -c -n 10 -t 1800&apos; works well for me.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Gary Mills">mills@cc.umanitoba.ca</who>
            <bug_when>2003-08-20 20:08:47 EDT</bug_when>
            <thetext>Created an attachment (id=215)
Limit saslauthd threads
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Gary Mills">mills@cc.umanitoba.ca</who>
            <bug_when>2003-08-20 20:09:40 EDT</bug_when>
            <thetext>Created an attachment (id=216)
door_calll error checking
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-09-03 17:46:18 EDT</bug_when>
            <thetext>committed/credited.</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>215</attachid>
            <date>2003-08-20 20:08 EDT</date>
            <desc>Limit saslauthd threads</desc>
            <filename>ipc_doors.c.diff</filename>
            <type>text/plain</type>
            <size>4943</size>
            <attacher>mills@cc.umanitoba.ca</attacher>
            
              <data encoding="base64">KioqIGlwY19kb29ycy5PYwlXZWQgSnVsIDIzIDEyOjA1OjMzIDIwMDMKLS0tIGlwY19kb29ycy5j
CVR1ZSBBdWcgMTIgMjE6NTM6MjUgMjAwMwoqKioqKioqKioqKioqKioKKioqIDU1LDYwICoqKioK
LS0tIDU1LDYxIC0tLS0KICAgKiBpbmNsdWRlcwogICoqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqLwogICNpbmNsdWRlIDxkb29yLmg+CisgI2luY2x1ZGUgPHB0aHJlYWQu
aD4KICAjaW5jbHVkZSA8c3lzL3R5cGVzLmg+CiAgI2luY2x1ZGUgPHN5cy9zdGF0Lmg+CiAgI2lu
Y2x1ZGUgPG5ldGluZXQvaW4uaD4KKioqKioqKioqKioqKioqCioqKiA2Myw2OCAqKioqCi0tLSA2
NCw3MSAtLS0tCiAgI2luY2x1ZGUgPHN0ZGlvLmg+CiAgI2luY2x1ZGUgPGVycm5vLmg+CiAgI2lu
Y2x1ZGUgPHN0cmluZy5oPgorICNpbmNsdWRlIDx1bmlzdGQuaD4KKyAjaW5jbHVkZSA8c3Ryb3B0
cy5oPgogIAogICNpbmNsdWRlICJnbG9iYWxzLmgiCiAgI2luY2x1ZGUgInV0aWxzLmgiCioqKioq
KioqKioqKioqKgoqKiogNzMsNzggKioqKgotLS0gNzYsODMgLS0tLQogICAqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KICBzdGF0aWMgdm9pZAlkb19yZXF1ZXN0KHZv
aWQgKiwgY2hhciAqLCBzaXplX3QsIGRvb3JfZGVzY190ICosIHVpbnRfdCk7CiAgc3RhdGljIHZv
aWQJc2VuZF9ubyhjaGFyICopOworIHN0YXRpYyB2b2lkCW5lZWRfdGhyZWFkKGRvb3JfaW5mb190
Kik7Cisgc3RhdGljIHZvaWQJKnNlcnZlcl90aHJlYWQodm9pZCAqKTsKICAKICAvKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKgogICAqIG1vZHVsZSBnbG9iYWxzCioqKioq
KioqKioqKioqKgoqKiogNzksODkgKioqKgogICAqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKi8KICBzdGF0aWMgY2hhcgkJCSpkb29yX2ZpbGU7ICAvKiBQYXRoIHRvIHRo
ZSBkb29yIGZpbGUgICAgICAgICovCiAgc3RhdGljIGludAkJCWRvb3JfZmQ7ICAgICAvKiBEb29y
IGZpbGUgZGVzY3JpcHRvciAgICAgICAgICovCiAgCi0gCiAgLyoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioKICAgKiBmbGFncyAgICAgICAJZ2xvYmFsIGZyb20gc2FzbGF1
dGhkLW1haW4uYwogICAqIHJ1bl9wYXRoICAgIAlnbG9iYWwgZnJvbSBzYXNsYXV0aGQtbWFpbi5j
CiAgICogZGV0YWNoX3R0eSgpCWZ1bmN0aW9uIGZyb20gc2FzbGF1dGhkLW1haW4uYwogICAqIGxv
Z2dlcigpCQlmdW5jdGlvbiBmcm9tIHV0aWxzLmMKICAgKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKiovCi0tLSA4NCw5NyAtLS0tCiAgICoqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqLwogIHN0YXRpYyBjaGFyCQkJKmRvb3JfZmlsZTsgIC8qIFBh
dGggdG8gdGhlIGRvb3IgZmlsZSAgICAgICAgKi8KICBzdGF0aWMgaW50CQkJZG9vcl9mZDsgICAg
IC8qIERvb3IgZmlsZSBkZXNjcmlwdG9yICAgICAgICAgKi8KKyBzdGF0aWMgcHRocmVhZF9hdHRy
X3QgdGhyZWFkX2F0dHI7CQkvKiBUaHJlYWQgYXR0cmlidXRlcyAJKi8KKyBzdGF0aWMgaW50CQkJ
bnVtX3RocjsJLyogTnVtYmVyIG9mIHRocmVhZHMgKi8KKyBzdGF0aWMgcHRocmVhZF9tdXRleF90
CQludW1fbG9jazsJLyogTG9jayBmb3IgdXBkYXRlICovCiAgCiAgLyoqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioKICAgKiBmbGFncyAgICAgICAJZ2xvYmFsIGZyb20gc2Fz
bGF1dGhkLW1haW4uYwogICAqIHJ1bl9wYXRoICAgIAlnbG9iYWwgZnJvbSBzYXNsYXV0aGQtbWFp
bi5jCisgICogbnVtX3Byb2NzICAgCWdsb2JhbCBmcm9tIHNhc2xhdXRoZC1tYWluLmMKICAgKiBk
ZXRhY2hfdHR5KCkJZnVuY3Rpb24gZnJvbSBzYXNsYXV0aGQtbWFpbi5jCiAgICogbG9nZ2VyKCkJ
CWZ1bmN0aW9uIGZyb20gdXRpbHMuYwogICAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKi8KKioqKioqKioqKioqKioqCioqKiAxMzMsMTM4ICoqKioKLS0tIDE0MSwxNDgg
LS0tLQogIAkJZXhpdCgxKTsKICAJfQogIAorIAkodm9pZCkgZG9vcl9zZXJ2ZXJfY3JlYXRlKCZu
ZWVkX3RocmVhZCk7CisgCiAgCWlmIChmYXR0YWNoKGRvb3JfZmQsIGRvb3JfZmlsZSkgPCAwKSB7
CiAgCQlsb2dnZXIoTF9FUlIsIExfRlVOQywgImZhaWxlZCB0byBhdHRhY2ggZG9vciB0byBmaWxl
OiAlcyIsCiAgCQkgICAgICAgZG9vcl9maWxlKTsKKioqKioqKioqKioqKioqCioqKiAxNTUsMTYw
ICoqKioKLS0tIDE2NSwxNzggLS0tLQogIAkgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCiAgCWZsYWdzICY9IH5VU0VfUFJPQ0VT
U19NT0RFTDsKICAKKyAJLyogSW5pdGlhbGl6ZSBtdXRleCAqLworIAlwdGhyZWFkX211dGV4X2lu
aXQoJm51bV9sb2NrLCBOVUxMKTsKKyAKKyAJLyogSW5pdGlhbGl6ZSB0aHJlYWQgYXR0cmlidXRl
cyAqLworIAlwdGhyZWFkX2F0dHJfaW5pdCgmdGhyZWFkX2F0dHIpOworIAlwdGhyZWFkX2F0dHJf
c2V0c2NvcGUoJnRocmVhZF9hdHRyLCBQVEhSRUFEX1NDT1BFX1NZU1RFTSk7CisgCXB0aHJlYWRf
YXR0cl9zZXRkZXRhY2hzdGF0ZSgmdGhyZWFkX2F0dHIsIFBUSFJFQURfQ1JFQVRFX0RFVEFDSEVE
KTsKKyAKICAJcmV0dXJuOwogIH0KICAKKioqKioqKioqKioqKioqCioqKiAzMTEsMzE3ICoqKioK
ICAJaWYgKGZsYWdzICYgVkVSQk9TRSkKICAJCWxvZ2dlcihMX0RFQlVHLCBMX0ZVTkMsICJyZXNw
b25zZTogJXMiLCByZXNwb25zZV9idWZmKTsKICAKISAJZG9vcl9yZXR1cm4ocmVzcG9uc2VfYnVm
Ziwgc3RybGVuKHJlc3BvbnNlX2J1ZmYpLCBOVUxMLCAwKTsKICAKICAJcmV0dXJuOwogIH0KLS0t
IDMyOSwzMzcgLS0tLQogIAlpZiAoZmxhZ3MgJiBWRVJCT1NFKQogIAkJbG9nZ2VyKExfREVCVUcs
IExfRlVOQywgInJlc3BvbnNlOiAlcyIsIHJlc3BvbnNlX2J1ZmYpOwogIAohIAlpZiAoZG9vcl9y
ZXR1cm4ocmVzcG9uc2VfYnVmZiwgc3RybGVuKHJlc3BvbnNlX2J1ZmYpLCBOVUxMLCAwKSA8IDAp
IHsKISAJCWxvZ2dlcihMX0VSUiwgTF9GVU5DLCAiZG9vcl9yZXR1cm46ICVzIiwgc3RyZXJyb3Io
ZXJybm8pKTsKISAJfQogIAogIAlyZXR1cm47CiAgfQoqKioqKioqKioqKioqKioKKioqIDMxOCwz
MjMgKioqKgotLS0gMzM4LDM3MSAtLS0tCiAgCiAgCiAgLyoqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioKKyAgKiBUaGUgYXZhaWxhYmxl
IHNlcnZlciAgdGhyZWFkICBwb29sICBpcyAgZGVwbGV0ZWQuCisgICogQ3JlYXRlIGEgbmV3IHRo
cmVhZCB3aXRoIHN1aXRhYmxlIGF0dHJpYnV0ZXMuCisgICogQ2xpZW50IGRvb3JfY2FsbCgpIHdp
bGwgYmxvY2sgdW50aWwgc2VydmVyIHRocmVhZCBpcyBhdmFpbGFibGUuCisgICoqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworIHZv
aWQgbmVlZF90aHJlYWQoZG9vcl9pbmZvX3QgKmRpKSB7CisgICBwdGhyZWFkX3QgbmV3dDsKKyAg
IGludCBtb3JlOworIAorICAgaWYgKG51bV9wcm9jcyA+IDApIHsKKyAgICAgcHRocmVhZF9tdXRl
eF9sb2NrKCZudW1fbG9jayk7CisgICAgIG1vcmUgPSAobnVtX3RociA8IG51bV9wcm9jcyk7Cisg
ICAgIGlmIChtb3JlKSBudW1fdGhyKys7CisgICAgIHB0aHJlYWRfbXV0ZXhfdW5sb2NrKCZudW1f
bG9jayk7CisgICAgIGlmICghbW9yZSkgcmV0dXJuOworICAgfQorICAgcHRocmVhZF9jcmVhdGUo
Jm5ld3QsICZ0aHJlYWRfYXR0ciwgJnNlcnZlcl90aHJlYWQsIE5VTEwpOworIH0KKyAKKyAvKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KgorICAqIFN0YXJ0IGEgbmV3IHNlcnZlciB0aHJlYWQuCisgICogTWFrZSBpdCBhdmFpbGFibGUg
Zm9yIGRvb3IgaW52b2NhdGlvbnMuCisgICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqLworIHZvaWQgKnNlcnZlcl90aHJlYWQodm9p
ZCAqYXJnKSB7CisgICBwdGhyZWFkX3NldGNhbmNlbHN0YXRlKFBUSFJFQURfQ0FOQ0VMX0RJU0FC
TEUsIE5VTEwpOworICAgZG9vcl9yZXR1cm4oTlVMTCwgMCwgTlVMTCwgMCk7CisgfQorIAorIC8q
KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq
KioqCiAgICogSW4gY2FzZSBzb21ldGhpbmcgd2VudCBvdXQgdG8gbHVuY2ggd2hpbGUgcGFyc2lu
ZyB0aGUKICAgKiByZXF1ZXN0IGRhdGEsIHdlIG1heSB3YW50IHRvIGF0dGVtcHQgdG8gc2VuZCBi
YWNrIGEKICAgKiAiTk8iIHJlc3BvbnNlIHRocm91Z2ggdGhlIGRvb3IuIFRoZSBtZXNnIGlzIG9w
dGlvbmFsLgoqKioqKioqKioqKioqKioKKioqIDMzNiwzNDQgKioqKgogIAlpZiAoZmxhZ3MgJiBW
RVJCT1NFKQogIAkJbG9nZ2VyKExfREVCVUcsIExfRlVOQywgInJlc3BvbnNlOiAlcyIsIGJ1ZmYp
OwogIAohIAlkb29yX3JldHVybihidWZmLCBzdHJsZW4oYnVmZiksIE5VTEwsIDApOwkKICAKICAJ
cmV0dXJuOwkKICB9CiAgCiAgI2VuZGlmIC8qIFVTRV9ET09SU19JUEMgKi8KLS0tIDM4NCwzOTgg
LS0tLQogIAlpZiAoZmxhZ3MgJiBWRVJCT1NFKQogIAkJbG9nZ2VyKExfREVCVUcsIExfRlVOQywg
InJlc3BvbnNlOiAlcyIsIGJ1ZmYpOwogIAohIAlpZiAoZG9vcl9yZXR1cm4oYnVmZiwgc3RybGVu
KGJ1ZmYpLCBOVUxMLCAwKSA8IDApIHsKISAJCWxvZ2dlcihMX0VSUiwgTF9GVU5DLCAiZG9vcl9y
ZXR1cm46ICVzIiwgc3RyZXJyb3IoZXJybm8pKTsKISAJfQogIAogIAlyZXR1cm47CQogIH0KICAK
ICAjZW5kaWYgLyogVVNFX0RPT1JTX0lQQyAqLworIAorIAorIAorIAo=
</data>        

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>216</attachid>
            <date>2003-08-20 20:09 EDT</date>
            <desc>door_calll error checking</desc>
            <filename>checkpw.c.diff</filename>
            <type>text/plain</type>
            <size>724</size>
            <attacher>mills@cc.umanitoba.ca</attacher>
            
              <data encoding="base64">KioqIGNoZWNrcHcuT2MJVHVlIEp1bCAyMiAxNjo0NDozMiAyMDAzCi0tLSBjaGVja3B3LmMJV2Vk
IEF1ZyAyMCAwOToxMzoxNiAyMDAzCioqKioqKioqKioqKioqKgoqKiogNTQyLDU0OCAqKioqCiAg
ICAgIGFyZy5yYnVmID0gcmVzcG9uc2U7CiAgICAgIGFyZy5yc2l6ZSA9IHNpemVvZihyZXNwb25z
ZSk7CiAgCiEgICAgIGRvb3JfY2FsbChzLCAmYXJnKTsKICAKICAgICAgaWYgKGFyZy5kYXRhX3B0
ciAhPSByZXNwb25zZSB8fCBhcmcuZGF0YV9zaXplID49IHNpemVvZihyZXNwb25zZSkpIHsKICAJ
Lyogb2ggZGFtbiwgd2UgZ290IGJhY2sgYSByZWFsbHkgbG9uZyByZXNwb25zZSAqLwotLS0gNTQy
LDU1MiAtLS0tCiAgICAgIGFyZy5yYnVmID0gcmVzcG9uc2U7CiAgICAgIGFyZy5yc2l6ZSA9IHNp
emVvZihyZXNwb25zZSk7CiAgCiEgICAgIGlmIChkb29yX2NhbGwocywgJmFyZykgPCAwKSB7CiEg
ICAgICAgLyogUGFyYW1ldGVycyBhcmUgdW5kZWZpbmVkICovCiEgCXNhc2xfc2V0ZXJyb3IoY29u
biwgMCwgImRvb3IgY2FsbCB0byBzYXNsYXV0aGQgc2VydmVyIGZhaWxlZDogJW0iLCBlcnJubyk7
CiEgCWdvdG8gZmFpbDsKISAgICAgfQogIAogICAgICBpZiAoYXJnLmRhdGFfcHRyICE9IHJlc3Bv
bnNlIHx8IGFyZy5kYXRhX3NpemUgPj0gc2l6ZW9mKHJlc3BvbnNlKSkgewogIAkvKiBvaCBkYW1u
LCB3ZSBnb3QgYmFjayBhIHJlYWxseSBsb25nIHJlc3BvbnNlICovCg==
</data>        

          </attachment>
      

    </bug>

</bugzilla>