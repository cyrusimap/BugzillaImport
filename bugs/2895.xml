<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2895</bug_id>
          
          <creation_ts>2006-12-06 12:50 EDT</creation_ts>
          <short_desc>cyrus-sample-client passes trailing LF to sasl_decode64</short_desc>
          <delta_ts>2011-01-27 19:33:17 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus SASL</product>
          <component>SASL</component>
          <version>2.1.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Fabian Fagerholm">fabbe@paniq.net</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          <cc>Alexey.Melnikov@isode.com</cc>
    
    <cc>b.candler@pobox.com</cc>
    
    <cc>marcin.cieslak@gmail.com</cc>
    
    <cc>woho@hottis.de</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Fabian Fagerholm">fabbe@paniq.net</who>
            <bug_when>2006-12-06 12:50:06 EDT</bug_when>
            <thetext>cyrus-sample-client passes the line feed character from the input string to
sasl_decode64:

$ sasl-sample-client
Waiting for mechanism list from server...
S: TlRMTSBMT0dJTiBQTEFJTiBBTk9OWU1PVVMgRElHRVNULU1ENSBHU1NBUEkgQ1JBTS1NRDU=
sasl-sample-client: Decoding data from base64: bad protocol / cancel

More information can be found in Debian bug #400955:
http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=400955

The exact Cyrus SASL version used is 2.1.22.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Wolfgang Hottgenroth">woho@hottis.de</who>
            <bug_when>2008-11-25 06:39:57 EDT</bug_when>
            <thetext>This patch to Cyrus-SASL 2.1.22 would increase the interoperability with clients sending the CRLF at the end of an base64 string. This is especially useful when someone needs to enter the dialog using telnet for debugging or analysis reasons:

diff -rNup cyrus-sasl-2.1.22-orig/lib/saslutil.c cyrus-sasl-2.1.22/lib/saslutil.c
--- cyrus-sasl-2.1.22-orig/lib/saslutil.c       2006-03-13 18:26:36.000000000 +0000
+++ cyrus-sasl-2.1.22/lib/saslutil.c    2008-11-25 11:39:13.293721000 +0000
@@ -224,7 +224,13 @@ int sasl_decode64(const char *in,
     if (inlen != 0) {
         if (saw_equal) {
             /* Unless there is CRLF at the end? */
-            return SASL_BADPROT;
+            if (!
+               (inlen == 2 &amp;&amp; in[0] == 13 &amp;&amp; in[1] == 10) ||
+               (inlen == 2 &amp;&amp; in[0] == 10 &amp;&amp; in[1] == 13) ||
+               (inlen == 1 &amp;&amp; in[0] == 13) ||
+               (inlen == 1 &amp;&amp; in[0] == 10)
+               )
+                       return SASL_BADPROT;
         } else {
            return (SASL_CONTINUE);
         }
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">murch@andrew.cmu.edu</who>
            <bug_when>2009-02-06 12:40:13 EDT</bug_when>
            <thetext>Alexey, you added code to not allow data after &apos;=&apos;.  What are your feelings on allowing CRLF?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Alexey Melnikov">Alexey.Melnikov@isode.com</who>
            <bug_when>2009-05-04 17:44:01 EDT</bug_when>
            <thetext>sample-client, sample-server and smtptest were fixed in 2.1.23.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Brian Candler">b.candler@pobox.com</who>
            <bug_when>2010-12-31 08:02:37 EDT</bug_when>
            <thetext>FYI, I think sample-server and sample-client were actually fixed *post* 2.1.23.

libsasl2-dev 2.1.23 from Ubuntu 10.04.1 LTS still has the problem, but checking the source for 2.1.24rc1, it does strip trailing \n in sample-server and sample-client.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Marcin CieÅ›lak">marcin.cieslak@gmail.com</who>
            <bug_when>2011-01-27 19:33:17 EDT</bug_when>
            <thetext>
&gt; libsasl2-dev 2.1.23 from Ubuntu 10.04.1 LTS still has the problem, but checking
&gt; the source for 2.1.24rc1, it does strip trailing \n in sample-server and
&gt; sample-client.


Confirmed. 

It is fixed in 

sample/sample-server.c

----------------------------
revision 1.33
date: 2009/05/04 21:35:51;  author: mel;  state: Exp;  lines: +10 -3
Fixed bug # 2895 (passing LF to sasl_decode64)

sample/sample-client.c

----------------------------
revision 1.32
date: 2009/05/04 21:35:51;  author: mel;  state: Exp;  lines: +13 -3
Fixed bug # 2895 (passing LF to sasl_decode64)

This is pretty frustrating, since any of the SASL troubleshooting guides work anymore and 2.1.23 is pretty widespread.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>