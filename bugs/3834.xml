<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3834</bug_id>
          <alias>editheader</alias>
          <creation_ts>2014-01-08 13:30 EDT</creation_ts>
          <short_desc>Implement Sieve Email Filtering: Editheader Extension (RFC 5293)</short_desc>
          <delta_ts>2015-09-05 11:00:09 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Sieve</component>
          <version>2.5.x (next)</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>NEW</bug_status>
          
          
          <bug_file_loc>http://www.ietf.org/rfc/rfc5293.txt</bug_file_loc>
          
          
          <priority>P3</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Tormen">quickhelp@gmail.com</reporter>
          <assigned_to name="Bron Gondwana">brong@fastmail.fm</assigned_to>
          <cc>hmh@debian.org</cc>
    
    <cc>quickhelp@gmail.com</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Tormen">quickhelp@gmail.com</who>
            <bug_when>2014-01-08 13:30:13 EDT</bug_when>
            <thetext>Hi,

I would find it very useful to have this feature available for sieve.
So I decided to vote +1 for it here.

Usefulness:

  * Extremely useful for debugging Sieve scripts 
    as a user (without access to server logfiles)

  * Extremely useful to add header marking mails that fall in certain categories
    as a consequence also allows to simplify sieve scripts (in some cases)

Let the discussion begin :)
(or not ;)


Thanks in any case for cyrusImapD :))


Tormen.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Tormen">quickhelp@gmail.com</who>
            <bug_when>2014-01-08 14:13:43 EDT</bug_when>
            <thetext>I was asked to add some specific examples:

(1.) DEBUGGING SIEVE SCRIPTS:

I needed to find a bug in my sieve script lately ... I had a &quot;stop&quot; where it did not belong.
So I ended up inserting:
    fileinto :copy &quot;Archives/test-mails/00000&quot;; # == DBG:
across the script (obviously every time I changed the NUMBER at the end)

... but that also meant that I had to create the folder structure under Archives/test-mails/...

So a simple:
    addheader &quot;X-Mine-Debug&quot; &quot;been-here-00000&quot;
would have been easier.


(2.) CLASSIFYING MAIL:

I am hosting several domains that all go &quot;catchall&quot; into ONE kolab.com account.
One of the domains is my private domain.
On there I receive tons of mail.
They fall into different categories.
For instance: 
   &quot;commercial mail&quot;
But &quot;commercial mail&quot; corresponds to not only one email address, but a bunch.

So here is in my case how I recognize them:
### MYDOMAIN.COMMERCIAL:
    if anyof (
      header :regex [ &quot;To&quot;, &quot;Cc&quot; ]  [ &quot;kaufen@mydomain.org&quot;,    &quot;[a-z-]+.cmg@mydomain.org&quot; ],                              #### GERMAN
      header :regex [ &quot;To&quot;, &quot;Cc&quot; ]  [ &quot;shopping@mydomain.org&quot;,  &quot;[a-z-]+.cme@mydomain.org&quot; ],                              #### ENGLISH
      header :regex [ &quot;To&quot;, &quot;Cc&quot; ]  [ &quot;acheter@mydomain.org&quot;,   &quot;[a-z-]+.cmf@mydomain.org&quot;, &quot;achat@mydomain.org&quot; ],   #### FRENCH
      header :regex [ &quot;To&quot;, &quot;Cc&quot; ]  [ &quot;[a-z-]+.spm@mydomain.org&quot; ],                                                             #### any [other] lang.
      header :contains [ &quot;To&quot;, &quot;Cc&quot; ] &quot;bank@mydomain.org&quot;,
      header :contains   &quot;Received&quot; &quot;for &lt;bank@mydomain.org&gt;;&quot;,
      header :regex   &quot;Received&quot;    [ &quot;for &lt;kaufen@mydomain.org&gt;;&quot;,    &quot;for &lt;[a-z-]+.cmg@mydomain.org&gt;;&quot; ],                              #### GERMAN
      header :regex   &quot;Received&quot;    [ &quot;for &lt;shopping@mydomain.org&gt;;&quot;,  &quot;for &lt;[a-z-]+.cme@mydomain.org&gt;;&quot; ],                              #### ENGLISH
      header :regex   &quot;Received&quot;    [ &quot;for &lt;acheter@mydomain.org&gt;;&quot;,   &quot;for &lt;[a-z-]+.cmf@mydomain.org&gt;;&quot;, &quot;for &lt;achat@mydomain.org&gt;;&quot; ],   #### FRENCH
      header :regex   &quot;Received&quot;    [ &quot;for &lt;[a-z-]+.spm@mydomain.org&gt;;&quot; ],                                                             #### any [other] lang.
      header :contains &quot;From&quot; &quot;noreply@wallet.google.com&quot;
    ) { 
    ... 
    }

As I want to later specifically target these mails within my mail client it would be very neat to be able to MARK them (classifying the mail) by adding a header:

    addheader &quot;X-Mine-Category&quot; &quot;commercial&quot;


(3.) SIMPLIFYING SIEVE SCRIPTS:

As you can see I have this (as I find very ugly) contsruct where I need to filter &quot;To&quot;, &quot;Cc&quot; with one sieve criteria and then the &quot;Bcc&quot; case via the &quot;Received&quot; header as a second criteria ... I would *love* to be able to determine the email address that was responsible for me receiving a mail (like the &quot;Delivered-To&quot; header of postfix !) and store that email address in a header to extremely simply the sieve scripts.

But for this to work I would need 
   * Regex extension (which cyrusimap has)
   * Variables Extension (not sure if this is already implemented)
     http://tools.ietf.org/html/rfc5229
   * Action &quot;extracttext&quot; from 
     http://tools.ietf.org/html/rfc5703#page-11

But with this I could add a customheader:
    
    addheader &quot;X-Mine-Delivered-To&quot; &quot;${deliveredTo}&quot;
    where ${deliveredTo} would be the variable that I stored the (first) found email address belonging to @mydomain.com or to @myotherdomain.com

And then the above block to recognize a commercial mail could shrink to HALF it&apos;s size(!):

### MYDOMAIN.COMMERCIAL:
    if anyof (
      header :regex &quot;X-Mine-Delivered-To&quot;  &quot;[a-z-]+.cmg@mydomain.org&quot;,                              #### GERMAN
      header :regex &quot;X-Mine-Delivered-To&quot;  &quot;[a-z-]+.cme@mydomain.org&quot;,                              #### ENGLISH
      header :regex &quot;X-Mine-Delivered-To&quot;  &quot;[a-z-]+.cmf@mydomain.org&quot;,                              #### FRENCH
      header :regex &quot;X-Mine-Delivered-To&quot;  [ &quot;[a-z-]+.spm@mydomain.org&quot; ],                                                             #### any [other] lang.
      header :is &quot;X-Mine-Delivered-To&quot; [ &quot;kaufen@mydomain.org&quot;, &quot;shopping@mydomain.org&quot;, &quot;acheter@mydomain.org&quot;, &quot;achat@mydomain.org&quot;, &quot;bank@mydomain.org&quot; ] ) { ... }

SIDE NOTE:
As you my have noticed I moved the kaufen@ shopping@ to bank@ and changed &quot;contains&quot; to &quot;is&quot;.
This is very nice as well, because by extracting the precise email address that  was responsible for getting the mail delivered to me one can now (easily) distinguish between:
     foo@mydomain.org
and
     barfoo@mydomain.org

which a 
     if header :contains &quot;foo@mydomain.org&quot;
can not!</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Henrique de Moraes Holschuh">hmh@debian.org</who>
            <bug_when>2015-09-05 11:00:09 EDT</bug_when>
            <thetext>+1.

Some webmail clients/android apps support mail-followup-to, and unlike Mutt they rarely allow the user to disable such support.  Therefore, sources of email with an incorrect mail-followup-to header are extremely annoying, e.g., on fastmail.fm.

If I could use sieve to filter out the broken mail-followup-to, I would be able to work around the issue until the source of the broken mail-followup-to headers gets fixed.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>