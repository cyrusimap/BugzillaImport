<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2060</bug_id>
          
          <creation_ts>2003-05-14 16:03 EDT</creation_ts>
          <short_desc>sieveshell wants STARTTLS support</short_desc>
          <delta_ts>2014-10-21 10:01:11 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Sieve</component>
          <version>2.1.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>ASSIGNED</bug_status>
          
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>2.6-next</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rob Siemborski">rjs3@andrew.cmu.edu</reporter>
          <assigned_to name="Bron Gondwana">brong@fastmail.fm</assigned_to>
          <cc>brong@fastmail.fm</cc>
    
    <cc>cg2v@andrew.cmu.edu</cc>
    
    <cc>larstobi@snota.no</cc>
    
    <cc>mail@roland-stuehmer.de</cc>
    
    <cc>patl@curl.com</cc>
    
    <cc>ro@TechFak.Uni-Bielefeld.DE</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-05-14 16:03:22 EDT</bug_when>
            <thetext>Similar to the report in Bug 2036, the Cyrus::SIEVE::managesieve perl
module lacks STARTTLS support and is thus unusable with a Cyrus IMAP server
which enforces encryption (unless e.g. a Kerberos infrastructure is in
place).  Unfortunately, while the former bug seems fixable with a limited
amount of coding, this perl module doesn&apos;t use the imclient API, but
duplicates much of it; so adding STARTTLS support requires even more code
duplication between imtest/imtest.c, lib/imclient.c and this module.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-05-14 16:04:54 EDT</bug_when>
            <thetext>Its unclear to me that we need to make the client code all the more complicated
by forcing managesieve and imclient to share.  Perhaps imtest could benefit
(from being shared with imclient), but I think the architechure of that module
is significantly different enough that I am not convinced (plus, that would only
help  IMAP, not the other protocols).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rainer Orth">ro@TechFak.Uni-Bielefeld.DE</who>
            <bug_when>2003-05-22 12:01:16 EDT</bug_when>
            <thetext>Created an attachment (id=192)
Initial implementation of STARTTLS for Cyrus::SIEVE::managesieve
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Andreas Hasenack">andreas@conectiva.com.br</who>
            <bug_when>2005-11-08 06:10:50 EDT</bug_when>
            <thetext>I would too like to have start tls support in sieveshell. Currently I have to
add users to a kerberos 5 server just because of this (users who would otherwise
not need to have a kerberos account nor learn how to use it).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2012-10-17 16:42:37 EDT</bug_when>
            <thetext>There&apos;s even an attachment :)  Here you go Ken.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2012-10-17 16:43:24 EDT</bug_when>
            <thetext>OK, I&apos;ll take it.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2014-10-21 09:55:59 EDT</bug_when>
            <thetext>Batch moving bugs that won&apos;t be in 2.5</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>192</attachid>
            <date>2003-05-22 12:01 EDT</date>
            <desc>Initial implementation of STARTTLS for Cyrus::SIEVE::managesieve</desc>
            <filename>perl.sieve.udif</filename>
            <type>text/plain</type>
            <size>22968</size>
            <attacher>ro@TechFak.Uni-Bielefeld.DE</attacher>
            
              <data encoding="base64">VGh1IE1heSAyMiAxNzo0OTozNiAyMDAzICBSYWluZXIgT3J0aCAgPHJvQFRlY2hGYWsuVW5pLUJp
ZWxlZmVsZC5ERT4KCgkqIHBlcmwvc2lldmUvbGliL2lzaWV2ZS5jOiBJbmNsdWRlIGFzc2VydC5o
LgoJW0hBVkVfU1NMXTogSW5jbHVkZSBPcGVuU1NMIGhlYWRlcnMuCgkoc3RydWN0IGlzZWl2ZV9z
KTogTmV3IG1lbWJlcnMgZm9yIFNUQVJUVExTIHN1cHBvcnQuCgkocmVhZF9jYXBhYmlsaXR5KTog
UmVtZW1iZXIgU1RBUlRUTFMgY2FwYWJpbGl0eS4KCShhdXRoX3N0YXJ0dGxzKTogTmV3IGZ1bmN0
aW9uLgoJKGRvX3JlZmVycmFsKSBbSEFWRV9TU0xdOiBQZXJmb3JtIFNUQVJUVExTLgoJW0hBVkVf
U1NMXTogVExTIHN1cHBvcnQsIGNvcGllZCBmcm9tIGltY2xpZW50LmMgd2l0aCBzbGlnaHQKCW1v
ZGlmaWNhdGlvbnMgZm9yIGlzaWV2ZSB0eXBlcyBldGMuLCByZW1vdmVkIGRlYnVnZ2luZyBjb2Rl
LgoJKiBwZXJsL3NpZXZlL2xpYi9pc2lldmUuaCAoYXV0aF9zdGFydHRscyk6IERlY2xhcmUuCgkq
IHBlcmwvc2lldmUvbGliL3JlcXVlc3QuYyAoaGFuZGxlX3Jlc3BvbnNlKTogSGFuZGxlIG9wdGlv
bmFsIFNQCglzdHJpbmcgYWZ0ZXIgT0sgcmVzcG9uc2UuCgkoc3RhcnR0bHMpOiBOZXcgZnVuY3Rp
b24uCgkqIHBlcmwvc2lldmUvbGliL3JlcXVlc3QuaCAoc3RhcnR0bHMpOiBEZWNsYXJlIGl0LgoJ
KiBwZXJsL3NpZXZlL21hbmFnZXNpZXZlL01ha2VmaWxlLlBMIChERUZJTkUpOiBEZWZpbmUgSEFW
RV9TU0wgaWYKCWF2YWlsYWJsZS4KCSogcGVybC9zaWV2ZS9tYW5hZ2VzaWV2ZS9tYW5hZ2VzaWV2
ZS54cyAoc2lldmVfZ2V0X2hhbmRsZSk6IEFkZAoJdGxzX2tleWZpbGUgYXJnLgoJUGVyZm9ybSBT
VEFSVFRMUy4KCSogcGVybC9zaWV2ZS9zY3JpcHRzL2luc3RhbGxzaWV2ZS5wbDogSGFuZGxlIC10
bHNrZXksIC1ub3RscwoJc3dpdGNoZXMuCgkqIHBlcmwvc2lldmUvc2NyaXB0cy9zaWV2ZXNoZWxs
LnBsOiBMaWtld2lzZS4KCQpJbmRleDogbGliL2lzaWV2ZS5jCj09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6
IC9jdnMvc3JjL2N5cnVzL3Blcmwvc2lldmUvbGliL2lzaWV2ZS5jLHYKcmV0cmlldmluZyByZXZp
c2lvbiAxLjI0CmRpZmYgLXUgLXAgLXIxLjI0IGlzaWV2ZS5jCi0tLSBsaWIvaXNpZXZlLmMJMjUg
TWF5IDIwMDIgMTk6NTc6NTAgLTAwMDAJMS4yNAorKysgbGliL2lzaWV2ZS5jCTIyIE1heSAyMDAz
IDE1OjQzOjI3IC0wMDAwCkBAIC00NSw2ICs0NSw4IEBACiAjaW5jbHVkZSA8Y29uZmlnLmg+CiAj
ZW5kaWYKIAorI2luY2x1ZGUgPGFzc2VydC5oPgorCiAjaWZkZWYgSEFWRV9VTklTVERfSAogI2lu
Y2x1ZGUgPHVuaXN0ZC5oPgogI2VuZGlmCkBAIC01OSw2ICs2MSwxNSBAQAogI2luY2x1ZGUgPHNh
c2wvc2FzbC5oPgogI2luY2x1ZGUgPHNhc2wvc2FzbHV0aWwuaD4KIAorI2lmZGVmIEhBVkVfU1NM
CisjaW5jbHVkZSA8b3BlbnNzbC9saGFzaC5oPgorI2luY2x1ZGUgPG9wZW5zc2wvYm4uaD4KKyNp
bmNsdWRlIDxvcGVuc3NsL2Vyci5oPgorI2luY2x1ZGUgPG9wZW5zc2wvcGVtLmg+CisjaW5jbHVk
ZSA8b3BlbnNzbC94NTA5Lmg+CisjaW5jbHVkZSA8b3BlbnNzbC9zc2wuaD4KKyNlbmRpZiAvKiBI
QVZFX1NTTCAqLworCiAjaW5jbHVkZSAiaXNpZXZlLmgiCiAjaW5jbHVkZSAibGV4LmgiCiAjaW5j
bHVkZSAicmVxdWVzdC5oIgpAQCAtNzcsMTMgKzg4LDI3IEBAIHN0cnVjdCBpc2VpdmVfcyB7CiAg
ICAgc2FzbF9jYWxsYmFja190ICpjYWxsYmFja3M7CiAKICAgICBpbnQgdmVyc2lvbjsKKyAgICBp
bnQgc3RhcnR0bHM7CisgICAgY2hhciAqdGxzX2tleWZpbGU7CiAKICAgICBzdHJ1Y3QgcHJvdHN0
cmVhbSAqcGluOwogICAgIHN0cnVjdCBwcm90c3RyZWFtICpwb3V0OworCisjaWZkZWYgSEFWRV9T
U0wKKyAgICBTU0xfQ1RYICp0bHNfY3R4OworICAgIFNTTCAqdGxzX2Nvbm47CisjZW5kaWYgLyog
SEFWRV9TU0wgKi8KIH07CiAKIHZvaWQgZmlsbGluX2ludGVyYWN0aW9ucyhzYXNsX2ludGVyYWN0
X3QgKnRsaXN0KTsKIAorI2lmZGVmIEhBVkVfU1NMCitzdGF0aWMgaW50IGlzaWV2ZV9zdGFydHRs
cyhpc2lldmVfdCAqb2JqLCBpbnQgdmVyaWZ5ZGVwdGgsCisJCQkgICBjaGFyICp2YXJfdGxzX2Nl
cnRfZmlsZSwgY2hhciAqdmFyX3Rsc19rZXlfZmlsZSwKKwkJCSAgIGludCAqbGF5ZXIpOworI2Vu
ZGlmIC8qIEhBVkVfU1NMICovCisKKwogLyogd2UgbmVlZCB0aGlzIHNlcGFyYXRlIGZyb20gdGhl
IGZyZWUoKSBjYWxsIHNvIHRoYXQgd2UgY2FuIHJldXNlCiAgKiB0aGUgc2FtZSBtZW1vcnkgZm9y
IHJlZmVycmFscyAqLwogc3RhdGljIHZvaWQgc2lldmVfZGlzcG9zZShpc2lldmVfdCAqb2JqKSAK
QEAgLTI2MSw3ICsyODYsNyBAQCBjaGFyICogcmVhZF9jYXBhYmlsaXR5KGlzaWV2ZV90ICpvYmop
CiAgICAgICB9IGVsc2UgaWYgKHN0cmNhc2VjbXAoYXR0ciwiSU1QTEVNRU5UQVRJT04iKT09MCkg
ewogCiAgICAgICB9IGVsc2UgaWYgKHN0cmNhc2VjbXAoYXR0ciwiU1RBUlRUTFMiKT09MCkgewot
CSAgLyogVE9ETyAqLworCSAgb2JqLT5zdGFydHRscyA9IDE7CiAgICAgICB9IGVsc2UgaWYgKHZh
bCAmJiBzdHJuY21wKHZhbCwiU0FTTD0iLDUpPT0wKSB7CiAJICBvYmotPnZlcnNpb24gPSBPTERf
VkVSU0lPTjsKIAkgIGNhcCA9IChjaGFyICopIHhtYWxsb2Moc3RybGVuKHZhbCkpOwpAQCAtMzM0
LDYgKzM1OSwzNSBAQCBzdGF0aWMgaW50IGdldGF1dGhsaW5lKGlzaWV2ZV90ICpvYmosIGNoCiAg
IHJldHVybiBTVEFUX0NPTlQ7CiB9CiAKK2ludCBhdXRoX3N0YXJ0dGxzKGlzaWV2ZV90ICpvYmos
IGNoYXIgKnRsc19rZXlmaWxlLAorCQkgIGNoYXIgKiptZWNobGlzdCwgY2hhciAqKmVycnN0cikK
K3sKKyAgdW5zaWduZWQgZXh0X3NzZiA9IDA7CisgIGludCByZXQ7CisgIGNoYXIgKnJlZmVyX3Rv
OworCisgIGlmICghb2JqLT50bHNfa2V5ZmlsZSkgb2JqLT50bHNfa2V5ZmlsZSA9IHRsc19rZXlm
aWxlOworCisgIGlmICghb2JqLT5zdGFydHRscyB8fCAhb2JqLT50bHNfa2V5ZmlsZSkgcmV0dXJu
IDA7CisKKyNpZmRlZiBIQVZFX1NTTAorICByZXQgPSBzdGFydHRscyhvYmotPnZlcnNpb24sIG9i
ai0+cG91dCwgb2JqLT5waW4sICZyZWZlcl90bywgZXJyc3RyKTsKKyAgLyogeHh4IGhhbmRsZSBy
ZWZlcnJhbHMgKi8KKyAgaWYgKHJldCAhPSAwKSByZXR1cm4gLTE7CisKKyAgcmV0ID0gaXNpZXZl
X3N0YXJ0dGxzKG9iaiwgMCwgdGxzX2tleWZpbGUsIHRsc19rZXlmaWxlLCAmZXh0X3NzZik7Cisg
IGlmIChyZXQgIT0gMCkgcmV0dXJuIC0xOworCisgIHByb3RfcHJpbnRmKG9iai0+cG91dCwgIkNB
UEFCSUxJVFlcclxuIik7CisgIHByb3RfZmx1c2gob2JqLT5wb3V0KTsKKyAgCisgIGlmICgqbWVj
aGxpc3QpIGZyZWUoKm1lY2hsaXN0KTsKKyAgKm1lY2hsaXN0ID0gcmVhZF9jYXBhYmlsaXR5KG9i
aik7CisjZW5kaWYgLyogSEFWRV9TU0wgKi8KKworICByZXR1cm4gMDsKK30KKwogCiBpbnQgYXV0
aF9zYXNsKGNoYXIgKm1lY2hsaXN0LCBpc2lldmVfdCAqb2JqLCBjb25zdCBjaGFyICoqbWVjaHVz
aW5nLAogCSAgICAgIGNoYXIgKiplcnJzdHIpCkBAIC00ODYsNiArNTQwLDEwIEBAIGludCBkb19y
ZWZlcnJhbChpc2lldmVfdCAqb2JqLCBjaGFyICpyZWYKICAgICAvKiBBdXRoZW50aWNhdGUgKi8K
ICAgICBtZWNobGlzdCA9IHJlYWRfY2FwYWJpbGl0eShvYmpfbmV3KTsKIAorICAgIC8qIFBlcmZv
cm0gU1RBUlRUTFMgKi8KKyAgICByZXQgPSBhdXRoX3N0YXJ0dGxzKG9iaiwgb2JqLT50bHNfa2V5
ZmlsZSwgJm1lY2hsaXN0LCAmZXJyc3RyKTsKKyAgICBpZiAocmV0KSByZXR1cm4gU1RBVF9OTzsK
KwogICAgIHJldCA9IGF1dGhfc2FzbChtZWNobGlzdCwgb2JqX25ldywgJm10cmllZCwgJmVycnN0
cik7CiAgICAgaWYocmV0KSByZXR1cm4gU1RBVF9OTzsKIApAQCAtNjIwLDMgKzY3OCwzNDIgQEAg
aW50IGlzaWV2ZV9nZXQoaXNpZXZlX3QgKm9iaixjaGFyICpuYW1lLAogCiAgICAgcmV0dXJuIHJl
dDsKIH0KKworLyoqKioqKioqKioqKioqKiBBbGwgdGhlc2UgZnVuY3Rpb25zIGhlbHAgZG8gdGhl
IHN0YXJ0dGxzOyB0aGVzZSBhcmUgY29waWVkIGZyb20gaW1jbGllbnQuYyAqKioqKioqKi8KKyNp
ZmRlZiBIQVZFX1NTTAorCitzdGF0aWMgaW50IHZlcmlmeV9kZXB0aDsKK3N0YXRpYyBpbnQgdmVy
aWZ5X2Vycm9yID0gWDUwOV9WX09LOworCisjZGVmaW5lIENDRVJUX0JVRlNJWiAyNTYKK3N0YXRp
YyBjaGFyIHBlZXJfQ05bQ0NFUlRfQlVGU0laXTsKK3N0YXRpYyBjaGFyIGlzc3Vlcl9DTltDQ0VS
VF9CVUZTSVpdOworCisvKgorICAqIFNldCB1cCB0aGUgY2VydCB0aGluZ3Mgb24gdGhlIHNlcnZl
ciBzaWRlLiBXZSBkbyBuZWVkIGJvdGggdGhlCisgICogcHJpdmF0ZSBrZXkgKGluIGtleV9maWxl
KSBhbmQgdGhlIGNlcnQgKGluIGNlcnRfZmlsZSkuCisgICogQm90aCBmaWxlcyBtYXkgYmUgaWRl
bnRpY2FsLgorICAqCisgICogVGhpcyBmdW5jdGlvbiBpcyB0YWtlbiBmcm9tIE9wZW5TU0wgYXBw
cy9zX2NiLmMKKyAgKi8KKworc3RhdGljIGludCBzZXRfY2VydF9zdHVmZihTU0xfQ1RYICogY3R4
LCBjaGFyICpjZXJ0X2ZpbGUsIGNoYXIgKmtleV9maWxlKQoreworICAgIGlmIChjZXJ0X2ZpbGUg
IT0gTlVMTCkgeworCWlmIChTU0xfQ1RYX3VzZV9jZXJ0aWZpY2F0ZV9maWxlKGN0eCwgY2VydF9m
aWxlLAorCQkJCQkgU1NMX0ZJTEVUWVBFX1BFTSkgPD0gMCkgeworCSAgcHJpbnRmKCJbIHVuYWJs
ZSB0byBnZXQgY2VydGlmaWNhdGUgZnJvbSAnJXMnIF1cbiIsIGNlcnRfZmlsZSk7CisJICByZXR1
cm4gKDApOworCX0KKwlpZiAoa2V5X2ZpbGUgPT0gTlVMTCkKKwkgICAga2V5X2ZpbGUgPSBjZXJ0
X2ZpbGU7CisJaWYgKFNTTF9DVFhfdXNlX1ByaXZhdGVLZXlfZmlsZShjdHgsIGtleV9maWxlLAor
CQkJCQlTU0xfRklMRVRZUEVfUEVNKSA8PSAwKSB7CisJICBwcmludGYoIlsgdW5hYmxlIHRvIGdl
dCBwcml2YXRlIGtleSBmcm9tICclcycgXVxuIiwga2V5X2ZpbGUpOworCSAgcmV0dXJuICgwKTsK
Kwl9CisJLyogTm93IHdlIGtub3cgdGhhdCBhIGtleSBhbmQgY2VydCBoYXZlIGJlZW4gc2V0IGFn
YWluc3QKKyAgICAgICAgICogdGhlIFNTTCBjb250ZXh0ICovCisJaWYgKCFTU0xfQ1RYX2NoZWNr
X3ByaXZhdGVfa2V5KGN0eCkpIHsKKwkgIHByaW50ZigiWyBQcml2YXRlIGtleSBkb2VzIG5vdCBt
YXRjaCB0aGUgY2VydGlmaWNhdGUgcHVibGljIGtleSBdXG4iKTsKKwkgIHJldHVybiAoMCk7CisJ
fQorICAgIH0KKyAgICByZXR1cm4gKDEpOworfQorCisvKiB0YWtlbiBmcm9tIE9wZW5TU0wgYXBw
cy9zX2NiLmMgKi8KKworc3RhdGljIGludCB2ZXJpZnlfY2FsbGJhY2soaW50IG9rLCBYNTA5X1NU
T1JFX0NUWCAqIGN0eCkKK3sKKyAgICBjaGFyICAgIGJ1ZlsyNTZdOworICAgIFg1MDkgICAqZXJy
X2NlcnQ7CisgICAgaW50ICAgICBlcnI7CisgICAgaW50ICAgICBkZXB0aDsKKworICAgIGVycl9j
ZXJ0ID0gWDUwOV9TVE9SRV9DVFhfZ2V0X2N1cnJlbnRfY2VydChjdHgpOworICAgIGVyciA9IFg1
MDlfU1RPUkVfQ1RYX2dldF9lcnJvcihjdHgpOworICAgIGRlcHRoID0gWDUwOV9TVE9SRV9DVFhf
Z2V0X2Vycm9yX2RlcHRoKGN0eCk7CisKKyAgICBYNTA5X05BTUVfb25lbGluZShYNTA5X2dldF9z
dWJqZWN0X25hbWUoZXJyX2NlcnQpLCBidWYsIDI1Nik7CisKKyAgICAvKiAgICBpZiAodmVyYm9z
ZT09MSkKKwkgIHByaW50ZigiUGVlciBjZXJ0IHZlcmlmeSBkZXB0aD0lZCAlc1xuIiwgZGVwdGgs
IGJ1Zik7Ki8KKworICAgIGlmICghb2spIHsKKyAgICAgIHByaW50ZigidmVyaWZ5IGVycm9yOm51
bT0lZDolc1xuIiwgZXJyLAorCSAgICAgWDUwOV92ZXJpZnlfY2VydF9lcnJvcl9zdHJpbmcoZXJy
KSk7CisJaWYgKHZlcmlmeV9kZXB0aCA+PSBkZXB0aCkgeworCSAgICBvayA9IDE7CisJICAgIHZl
cmlmeV9lcnJvciA9IFg1MDlfVl9PSzsKKwl9IGVsc2UgeworCSAgICBvayA9IDA7CisJICAgIHZl
cmlmeV9lcnJvciA9IFg1MDlfVl9FUlJfQ0VSVF9DSEFJTl9UT09fTE9ORzsKKwl9CisgICAgfQor
ICAgIHN3aXRjaCAoY3R4LT5lcnJvcikgeworICAgIGNhc2UgWDUwOV9WX0VSUl9VTkFCTEVfVE9f
R0VUX0lTU1VFUl9DRVJUOgorCVg1MDlfTkFNRV9vbmVsaW5lKFg1MDlfZ2V0X2lzc3Vlcl9uYW1l
KGN0eC0+Y3VycmVudF9jZXJ0KSwgYnVmLCAyNTYpOworCXByaW50ZigiaXNzdWVyPSAlc1xuIiwg
YnVmKTsKKwlicmVhazsKKyAgICBjYXNlIFg1MDlfVl9FUlJfQ0VSVF9OT1RfWUVUX1ZBTElEOgor
ICAgIGNhc2UgWDUwOV9WX0VSUl9FUlJPUl9JTl9DRVJUX05PVF9CRUZPUkVfRklFTEQ6CisgICAg
ICBwcmludGYoImNlcnQgbm90IHlldCB2YWxpZFxuIik7CisgICAgICBicmVhazsKKyAgICBjYXNl
IFg1MDlfVl9FUlJfQ0VSVF9IQVNfRVhQSVJFRDoKKyAgICBjYXNlIFg1MDlfVl9FUlJfRVJST1Jf
SU5fQ0VSVF9OT1RfQUZURVJfRklFTEQ6CisgICAgICBwcmludGYoImNlcnQgaGFzIGV4cGlyZWRc
biIpOworICAgICAgYnJlYWs7CisgICAgfQorCisgICAgLyogICAgaWYgKHZlcmJvc2U9PTEpCisJ
ICBwcmludGYoInZlcmlmeSByZXR1cm46JWRcbiIsIG9rKTsqLworCisgICAgcmV0dXJuIChvayk7
Cit9CisKKworLyogdGFrZW4gZnJvbSBPcGVuU1NMIGFwcHMvc19jYi5jICovCitzdGF0aWMgUlNB
ICp0bXBfcnNhX2NiKFNTTCAqcyBfX2F0dHJpYnV0ZV9fKCh1bnVzZWQpKSwKKwkJICAgICAgIGlu
dCBleHBvcnQgX19hdHRyaWJ1dGVfXygodW51c2VkKSksCisJCSAgICAgICBpbnQga2V5bGVuZ3Ro
KQoreworICAgIHN0YXRpYyBSU0EgKnJzYV90bXAgPSBOVUxMOworCisgICAgaWYgKHJzYV90bXAg
PT0gTlVMTCkgeworCXJzYV90bXAgPSBSU0FfZ2VuZXJhdGVfa2V5KGtleWxlbmd0aCwgUlNBX0Y0
LCBOVUxMLCBOVUxMKTsKKyAgICB9CisgICAgcmV0dXJuIChyc2FfdG1wKTsKK30KKworLyoKKyAq
IFNlZWQgdGhlIHJhbmRvbSBudW1iZXIgZ2VuZXJhdG9yLgorICovCitzdGF0aWMgaW50IHRsc19y
YW5kX2luaXQodm9pZCkKK3sKKyNpZmRlZiBFR0RfU09DS0VUCisgICAgcmV0dXJuIChSQU5EX2Vn
ZChFR0RfU09DS0VUKSk7CisjZWxzZQorICAgIC8qIG90aGVyd2lzZSBsZXQgT3BlblNTTCBkbyBp
dCBpbnRlcm5hbGx5ICovCisgICAgcmV0dXJuIDA7CisjZW5kaWYKK30KKworc3RhdGljIGNoYXIg
KnZhcl90bHNfQ0FmaWxlPSIiOworc3RhdGljIGNoYXIgKnZhcl90bHNfQ0FwYXRoPSIiOworIC8q
CisgICogVGhpcyBpcyB0aGUgc2V0dXAgcm91dGluZSBmb3IgdGhlIFNTTCBjbGllbnQuIAorICAq
CisgICogVGhlIHNrZWxldG9uIG9mIHRoaXMgZnVuY3Rpb24gaXMgdGFrZW4gZnJvbSBPcGVuU1NM
IGFwcHMvc19jbGllbnQuYy4KKyAgKi8KKworc3RhdGljIGludCB0bHNfaW5pdF9jbGllbnRlbmdp
bmUoaXNpZXZlX3QgKm9iaiwKKwkJCQkgaW50IHZlcmlmeWRlcHRoLCBjaGFyICp2YXJfdGxzX2Nl
cnRfZmlsZSwgY2hhciAqdmFyX3Rsc19rZXlfZmlsZSkKK3sKKyAgICBpbnQgICAgIG9mZiA9IDA7
CisgICAgaW50ICAgICB2ZXJpZnlfZmxhZ3MgPSBTU0xfVkVSSUZZX05PTkU7CisgICAgY2hhciAg
ICpDQXBhdGg7CisgICAgY2hhciAgICpDQWZpbGU7CisgICAgY2hhciAgICpjX2NlcnRfZmlsZTsK
KyAgICBjaGFyICAgKmNfa2V5X2ZpbGU7CisKKyAgICBhc3NlcnQob2JqKTsKKworICAgIFNTTF9s
b2FkX2Vycm9yX3N0cmluZ3MoKTsKKyAgICBTU0xlYXlfYWRkX3NzbF9hbGdvcml0aG1zKCk7Cisg
ICAgaWYgKHRsc19yYW5kX2luaXQoKSA9PSAtMSkgeworCXByaW50ZigiWyBUTFMgZW5naW5lOiBj
YW5ub3Qgc2VlZCBQUk5HIF1cbiIpOworCXJldHVybiAtMTsKKyAgICB9CisKKyAgICBvYmotPnRs
c19jdHggPSBTU0xfQ1RYX25ldyhUTFN2MV9jbGllbnRfbWV0aG9kKCkpOworICAgIGlmIChvYmot
PnRsc19jdHggPT0gTlVMTCkgeworCXJldHVybiAtMTsKKyAgICB9OworCisgICAgb2ZmIHw9IFNT
TF9PUF9BTEw7CQkvKiBXb3JrIGFyb3VuZCBhbGwga25vd24gYnVncyAqLworICAgIFNTTF9DVFhf
c2V0X29wdGlvbnMob2JqLT50bHNfY3R4LCBvZmYpOworICAgIAorICAgIC8qIGRlYnVnZ2luZyAg
IFNTTF9DVFhfc2V0X2luZm9fY2FsbGJhY2sob2JqLT50bHNfY3R4LCBhcHBzX3NzbF9pbmZvX2Nh
bGxiYWNrKTsgKi8KKworICAgIGlmIChzdHJsZW4odmFyX3Rsc19DQWZpbGUpID09IDApCisJQ0Fm
aWxlID0gTlVMTDsKKyAgICBlbHNlCisJQ0FmaWxlID0gdmFyX3Rsc19DQWZpbGU7CisgICAgaWYg
KHN0cmxlbih2YXJfdGxzX0NBcGF0aCkgPT0gMCkKKwlDQXBhdGggPSBOVUxMOworICAgIGVsc2UK
KwlDQXBhdGggPSB2YXJfdGxzX0NBcGF0aDsKKworICAgIGlmIChDQWZpbGUgfHwgQ0FwYXRoKQor
CWlmICgoIVNTTF9DVFhfbG9hZF92ZXJpZnlfbG9jYXRpb25zKG9iai0+dGxzX2N0eCwgQ0FmaWxl
LCBDQXBhdGgpKSB8fAorCSAgICAoIVNTTF9DVFhfc2V0X2RlZmF1bHRfdmVyaWZ5X3BhdGhzKG9i
ai0+dGxzX2N0eCkpKSB7CisJICAgIHByaW50ZigiWyBUTFMgZW5naW5lOiBjYW5ub3QgbG9hZCBD
QSBkYXRhIF1cbiIpOworCSAgICByZXR1cm4gLTE7CisJfQorICAgIGlmIChzdHJsZW4odmFyX3Rs
c19jZXJ0X2ZpbGUpID09IDApCisJY19jZXJ0X2ZpbGUgPSBOVUxMOworICAgIGVsc2UKKwljX2Nl
cnRfZmlsZSA9IHZhcl90bHNfY2VydF9maWxlOworICAgIGlmIChzdHJsZW4odmFyX3Rsc19rZXlf
ZmlsZSkgPT0gMCkKKwljX2tleV9maWxlID0gTlVMTDsKKyAgICBlbHNlCisJY19rZXlfZmlsZSA9
IHZhcl90bHNfa2V5X2ZpbGU7CisKKyAgICBpZiAoY19jZXJ0X2ZpbGUgfHwgY19rZXlfZmlsZSkK
KwlpZiAoIXNldF9jZXJ0X3N0dWZmKG9iai0+dGxzX2N0eCwgY19jZXJ0X2ZpbGUsIGNfa2V5X2Zp
bGUpKSB7CisJICAgIHByaW50ZigiWyBUTFMgZW5naW5lOiBjYW5ub3QgbG9hZCBjZXJ0L2tleSBk
YXRhIF1cbiIpOworCSAgICByZXR1cm4gLTE7CisJfQorICAgIFNTTF9DVFhfc2V0X3RtcF9yc2Ff
Y2FsbGJhY2sob2JqLT50bHNfY3R4LCB0bXBfcnNhX2NiKTsKKworICAgIHZlcmlmeV9kZXB0aCA9
IHZlcmlmeWRlcHRoOworICAgIFNTTF9DVFhfc2V0X3ZlcmlmeShvYmotPnRsc19jdHgsIHZlcmlm
eV9mbGFncywgdmVyaWZ5X2NhbGxiYWNrKTsKKworICAgIHJldHVybiAwOworfQorCisKK3N0YXRp
YyBpbnQgdGxzX3N0YXJ0X2NsaWVudHRscyhpc2lldmVfdCAqb2JqLAorCQkJICAgICAgIHVuc2ln
bmVkICpsYXllciwgY2hhciAqKmF1dGhpZCwgaW50IGZkKQoreworICAgIGludCAgICAgc3RzOwor
ICAgIFNTTF9TRVNTSU9OICpzZXNzaW9uOworICAgIFNTTF9DSVBIRVIgKmNpcGhlcjsKKyAgICBY
NTA5ICAgKnBlZXI7CisgICAgY29uc3QgY2hhciAqdGxzX3Byb3RvY29sID0gTlVMTDsKKyAgICBj
b25zdCBjaGFyICp0bHNfY2lwaGVyX25hbWUgPSBOVUxMOworICAgIGludCB0bHNfY2lwaGVyX3Vz
ZWJpdHMgPSAwOworICAgIGludCB0bHNfY2lwaGVyX2FsZ2JpdHMgPSAwOworICAgIGNoYXIgKnRs
c19wZWVyX0NOID0gIiI7CisgICAgY2hhciAqdGxzX2lzc3Vlcl9DTiA9IE5VTEw7CisKKyAgICBp
ZiAob2JqLT50bHNfY29ubiA9PSBOVUxMKSB7CisJb2JqLT50bHNfY29ubiA9IChTU0wgKikgU1NM
X25ldyhvYmotPnRsc19jdHgpOworICAgIH0KKyAgICBpZiAob2JqLT50bHNfY29ubiA9PSBOVUxM
KSB7CisJcHJpbnRmKCJDb3VsZCBub3QgYWxsb2NhdGUgJ2Nvbicgd2l0aCBTU0xfbmV3KClcbiIp
OworCXJldHVybiAtMTsKKyAgICB9CisgICAgU1NMX2NsZWFyKG9iai0+dGxzX2Nvbm4pOworCisg
ICAgaWYgKCFTU0xfc2V0X2ZkKG9iai0+dGxzX2Nvbm4sIGZkKSkgeworICAgICAgcHJpbnRmKCJT
U0xfc2V0X2ZkIGZhaWxlZFxuIik7CisgICAgICByZXR1cm4gLTE7CisgICAgfQorCisgICAgLypT
U0xfc2V0X3JlYWRfYWhlYWQob2JqLT50bHNfY29ubiwgMSk7Ki8KKworICAgIC8qCisgICAgICog
VGhpcyBpcyB0aGUgYWN0dWFsIGhhbmRzaGFrZSByb3V0aW5lLiBJdCB3aWxsIGRvIGFsbCB0aGUg
bmVnb3RpYXRpb25zCisgICAgICogYW5kIHdpbGwgY2hlY2sgdGhlIGNsaWVudCBjZXJ0IGV0Yy4K
KyAgICAgKi8KKyAgICBTU0xfc2V0X2Nvbm5lY3Rfc3RhdGUob2JqLT50bHNfY29ubik7CisKKwor
ICAgIC8qCisgICAgICogV2UgZG8gaGF2ZSBhbiBTU0xfc2V0X2ZkKCkgYW5kIG5vdyBzdWRkZW5s
eSBhIEJJT18gcm91dGluZSBpcyBjYWxsZWQ/CisgICAgICogV2VsbCB0aGVyZSBpcyBhIEJJTyBi
ZWxvdyB0aGUgU1NMIHJvdXRpbmVzIHRoYXQgaXMgYXV0b21hdGljYWxseQorICAgICAqIGNyZWF0
ZWQgZm9yIHVzLCBzbyB3ZSBjYW4gdXNlIGl0IGZvciBkZWJ1Z2dpbmcgcHVycG9zZXMuCisgICAg
ICovCisgICAgLyogICAgaWYgKHZlcmJvc2U9PTEpICovCisgICAgLyogICAgQklPX3NldF9jYWxs
YmFjayhTU0xfZ2V0X3JiaW8ob2JqLT50bHNfY29ubiksIGJpb19kdW1wX2NiKTsqLworCisgICAg
LyogRHVtcCB0aGUgbmVnb3RpYXRpb24gZm9yIGxvZ2xldmVscyAzIGFuZCA0ICovCisKKyAgICBp
ZiAoKHN0cyA9IFNTTF9jb25uZWN0KG9iai0+dGxzX2Nvbm4pKSA8PSAwKSB7CisJcHJpbnRmKCJb
IFNTTF9jb25uZWN0IGVycm9yICVkIF1cbiIsIHN0cyk7IC8qIHh4eCBnZXQgc3RyaW5nIGVycm9y
PyAqLworCXNlc3Npb24gPSBTU0xfZ2V0X3Nlc3Npb24ob2JqLT50bHNfY29ubik7CisJaWYgKHNl
c3Npb24pIHsKKwkgICAgU1NMX0NUWF9yZW1vdmVfc2Vzc2lvbihvYmotPnRsc19jdHgsIHNlc3Np
b24pOworCSAgICBwcmludGYoIlsgU1NMIHNlc3Npb24gcmVtb3ZlZCBdXG4iKTsKKwl9CisJaWYg
KG9iai0+dGxzX2Nvbm4hPU5VTEwpCisJICAgIFNTTF9mcmVlKG9iai0+dGxzX2Nvbm4pOworCW9i
ai0+dGxzX2Nvbm4gPSBOVUxMOworCXJldHVybiAtMTsKKyAgICB9CisKKyAgICAvKgorICAgICAq
IExldHMgc2VlLCB3aGV0aGVyIGEgcGVlciBjZXJ0aWZpY2F0ZSBpcyBhdmFpbGFiZSBhbmQgd2hh
dCBpcworICAgICAqIHRoZSBhY3R1YWwgaW5mb3JtYXRpb24uIFdlIHdhbnQgdG8gc2F2ZSBpdCBm
b3IgbGF0ZXIgdXNlLgorICAgICAqLworICAgIHBlZXIgPSBTU0xfZ2V0X3BlZXJfY2VydGlmaWNh
dGUob2JqLT50bHNfY29ubik7CisgICAgaWYgKHBlZXIgIT0gTlVMTCkgeworCVg1MDlfTkFNRV9n
ZXRfdGV4dF9ieV9OSUQoWDUwOV9nZXRfc3ViamVjdF9uYW1lKHBlZXIpLAorCQkJICBOSURfY29t
bW9uTmFtZSwgcGVlcl9DTiwgQ0NFUlRfQlVGU0laKTsKKwl0bHNfcGVlcl9DTiA9IHBlZXJfQ047
CisJWDUwOV9OQU1FX2dldF90ZXh0X2J5X05JRChYNTA5X2dldF9pc3N1ZXJfbmFtZShwZWVyKSwK
KwkJCSAgTklEX2NvbW1vbk5hbWUsIGlzc3Vlcl9DTiwgQ0NFUlRfQlVGU0laKTsKKwkvKglpZiAo
dmVyYm9zZT09MSkKKwkJcHJpbnRmKCJzdWJqZWN0X0NOPSVzLCBpc3N1ZXJfQ049JXNcbiIsIHBl
ZXJfQ04sIGlzc3Vlcl9DTik7Ki8KKwl0bHNfaXNzdWVyX0NOID0gaXNzdWVyX0NOOworCisgICAg
fQorICAgIHRsc19wcm90b2NvbCA9IFNTTF9nZXRfdmVyc2lvbihvYmotPnRsc19jb25uKTsKKyAg
ICBjaXBoZXIgPSBTU0xfZ2V0X2N1cnJlbnRfY2lwaGVyKG9iai0+dGxzX2Nvbm4pOworICAgIHRs
c19jaXBoZXJfbmFtZSA9IFNTTF9DSVBIRVJfZ2V0X25hbWUoY2lwaGVyKTsKKyAgICB0bHNfY2lw
aGVyX3VzZWJpdHMgPSBTU0xfQ0lQSEVSX2dldF9iaXRzKGNpcGhlciwKKwkJCQkJCSAmdGxzX2Np
cGhlcl9hbGdiaXRzKTsKKworICAgIGlmIChsYXllciE9TlVMTCkKKyAgICAgICpsYXllciA9IHRs
c19jaXBoZXJfdXNlYml0czsKKworICAgIGlmIChhdXRoaWQhPU5VTEwpCisgICAgICAqYXV0aGlk
ID0gdGxzX3BlZXJfQ047CisKKyAgICAvKiAgICBwcmludGYoIlRMUyBjb25uZWN0aW9uIGVzdGFi
bGlzaGVkOiAlcyB3aXRoIGNpcGhlciAlcyAoJWQvJWQgYml0cylcbiIsCisJICAgdGxzX3Byb3Rv
Y29sLCB0bHNfY2lwaGVyX25hbWUsCisJICAgdGxzX2NpcGhlcl91c2ViaXRzLCB0bHNfY2lwaGVy
X2FsZ2JpdHMpOyovCisgICAgcmV0dXJuIDA7Cit9CisKK3N0YXRpYyBpbnQgaXNpZXZlX3N0YXJ0
dGxzKGlzaWV2ZV90ICpvYmosCisJCQkgICAgIGludCB2ZXJpZnlkZXB0aCBfX2F0dHJpYnV0ZV9f
KCh1bnVzZWQpKSwKKwkJCSAgICAgY2hhciAqdmFyX3Rsc19jZXJ0X2ZpbGUsIAorCQkJICAgICBj
aGFyICp2YXJfdGxzX2tleV9maWxlLAorCQkJICAgICBpbnQgKmxheWVyIF9fYXR0cmlidXRlX18o
KHVudXNlZCkpKQoreworICBpbnQgcmVzdWx0OworICB1bnNpZ25lZCBzc2Y7CisgIGNoYXIgKmF1
dGhfaWQ7CisgIAorICByZXN1bHQ9dGxzX2luaXRfY2xpZW50ZW5naW5lKG9iaiwgMTAsIHZhcl90
bHNfY2VydF9maWxlLCB2YXJfdGxzX2tleV9maWxlKTsKKyAgaWYgKHJlc3VsdCE9MCkKKyAgewor
ICAgIHByaW50ZigiWyBUTFMgZW5naW5lIGZhaWxlZCBdXG4iKTsKKyAgICByZXR1cm4gMTsKKyAg
fSBlbHNlIHsKKyAgICByZXN1bHQ9dGxzX3N0YXJ0X2NsaWVudHRscyhvYmosICZzc2YsICZhdXRo
X2lkLCBvYmotPnNvY2spOworICAgIAorICAgIGlmIChyZXN1bHQhPTApIHsKKyAgICAgIHByaW50
ZigiWyBUTFMgbmVnb3RpYXRpb24gZGlkIG5vdCBzdWNjZWVkIF1cbiIpOworICAgICAgcmV0dXJu
IDE7CisgICAgfQorICB9CisKKyAgLyogdHVybiBub24tYmxvY2tpbmcgaS9vIGJhY2sgb24gKi8K
KworCisgIC8qIFRMUyBuZWdvdGlhdGlvbiBzdWNjZWVkZWQgKi8KKworICBhdXRoX2lkPSIiOyAv
KiB4eHggdGhpcyByZWFsbHkgc2hvdWxkIGJlIHBlZXJfQ04gb3IKKwkJIGlzc3Vlcl9DTiBidXQg
SSBjYW4ndCBmaWd1cmUgb3V0IHdoaWNoIGlzCisJCSB3aGljaCBhdCB0aGUgbW9tZW50ICovCisK
KyAgLyogdGVsbCBTQVNMIGFib3V0IHRoZSBuZWdvdGlhdGVkIGxheWVyICovCisgIHJlc3VsdD1z
YXNsX3NldHByb3Aob2JqLT5jb25uLAorCQkgICAgICBTQVNMX1NTRl9FWFRFUk5BTCwKKwkJICAg
ICAgJnNzZik7CisgIGlmIChyZXN1bHQhPVNBU0xfT0spIHJldHVybiAxOworICByZXN1bHQ9c2Fz
bF9zZXRwcm9wKG9iai0+Y29ubiwKKwkJICAgICAgU0FTTF9BVVRIX0VYVEVSTkFMLAorCQkgICAg
ICBhdXRoX2lkKTsKKyAgaWYgKHJlc3VsdCE9U0FTTF9PSykgcmV0dXJuIDE7CisKKyAgcHJvdF9z
ZXR0bHMgKG9iai0+cGluLCAgb2JqLT50bHNfY29ubik7CisgIHByb3Rfc2V0dGxzIChvYmotPnBv
dXQsIG9iai0+dGxzX2Nvbm4pOworCisgIHJldHVybiAwOworfQorI2VuZGlmIC8qIEhBVkVfU1NM
ICovCkluZGV4OiBsaWIvaXNpZXZlLmgKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvY3ly
dXMvcGVybC9zaWV2ZS9saWIvaXNpZXZlLmgsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuOQpkaWZm
IC11IC1wIC1yMS45IGlzaWV2ZS5oCi0tLSBsaWIvaXNpZXZlLmgJMjUgTWF5IDIwMDIgMTk6NTc6
NTAgLTAwMDAJMS45CisrKyBsaWIvaXNpZXZlLmgJMjIgTWF5IDIwMDMgMTU6NDM6MjcgLTAwMDAK
QEAgLTY3LDYgKzY3LDcgQEAgdHlwZWRlZiBlbnVtIHsKICAgICBTVEFUX09LID0gMgogfSBpbXRf
c3RhdDsKIAoraW50IGF1dGhfc3RhcnR0bHMoaXNpZXZlX3QgKm9iaiwgY2hhciAqdGxzX2tleWZp
bGUsIGNoYXIgKiptZWNobGlzdCwgY2hhciAqKmVycnN0cik7CiBpbnQgYXV0aF9zYXNsKGNoYXIg
Km1lY2hsaXN0LCBpc2lldmVfdCAqb2JqLCBjb25zdCBjaGFyICoqbWVjaHVzaW5nLCBjaGFyICoq
ZXJyc3RyKTsKIAogaW50IGlzaWV2ZV9sb2dvdXQoaXNpZXZlX3QgKipvYmopOwpJbmRleDogbGli
L3JlcXVlc3QuYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3ZzL3NyYy9jeXJ1cy9wZXJsL3NpZXZl
L2xpYi9yZXF1ZXN0LmMsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTUKZGlmZiAtdSAtcCAtcjEu
MTUgcmVxdWVzdC5jCi0tLSBsaWIvcmVxdWVzdC5jCTI1IE1heSAyMDAyIDE5OjU3OjUwIC0wMDAw
CTEuMTUKKysrIGxpYi9yZXF1ZXN0LmMJMjIgTWF5IDIwMDMgMTU6NDM6MjcgLTAwMDAKQEAgLTE2
OCwyMiArMTY4LDI0IEBAIGludCBoYW5kbGVfcmVzcG9uc2UoaW50IHJlcyxpbnQgdmVyc2lvbiwK
ICAgICAgIC8qIFNBU0wgcmVzcG9uc2UgKi8KICAgICAgIHJlcyA9IHl5bGV4KCZzdGF0ZSwgcGlu
KTsKICAgICAgIGlmKHJlcyA9PSAnICcpIHsKLQkgIGlmICh5eWxleCgmc3RhdGUsIHBpbikgIT0g
JygnKQotCSAgICAgIHBhcnNlZXJyb3IoImV4cGVjdGVkIExQQVJFTiIpOwotCSAgCi0JICBpZiAo
eXlsZXgoJnN0YXRlLCBwaW4pPT1UT0tFTl9TQVNMKSB7Ci0JICAgICAgaWYgKHl5bGV4KCZzdGF0
ZSwgcGluKSE9JyAnKQotCQkgIHBhcnNlZXJyb3IoImV4cGVjdGVkIHNwYWNlIik7Ci0JICAgICAg
aWYgKHl5bGV4KCZzdGF0ZSwgcGluKSE9U1RSSU5HKQotCQkgIHBhcnNlZXJyb3IoImV4cGVjdGVk
IHN0cmluZyIpOworCSAgcmVzID0geXlsZXgoJnN0YXRlLCBwaW4pOworCSAgaWYgKHJlcyA9PSAn
KCcpIHsKKwkgICAgICBpZiAoeXlsZXgoJnN0YXRlLCBwaW4pPT1UT0tFTl9TQVNMKSB7CisJICAg
ICAgICAgIGlmICh5eWxleCgmc3RhdGUsIHBpbikhPScgJykKKwkJICAgICAgcGFyc2VlcnJvcigi
ZXhwZWN0ZWQgc3BhY2UiKTsKKwkgICAgICAgICAgaWYgKHl5bGV4KCZzdGF0ZSwgcGluKSE9U1RS
SU5HKQorCQkgICAgICBwYXJzZWVycm9yKCJleHBlY3RlZCBzdHJpbmciKTsKIAotCSAgICAgICpy
ZWZlcl90byA9IHhzdHJkdXAoc3RyaW5nX0RBVEFQVFIoc3RhdGUuc3RyKSk7CisJICAgICAgICAg
ICpyZWZlcl90byA9IHhzdHJkdXAoc3RyaW5nX0RBVEFQVFIoc3RhdGUuc3RyKSk7CiAKLQkgICAg
ICBpZiAoeXlsZXgoJnN0YXRlLCBwaW4pIT0nKScpCi0JCSAgcGFyc2VlcnJvcigiZXhwZWN0ZWQg
UlBBUkVOIik7Ci0JICB9IGVsc2UgewotCSAgICAgIHBhcnNlZXJyb3IoInVuZXhwZWN0ZWQgcmVz
cG9uc2UgY29kZSB3aXRoIE9LIHJlc3BvbnNlIik7CisJICAgICAgICAgIGlmICh5eWxleCgmc3Rh
dGUsIHBpbikgIT0gJyknKQorCQkgICAgICBwYXJzZWVycm9yKCJleHBlY3RlZCBSUEFSRU4iKTsK
KwkJICByZXMgPSB5eWxleCgmc3RhdGUsIHBpbik7CisJCSAgaWYgKHJlcyA9PSAnICcpIHJlcyA9
IHl5bGV4KCZzdGF0ZSwgcGluKTsKKwkgICAgICB9CiAJICB9CisJICBpZiAocmVzICE9IFNUUklO
RykKKwkgICAgICBwYXJzZWVycm9yKCJ1bmV4cGVjdGVkIHJlc3BvbnNlIGNvZGUgd2l0aCBPSyBy
ZXNwb25zZSIpOwogICAgICAgfSBlbHNlIGlmICh2ZXJzaW9uICE9IE9MRF9WRVJTSU9OICYmIHJl
cyA9PSBFT0wpIHsKIAkgIHJldHVybiByOwogICAgICAgfQpAQCAtNjM3LDQgKzYzOSwzMiBAQCBp
bnQgZ2V0c2NyaXB0dmFsdWUoaW50IHZlcnNpb24sIHN0cnVjdCBwCiAKICAgcmV0dXJuIDA7CiAK
K30KKworCitpbnQgc3RhcnR0bHMoaW50IHZlcnNpb24sIHN0cnVjdCBwcm90c3RyZWFtICpwb3V0
LCBzdHJ1Y3QgcHJvdHN0cmVhbSAqcGluLAorCSAgICAgY2hhciAqKnJlZmVyX3RvLCBjaGFyICoq
ZXJyc3RycCkKK3sKKyAgbGV4c3RhdGVfdCBzdGF0ZTsKKyAgaW50IHJlczsKKyAgaW50IHJldDsK
KyAgbXlzdHJpbmdfdCAqZXJyc3RyOworCisgIHByb3RfcHJpbnRmKHBvdXQsICJTVEFSVFRMU1xy
XG4iKTsKKyAgcHJvdF9mbHVzaChwb3V0KTsKKwkgICAgCisgIHJlcyA9IHl5bGV4KCZzdGF0ZSwg
cGluKTsKKworICByZXQgPSBoYW5kbGVfcmVzcG9uc2UocmVzLCB2ZXJzaW9uLCBwaW4sIHJlZmVy
X3RvLCAmZXJyc3RyKTsKKworICAvKiBpZiBjb21tYW5kIGZhaWxlZCAqLworICBpZihyZXQgPT0g
LTIgJiYgKnJlZmVyX3RvKSB7CisgICAgICByZXR1cm4gLTI7CisgIH0gZWxzZSBpZiAocmV0ICE9
IDApIHsKKyAgICAgICplcnJzdHJwID0gbWFsbG9jKDEyOCk7CisgICAgICBzbnByaW50ZigqZXJy
c3RycCwgMTI3LCAKKwkgICAgICAgIlN0YXJ0dGxzOiAlcyIsc3RyaW5nX0RBVEFQVFIoZXJyc3Ry
KSk7CisgICAgICByZXR1cm4gLTE7CisgIH0KKyAgcmV0dXJuIDA7CiB9CkluZGV4OiBsaWIvcmVx
dWVzdC5oCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL2N5cnVzL3Blcmwvc2lldmUvbGli
L3JlcXVlc3QuaCx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS42CmRpZmYgLXUgLXAgLXIxLjYgcmVx
dWVzdC5oCi0tLSBsaWIvcmVxdWVzdC5oCTI1IE1heSAyMDAyIDE5OjU3OjUwIC0wMDAwCTEuNgor
KysgbGliL3JlcXVlc3QuaAkyMiBNYXkgMjAwMyAxNTo0MzoyNyAtMDAwMApAQCAtOTEsNSArOTEs
NyBAQCBpbnQgZ2V0c2NyaXB0dmFsdWUoaW50IHZlcnNpb24sc3RydWN0IHByCiAKIHZvaWQgcGFy
c2VlcnJvcihjaGFyICpzdHIpOwogCitpbnQgc3RhcnR0bHMoaW50IHZlcnNpb24sIHN0cnVjdCBw
cm90c3RyZWFtICpwb3V0LCBzdHJ1Y3QgcHJvdHN0cmVhbSAqcGluLAorCSAgICBjaGFyICoqcmVm
ZXJfdG8sIGNoYXIgKiplcnJzdHIpOwogCiAjZW5kaWYKSW5kZXg6IG1hbmFnZXNpZXZlL01ha2Vm
aWxlLlBMCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL2N5cnVzL3Blcmwvc2lldmUvbWFu
YWdlc2lldmUvTWFrZWZpbGUuUEwsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTAKZGlmZiAtdSAt
cCAtcjEuMTAgTWFrZWZpbGUuUEwKLS0tIG1hbmFnZXNpZXZlL01ha2VmaWxlLlBMCTIyIEp1bCAy
MDAyIDE2OjE2OjEyIC0wMDAwCTEuMTAKKysrIG1hbmFnZXNpZXZlL01ha2VmaWxlLlBMCTIyIE1h
eSAyMDAzIDE1OjQzOjI3IC0wMDAwCkBAIC00Niw2ICs0Niw3IEBAIG15ICRTQVNMX0lOQyA9ICRF
TlZ7U0FTTF9JTkN9OwogbXkgJFNBU0xfTElCID0gJEVOVntTQVNMX0xJQn0gfHwgIi1sc2FzbDIi
OwogbXkgJE9QRU5TU0xfSU5DID0gJEVOVntPUEVOU1NMX0lOQ307CiBteSAkT1BFTlNTTF9MSUIg
PSAkRU5We09QRU5TU0xfTElCfTsKK215ICRIQVZFX1NTTCA9ICRPUEVOU1NMX0xJQiA/ICItREhB
VkVfU1NMIiA6ICcnOwogCiAkbGlicyA9ICItbGN5cnVzIjsKIApAQCAtNTcsNiArNTgsNiBAQCBX
cml0ZU1ha2VmaWxlKAogICAgICdWRVJTSU9OX0ZST00nID0+ICdtYW5hZ2VzaWV2ZS5wbScsICMg
ZmluZHMgJFZFUlNJT04KICAgICAnTVlFWFRMSUInICA9PiAnLi4vbGliL2lzaWV2ZS5vIC4uL2xp
Yi9sZXgubyAuLi9saWIvbXlzdHJpbmcubyAuLi9saWIvcmVxdWVzdC5vIC4uLy4uLy4uL2xpYi9s
aWJjeXJ1cy5hJywKICAgICAnTElCUycJPT4gWyIkU0FTTF9MSUIgJE9QRU5TU0xfTElCIC1sc3Ns
IC1sY3J5cHRvIl0sIAotICAgICdERUZJTkUnCT0+ICctRFBFUkxfUE9MTFVURScsICAgICAjIGUu
Zy4sICctREhBVkVfU09NRVRISU5HJyAKKyAgICAnREVGSU5FJwk9PiAiLURQRVJMX1BPTExVVEUg
JEhBVkVfU1NMIiwgICAgICMgZS5nLiwgJy1ESEFWRV9TT01FVEhJTkcnIAogICAgICdJTkMnCT0+
ICItSS4uL2xpYi8gLUkuLi8uLi8uLi9saWIvICRTQVNMX0lOQyAkT1BFTlNTTF9JTkMiLAogKTsK
SW5kZXg6IG1hbmFnZXNpZXZlL21hbmFnZXNpZXZlLnhzCj09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9j
dnMvc3JjL2N5cnVzL3Blcmwvc2lldmUvbWFuYWdlc2lldmUvbWFuYWdlc2lldmUueHMsdgpyZXRy
aWV2aW5nIHJldmlzaW9uIDEuMTkKZGlmZiAtdSAtcCAtcjEuMTkgbWFuYWdlc2lldmUueHMKLS0t
IG1hbmFnZXNpZXZlL21hbmFnZXNpZXZlLnhzCTIgRGVjIDIwMDIgMjA6NDg6MzggLTAwMDAJMS4x
OQorKysgbWFuYWdlc2lldmUvbWFuYWdlc2lldmUueHMJMjIgTWF5IDIwMDMgMTU6NDM6MjcgLTAw
MDAKQEAgLTIxMSwxMiArMjExLDEzIEBAIFBST1RPVFlQRVM6IEVOQUJMRQogCiAKIFNpZXZlb2Jq
Ci1zaWV2ZV9nZXRfaGFuZGxlKHNlcnZlcm5hbWUsIHVzZXJuYW1lX2NiLCBhdXRobmFtZV9jYiwg
cGFzc3dvcmRfY2IsIHJlYWxtX2NiKQorc2lldmVfZ2V0X2hhbmRsZShzZXJ2ZXJuYW1lLCB1c2Vy
bmFtZV9jYiwgYXV0aG5hbWVfY2IsIHBhc3N3b3JkX2NiLCByZWFsbV9jYiwgdGxzX2tleWZpbGUp
CiAgIGNoYXIgKnNlcnZlcm5hbWUKICAgU1YgKnVzZXJuYW1lX2NiCiAgIFNWICphdXRobmFtZV9j
YgogICBTViAqcGFzc3dvcmRfY2IKICAgU1YgKnJlYWxtX2NiCisgIGNoYXIgKnRsc19rZXlmaWxl
CiAKICAgUFJFSU5JVDoKICAgU2lldmVvYmogcmV0ID0gTlVMTDsKQEAgLTI0OCw2ICsyNDksOCBA
QCBzaWV2ZV9nZXRfaGFuZGxlKHNlcnZlcm5hbWUsIHVzZXJuYW1lX2NiCiAgIGNhbGxiYWNrc1sz
XS5jb250ZXh0ID0gcGFzc3dvcmRfY2I7CiAgIGNhbGxiYWNrc1s0XS5pZCA9IFNBU0xfQ0JfTElT
VF9FTkQ7CiAKKyAgaWYgKCFTdk9LKFNUKDUpKSkgdGxzX2tleWZpbGUgPSBOVUxMOworCiAgIC8q
IG1hcCBwb3J0IC0+IG51bSAqLwogICBzZXJ2ID0gZ2V0c2VydmJ5bmFtZSgic2lldmUiLCAidGNw
Iik7CiAgIGlmIChzZXJ2ID09IE5VTEwpIHsKQEAgLTI4MSw2ICsyODQsMTEgQEAgc2lldmVfZ2V0
X2hhbmRsZShzZXJ2ZXJuYW1lLCB1c2VybmFtZV9jYgogICBtbGlzdCA9IChjaGFyKikgeHN0cmR1
cChtZWNobGlzdCk7CiAgIGlmKCFtbGlzdCkgewogCWdsb2JhbGVyciA9ICJjb3VsZCBub3QgYWxs
b2NhdGUgbWVtb3J5IGZvciBtZWNoIGxpc3QiOworCVhTUkVUVVJOX1VOREVGOworICB9CisKKyAg
aWYgKGF1dGhfc3RhcnR0bHMob2JqLCB0bHNfa2V5ZmlsZSwgJm1saXN0LCAmcmV0LT5lcnJzdHIp
ICE9IDApIHsKKwlnbG9iYWxlcnIgPSAic3RhcnR0bHMgZmFpbGVkIjsKIAlYU1JFVFVSTl9VTkRF
RjsKICAgfQogCkluZGV4OiBzY3JpcHRzL2luc3RhbGxzaWV2ZS5wbAo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBm
aWxlOiAvY3ZzL3NyYy9jeXJ1cy9wZXJsL3NpZXZlL3NjcmlwdHMvaW5zdGFsbHNpZXZlLnBsLHYK
cmV0cmlldmluZyByZXZpc2lvbiAxLjcKZGlmZiAtdSAtcCAtcjEuNyBpbnN0YWxsc2lldmUucGwK
LS0tIHNjcmlwdHMvaW5zdGFsbHNpZXZlLnBsCTI1IE1heSAyMDAyIDE5OjU3OjUyIC0wMDAwCTEu
NworKysgc2NyaXB0cy9pbnN0YWxsc2lldmUucGwJMjIgTWF5IDIwMDMgMTU6NDM6MjcgLTAwMDAK
QEAgLTQ2LDYgKzQ2LDcgQEAgdXNlIEN5cnVzOjpTSUVWRTo6bWFuYWdlc2lldmU7CiB1c2UgR2V0
b3B0OjpMb25nOwogCiAkdXNlcm5hbWUgPSAiIjsKKyR0bHNfa2V5ZmlsZSA9ICIiOwogCiBwcmlu
dCAiTk9URTogVGhpcyBwcm9ncmFtIGlzIGRlcHJlY2F0ZWQuIFBsZWFzZSB1c2Ugc2lldmVzaGVs
bFxuIjsKIHByaW50ICJcbiI7CkBAIC01Nyw2ICs1OCw4IEBAICRyZXQgPSBHZXRPcHRpb25zKCJ2
fHZpZXdzOnMiID0+IFwkdmlld3MKIAkJICAiYXxhY3RpdmF0ZXM6cyIgPT4gXCRhY3RpdmF0ZXMs
CiAJCSAgImR8ZGVsZXRlczpzIiA9PiBcJGRlbGV0ZXMsCiAjCQkgICJtfG1lY2hhbmlzbTpzIiA9
PiBcJG1lY2gsCisgICAgCQkgICJ0fHRsc2tleTpzIiA9PiBcJHRsc19rZXlmaWxlLAorCQkgICJu
fG5vdGxzIiA9PiBcJG5vdGxzLAogCQkgICJnfGdldHM6cyIgPT4gXCRnZXRzLAogICAgICAgICAg
ICAgICAgICAgInV8dXNlcm5hbWU6cyIgPT4gXCR1c2VybmFtZSwKICMJCSAgInd8cGFzc3dvcmQ6
cyIgPT4gXCRwYXNzCkBAIC02OCw2ICs3MSwxMCBAQCBpZiAoISRyZXQgfHwgJCNBUkdWICE9IDAp
IHsgCiAKICRhY2Fwc2VydmVyID0gJEFSR1ZbMF07CiAKK2lmICgkbm90bHMpIHsKKyAgICAkdGxz
X2tleWZpbGUgPSB1bmRlZjsKK30KKwogc3ViIGxpc3RfY2IgewogCiAgIG15KCRuYW1lLCAkaXNh
Y3RpdmUpID0gQF8gOwpAQCAtMTE1LDExICsxMjIsMTMgQEAgc3ViIHNob3dfaGVscCB7CiAgIHBy
aW50ICIgIC1nIDxuYW1lPiAgICBHZXQgc2NyaXB0IDxuYW1lPiBhbmQgc2F2ZSB0byBkaXNrXG4i
OwogICBwcmludCAiICAtdSA8dXNlcj4gICAgVXNlcmlkL0F1dGhuYW1lIHRvIHVzZVxuIjsKICMg
IHByaW50ICIgIC13IDxwYXNzd2Q+ICBTcGVjaWZ5IHBhc3N3b3JkIChTaG91bGQgb25seSBiZSB1
c2VkIGZvciBhdXRvbWF0ZWQgc2NyaXB0cylcbiI7CisgIHByaW50ICIgIC10IDxrZXlmaWxlPiBU
TFMga2V5ZmlsZSB0byB1c2VcbiI7CisgIHByaW50ICIgIC1uICAgICAgICAgICBEb24ndCB1c2Ug
VExTXG4iOwogICBwcmludCAiXG4iOwogfQogCiAjbWFpbiBjb2RlCi1teSAkb2JqID0gc2lldmVf
Z2V0X2hhbmRsZSgkYWNhcHNlcnZlciwicHJvbXB0IiwicHJvbXB0IiwicHJvbXB0IiwicHJvbXB0
Iik7CitteSAkb2JqID0gc2lldmVfZ2V0X2hhbmRsZSgkYWNhcHNlcnZlciwicHJvbXB0IiwicHJv
bXB0IiwicHJvbXB0IiwicHJvbXB0IiwgJHRsc19rZXlmaWxlKTsKIAogaWYgKCFkZWZpbmVkICRv
YmopIHsKICAgZGllICJVbmFibGUgdG8gY29ubmVjdCB0byBzZXJ2ZXIiOwpJbmRleDogc2NyaXB0
cy9zaWV2ZXNoZWxsLnBsCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9jdnMvc3JjL2N5cnVzL3Blcmwv
c2lldmUvc2NyaXB0cy9zaWV2ZXNoZWxsLnBsLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjE5CmRp
ZmYgLXUgLXAgLXIxLjE5IHNpZXZlc2hlbGwucGwKLS0tIHNjcmlwdHMvc2lldmVzaGVsbC5wbAky
IERlYyAyMDAyIDE5OjQ1OjExIC0wMDAwCTEuMTkKKysrIHNjcmlwdHMvc2lldmVzaGVsbC5wbAky
MiBNYXkgMjAwMyAxNTo0MzoyNyAtMDAwMApAQCAtNjIsNiArNjIsOCBAQCBteSAkZGVsZXRlaGVs
cCA9ICAgICAiZGVsZXRlIDxuYW1lPiAgICAtCiBteSAkdXNlcm5hbWUgPSAkRU5We1VTRVJ9Owog
bXkgJGF1dGhuYW1lID0gJEVOVntVU0VSfTsKIG15ICRyZWFsbSA9ICIiOworbXkgJHRsc19rZXlm
aWxlID0gIiI7CitteSAkbm90bHMgPSAwOwogbXkgJGV4ID0gIiI7CiBteSAkaGVscCA9IDA7CiBt
eSAkbWFuID0gMDsKQEAgLTcwLDYgKzcyLDggQEAgbXkgJHJldDsKIEdldE9wdGlvbnMoImF8YXV0
aG5hbWU6cyIgPT4gXCRhdXRobmFtZSwKICAgICAidXx1c2VybmFtZTpzIiA9PiBcJHVzZXJuYW1l
LAogICAgICJyfHJlYWxtOnMiID0+IFwkcmVhbG0sCisgICAgInR8dGxza2V5OnMiID0+IFwkdGxz
X2tleWZpbGUsCisgICAgIm58bm90bHMiID0+IFwkbm90bHMsCiAgICAgImV8ZXhlYzpzIiA9PiBc
JGV4LAogICAgICJoZWxwfD8iID0+IFwkaGVscCwKICAgICBtYW4gPT4gXCRtYW4pIG9yIHBvZDJ1
c2FnZSgyKTsKQEAgLTgyLDYgKzg2LDEwIEBAIGlmICgkI0FSR1YgIT0gMCkgeyAKIAogbXkgJGFj
YXBzZXJ2ZXIgPSAkQVJHVlswXTsKIAoraWYgKCRub3RscykgeworICAgICR0bHNfa2V5ZmlsZSA9
IHVuZGVmOworfQorCiBteSAkZmlsZWhhbmRsZTsKIG15ICRpbnRlcmFjdGl2ZTsKIApAQCAtMTQ4
LDcgKzE1Niw3IEBAIHN1YiBwcm9tcHQgewogCiBzdWIgc2hvd19oZWxwIHsKICAgcHJpbnQgIlVz
YWdlOlxuIjsKLSAgcHJpbnQgIiAgc2lldmVzaGVsbCBbLXUgdXNlcm5hbWVdIFstYSBhdXRobmFt
ZV0gWy1yIHJlYWxtXSA8c2VydmVyPlxuIjsKKyAgcHJpbnQgIiAgc2lldmVzaGVsbCBbLXUgdXNl
cm5hbWVdIFstYSBhdXRobmFtZV0gWy1yIHJlYWxtXSBbLXQga2V5ZmlsZV0gWy1uXSA8c2VydmVy
PlxuIjsKICAgcHJpbnQgIlxuIjsKICAgcHJpbnQgImhlbHAgICAgICAgICAgICAgLSB0aGlzIHNj
cmVlblxuIjsKICAgcHJpbnQgImxpc3QgICAgICAgICAgICAgLSBsaXN0IHNjcmlwdHMgb24gc2Vy
dmVyXG4iOwpAQCAtMTcwLDcgKzE3OCw3IEBAIHN1YiBnZXRsaW5lIHsKIHByaW50ICJjb25uZWN0
aW5nIHRvICRhY2Fwc2VydmVyXG4iOwogCiBteSAkb2JqID0gc2lldmVfZ2V0X2hhbmRsZSgkYWNh
cHNlcnZlciwKLQkJCSAgICJwcm9tcHQiLCAicHJvbXB0IiwgInByb21wdCIsICJwcm9tcHQiKTsK
KwkJCSAgICJwcm9tcHQiLCAicHJvbXB0IiwgInByb21wdCIsICJwcm9tcHQiLCAkdGxzX2tleWZp
bGUpOwogCiBpZiAoIWRlZmluZWQgJG9iaikgewogICAgIGRpZSAidW5hYmxlIHRvIGNvbm5lY3Qg
dG8gc2VydmVyIjsKQEAgLTI5MCw3ICsyOTgsOCBAQCBzaWV2ZXNoZWxsIC0gcmVtb3RlbHkgbWFu
aXB1bGF0ZSBzaWV2ZSBzCiA9aGVhZDEgU1lOT1BTSVMKIAogc2lldmVzaGVsbCBbQjwtLXVzZXI+
PUk8dXNlcj5dIFtCPC0tYXV0aG5hbWU+PUk8YXV0aG5hbWU+XSAKLVtCPC0tcmVhbG0+PUk8cmVh
bG0+XSBbQjwtLWV4ZWM+PUk8c2NyaXB0Pl0gSTxzZXJ2ZXI+CitbQjwtLXJlYWxtPj1JPHJlYWxt
Pl0gW0I8LS10bHNrZXk+PUk8a2V5ZmlsZV0gW0I8LS1ub3Rscz5dCitbQjwtLWV4ZWM+PUk8c2Ny
aXB0Pl0gSTxzZXJ2ZXI+CiAKIHNpZXZlc2hlbGwgQjwtLWhlbHA+CiAKQEAgLTMzMyw2ICszNDIs
MTQgQEAgVGhlIHVzZXIgdG8gdXNlIGZvciBhdXRoZW50aWNhdGlvbiAoZGVmYQogPWl0ZW0gQjwt
cj4gSTxyZWFsbT4sIEI8LS1yZWFsbT49STxyZWFsbT4gCiAKIFRoZSByZWFsbSB0byBhdHRlbXB0
IGF1dGhlbnRpY2F0aW9uIGluLgorCis9aXRlbSBCPC10PiBJPGtleWZpbGU+LCBCPC0tdGxza2V5
Pj1JPGtleWZpbGU+CisKK0k8a2V5ZmlsZT4gY29udGFpbnMgdGhlIFRMUyBwdWJsaWMgYW5kIHBy
aXZhdGUga2V5cyB0byB1c2UuCisKKz1pdGVtIEI8LW4+LCBCPC0tbm90bHM+CisKK0Rpc2FibGUg
VExTLgogCiA9aXRlbSBCPC1lPiBJPHNjcmlwdD4sIEI8LS1leGVjPj1JPHNjcmlwdD4gCiAK
</data>        

          </attachment>
      

    </bug>

</bugzilla>