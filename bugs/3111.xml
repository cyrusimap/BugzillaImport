<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3111</bug_id>
          
          <creation_ts>2008-10-28 10:23 EDT</creation_ts>
          <short_desc>fix sql plugin crash when user with unknown login tries to get authorised</short_desc>
          <delta_ts>2010-10-25 18:46:47 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus SASL</product>
          <component>plugins</component>
          <version>2.1.x</version>
          <rep_platform>All</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P5</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Maxim Gorbachyov">maxim.gorbachyov@gmail.com</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          
          

      

      

      
          <long_desc isprivate="0">
            <who name="Maxim Gorbachyov">maxim.gorbachyov@gmail.com</who>
            <bug_when>2008-10-28 10:23:02 EDT</bug_when>
            <thetext>Created an attachment (id=1038)
patch to fix the bug, tested

Relevant piece from my config:

pwcheck_method: auxprop
auxprop_plugin: sql
sql_engine: sqlite
sql_database: my.db
sql_select: SELECT pwd FROM users WHERE login = &apos;%u&apos;
sql_verbose: yes

I get SEGFAULTs when user with unknown login attempts to authorise.
I&apos;ve found that sql_auxprop_lookup() uses &apos;value&apos; and (most important)
&apos;value_len&apos; without previous initialization. Sqlite backend does not
change value_len if nothing was read from db. So we get
utils-&gt;prop_set() accessing random memory.

Proposed patch (see attachment) initializes &apos;value&apos; and &apos;value_len&apos;
with zeroes. It works for me.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">murch@andrew.cmu.edu</who>
            <bug_when>2008-11-06 10:39:50 EDT</bug_when>
            <thetext>Already fixed in CVS</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1038</attachid>
            <date>2008-10-28 10:23 EDT</date>
            <desc>patch to fix the bug, tested</desc>
            <filename>sql-plugin-fix-crash-on-unknown-user</filename>
            <type>text/plain</type>
            <size>578</size>
            <attacher>maxim.gorbachyov@gmail.com</attacher>
            
              <data encoding="base64">ZGlmZiAtdXdwciBjeXJ1cy1zYXNsLTIuMS4yMi1vbGQvcGx1Z2lucy9zcWwuYyBjeXJ1cy1zYXNs
LTIuMS4yMi1uZXcvcGx1Z2lucy9zcWwuYwotLS0gY3lydXMtc2FzbC0yLjEuMjItb2xkL3BsdWdp
bnMvc3FsLmMJMjAwNi0wNC0wNyAxMzo0MjoxNi4wMDAwMDAwMDAgKzAwMDAKKysrIGN5cnVzLXNh
c2wtMi4xLjIyLW5ldy9wbHVnaW5zL3NxbC5jCTIwMDgtMTAtMTAgMTQ6MDg6MjYuMDAwMDAwMDAw
ICswMDAwCkBAIC04NjEsNiArODYxLDggQEAgc3RhdGljIHZvaWQgc3FsX2F1eHByb3BfbG9va3Vw
KHZvaWQgKmdsbwogCXNwYXJhbXMtPnV0aWxzLT5sb2coTlVMTCwgU0FTTF9MT0dfREVCVUcsCiAJ
CQkgICAgInNxbCBwbHVnaW4gZG9pbmcgcXVlcnkgJXNcbiIsIHF1ZXJ5KTsKIAkKKwltZW1zZXQo
dmFsdWUsIDAsIHNpemVvZih2YWx1ZSkpOworCXZhbHVlX2xlbiA9IDA7CiAJLyogcnVuIHRoZSBx
dWVyeSAqLwogCWlmICghc2V0dGluZ3MtPnNxbF9lbmdpbmUtPnNxbF9leGVjKGNvbm4sIHF1ZXJ5
LCB2YWx1ZSwgc2l6ZW9mKHZhbHVlKSwKIAkJCQkJICAgICZ2YWx1ZV9sZW4sIHNwYXJhbXMtPnV0
aWxzKSkgewo=
</data>        

          </attachment>
      

    </bug>

</bugzilla>