<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3495</bug_id>
          
          <creation_ts>2011-07-21 04:55 EDT</creation_ts>
          <short_desc>Improved duplicate suppression</short_desc>
          <delta_ts>2011-08-15 15:19:53 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>LMTP</component>
          <version>2.4.10</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P1</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.4.11</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Kristof Katus">kristof.katus@gmail.com</reporter>
          <assigned_to name="Bron Gondwana">brong@fastmail.fm</assigned_to>
          <cc>awilliam@whitemice.org</cc>
    
    <cc>hmh@debian.org</cc>
    
    <cc>thomas.jarosch@intra2net.com</cc>
    
    <cc>vanmeeuwen@kolabsys.com</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Kristof Katus">kristof.katus@gmail.com</who>
            <bug_when>2011-07-21 04:55:54 EDT</bug_when>
            <thetext>Created an attachment (id=1401)
Patch for improved duplicate suppression. 

Currently the duplicate suppression mechanism of cyrus-imapd is only based on 
the Message-Id and the To field of the email header. Some email clients reuse 
the Message-Id if you resend the same email later on, so the resent email is 
going to be suppressed by cyrus. 

The solution for this is to not only store the message-id/mailbox pair in the 
duplicate delivery database, but also the Date field of the given email (so the  
message-id/mailbox/date triple is going to be stored). Patch attached.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Henrique de Moraes Holschuh">hmh@debian.org</who>
            <bug_when>2011-07-21 16:00:19 EDT</bug_when>
            <thetext>I&apos;ve seen this with Microsoft Outlook 2007.

Duplicated message-ids on different messages is such an outright violation of RFCs and such a data-loss-inducing bug, that disclosing the culprits is public service.  It would be nice to know of further clients that are this broken.

At the time, we opened a case with Microsoft, which didn&apos;t do anything to fix the bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Adam Tauno Williams">awilliam@whitemice.org</who>
            <bug_when>2011-07-22 05:59:09 EDT</bug_when>
            <thetext>We see this often, not with &quot;clients&quot;, but with document centers [scan to SMTP, receive fax to SMTP, etc..].  Xerox brand devices in particular will reuse the same Message-ID over and over for a long period of time; it is funny in their case because the Message-ID is obviously {timestamp}@{hostname}, but one a message is sent the device remembers the Message-ID and reuses it.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Thomas Jarosch">thomas.jarosch@intra2net.com</who>
            <bug_when>2011-08-10 04:57:27 EDT</bug_when>
            <thetext>There seems to be an issue with the new code and the vacation message:

If you select to send out only one notification per day and recipient, it sends a notification for every email. Probably some database lookup needs to be adjusted as well, we&apos;ll investigate this soon.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2011-08-10 05:58:43 EDT</bug_when>
            <thetext>Ok, I&apos;m going to integrate this in for 2.4.11.  Just assigning it for now, because it&apos;s a biggish patch and I want to review it a bit more first.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Kristof Katus">kristof.katus@gmail.com</who>
            <bug_when>2011-08-11 07:26:22 EDT</bug_when>
            <thetext>Created an attachment (id=1414)
Patch for improved duplicate suppression (version 2). 

Fixed the issue with the vacation response messages. Patch attached. It seems that in case of sending sieve autoresponse messages, we should not store and look for the whole id/to/date triple as a key in the duplicate delivery database - date should be an empty cstring. The id is already created properly by cyrus in this case, and storing an additional date field simply breaks the one response per one day mechanism.

Some notes I took while investigating this issue: 

--- Should check cyrus-imapd-2.4.10/imap/lmtp_sieve.c:autorespond:586
  o Clearly, cyrus-imapd-2.4.10/sieve/script.c:do_action_list:791 is using the autorespond function
  o cyrus-imapd-2.4.10/sieve/sieve_interface.h:sieve_vacation:90 comment: 
    /* given a hash, say whether we&apos;ve already responded to it in the last
       days days.  return SIEVE_OK if we SHOULD autorespond (have not already)
       or SIEVE_DONE if we SHOULD NOT. */
    - Line 129:
      typedef struct sieve_autorespond_context {
	unsigned char hash[SIEVE_HASHLEN];
	int days;
      } sieve_autorespond_context_t;
  o cyrus-imapd-2.4.10/sieve/message.c:do_vacation:265 calls makehash:224, the produced hash depends on arg2, arg3 and arg4
  o Check cyrus-imapd-2.4.10/sieve/bc_eval.c:1338: 
    - res = do_vacation(actions, toaddr, fromaddr, xstrdup(subject),
      message, days, mime, handle);
\-&gt; Either way, seems that in this case, as an exception, we should not include the date in the dkey.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2011-08-12 08:31:35 EDT</bug_when>
            <thetext>Ok, accepted into stable and master.  Will be in 2.4.11.

Thanks for following up and making it work with vacation!</thetext>
          </long_desc>
      
          <attachment
              isobsolete="1"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1401</attachid>
            <date>2011-07-21 04:55 EDT</date>
            <desc>Patch for improved duplicate suppression. </desc>
            <filename>cyrus-imapd-2.4.10-duplicate-suppression.patch</filename>
            <type>text/plain</type>
            <size>19585</size>
            <attacher>kristof.katus@gmail.com</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL2RhdGFzdG9yZS9kZXYvcnBtYnVpbGQvQlVJTEQvY3lydXMtaW1hcGQtMi40
LjEwL2ltYXAvZHVwbGljYXRlLmMgYi9HSVQvVEVNUC9jeXJ1cy1pbWFwZC0yLjQuMTAvaW1hcC9k
dXBsaWNhdGUuYwppbmRleCAzYTcyYzQzLi40YWM1MzQyIDEwMDY0NAotLS0gYS9kYXRhc3RvcmUv
ZGV2L3JwbWJ1aWxkL0JVSUxEL2N5cnVzLWltYXBkLTIuNC4xMC9pbWFwL2R1cGxpY2F0ZS5jCisr
KyBiL0dJVC9URU1QL2N5cnVzLWltYXBkLTIuNC4xMC9pbWFwL2R1cGxpY2F0ZS5jCkBAIC0xMjEs
OSArMTIxLDEyIEBAIGludCBkdXBsaWNhdGVfaW5pdChjb25zdCBjaGFyICpmbmFtZSwgaW50IG15
ZmxhZ3MgX19hdHRyaWJ1dGVfXygodW51c2VkKSkpCiAgICAgcmV0dXJuIHI7CiB9CiAKLXRpbWVf
dCBkdXBsaWNhdGVfY2hlY2soY2hhciAqaWQsIGludCBpZGxlbiwgY29uc3QgY2hhciAqdG8sIGlu
dCB0b2xlbikKK3RpbWVfdCBkdXBsaWNhdGVfY2hlY2soZHVwbGljYXRlX2tleV90ICpka2V5KQog
ewogICAgIGNoYXIgYnVmWzEwMjRdOworICAgIGludCBpZGxlbiA9IHN0cmxlbihka2V5LT5pZCk7
CisgICAgaW50IHRvbGVuID0gc3RybGVuKGRrZXktPnRvKTsKKyAgICBpbnQgZGF0ZWxlbiA9IHN0
cmxlbihka2V5LT5kYXRlKTsgCiAgICAgaW50IHI7CiAgICAgY29uc3QgY2hhciAqZGF0YSA9IE5V
TEw7CiAgICAgaW50IGxlbiA9IDA7CkBAIC0xMzEsMTYgKzEzNCwxOCBAQCB0aW1lX3QgZHVwbGlj
YXRlX2NoZWNrKGNoYXIgKmlkLCBpbnQgaWRsZW4sIGNvbnN0IGNoYXIgKnRvLCBpbnQgdG9sZW4p
CiAKICAgICBpZiAoIWR1cGxpY2F0ZV9kYm9wZW4pIHJldHVybiAwOwogCi0gICAgaWYgKGlkbGVu
ICsgdG9sZW4gPiAoaW50KSBzaXplb2YoYnVmKSAtIDMwKSByZXR1cm4gMDsKLSAgICBtZW1jcHko
YnVmLCBpZCwgaWRsZW4pOworICAgIGlmIChpZGxlbiArIHRvbGVuICsgZGF0ZWxlbiA+IChpbnQp
IHNpemVvZihidWYpIC0gMzApIHJldHVybiAwOworICAgIG1lbWNweShidWYsIGRrZXktPmlkLCBp
ZGxlbik7CiAgICAgYnVmW2lkbGVuXSA9ICdcMCc7Ci0gICAgbWVtY3B5KGJ1ZiArIGlkbGVuICsg
MSwgdG8sIHRvbGVuKTsKKyAgICBtZW1jcHkoYnVmICsgaWRsZW4gKyAxLCBka2V5LT50bywgdG9s
ZW4pOwogICAgIGJ1ZltpZGxlbiArIHRvbGVuICsgMV0gPSAnXDAnOworICAgIGFzc2VydChka2V5
LT5kYXRlICE9IE5VTEwpOworICAgIG1lbWNweShidWYgKyBpZGxlbiArIHRvbGVuICsgMiwgZGtl
eS0+ZGF0ZSwgZGF0ZWxlbik7CisgICAgYnVmW2lkbGVuICsgdG9sZW4gKyBkYXRlbGVuICsgMl0g
PSAnXDAnOwogCiAgICAgZG8gewogCXIgPSBEQi0+ZmV0Y2goZHVwZGIsIGJ1ZiwKLQkJICAgICAg
aWRsZW4gKyB0b2xlbiArIDIsIC8qICsyIGIvYyAxIGZvciB0aGUgY2VudGVyIG51bGw7Ci0JCQkJ
CSAgICArMSBmb3IgdGhlIHRlcm1pbmF0aW5nIG51bGwgKi8KKwkJICAgICAgaWRsZW4gKyB0b2xl
biArIGRhdGVsZW4gKyAzLCAvKiBXZSBoYXZlIHRocmVlIGNvbmNhdGVuYXRlZCB2YWx1ZXMgbm93
LCBhbGwgcGFydHMgZW5kaW5nIHdpdGggJ1wwJyAqLwogCQkgICAgICAmZGF0YSwgJmxlbiwgTlVM
TCk7CiAgICAgfSB3aGlsZSAociA9PSBDWVJVU0RCX0FHQUlOKTsKIApAQCAtMTUyLDU0ICsxNTcs
NTkgQEAgdGltZV90IGR1cGxpY2F0ZV9jaGVjayhjaGFyICppZCwgaW50IGlkbGVuLCBjb25zdCBj
aGFyICp0bywgaW50IHRvbGVuKQogCW1lbWNweSgmbWFyaywgZGF0YSwgc2l6ZW9mKHRpbWVfdCkp
OwogICAgIH0gZWxzZSBpZiAociAhPSBDWVJVU0RCX09LKSB7CiAJaWYgKHIgIT0gQ1lSVVNEQl9O
T1RGT1VORCkgewotCSAgICBzeXNsb2coTE9HX0VSUiwgImR1cGxpY2F0ZV9jaGVjazogZXJyb3Ig
bG9va2luZyB1cCAlcy8lczogJXMiLAotCQkgICBpZCwgdG8sCi0JCSAgIGN5cnVzZGJfc3RyZXJy
b3IocikpOworCSAgICBzeXNsb2coTE9HX0VSUiwgImR1cGxpY2F0ZV9jaGVjazogZXJyb3IgbG9v
a2luZyB1cCAlcy8lcy8lczogJXMiLAorCQkgICBka2V5LT5pZCwgZGtleS0+dG8sIGRrZXktPmRh
dGUsIAorCQkgICBjeXJ1c2RiX3N0cmVycm9yKHIpKTsgCiAJfQogCW1hcmsgPSAwOwogICAgIH0K
IAotICAgIHN5c2xvZyhMT0dfREVCVUcsICJkdXBsaWNhdGVfY2hlY2s6ICUtNDBzICUtMjBzICVs
ZCIsCi0JICAgYnVmLCBidWYraWRsZW4rMSwgbWFyayk7CisgICAgc3lzbG9nKExPR19ERUJVRywg
ImR1cGxpY2F0ZV9jaGVjazogJS00MHMgJS0yMHMgJS00MHMgJWxkIiwKKwkgICBidWYsIGJ1Zitp
ZGxlbisxLCBidWYraWRsZW4rdG9sZW4rMiwgbWFyayk7IAogCiAgICAgcmV0dXJuIG1hcms7CiB9
CiAKLXZvaWQgZHVwbGljYXRlX2xvZyhjaGFyICptc2dpZCwgY29uc3QgY2hhciAqbmFtZSwgY2hh
ciAqYWN0aW9uKQordm9pZCBkdXBsaWNhdGVfbG9nKGR1cGxpY2F0ZV9rZXlfdCAqZGtleSwgY2hh
ciAqYWN0aW9uKSAKIHsKLSAgICBzeXNsb2coTE9HX0lORk8sICJkdXBlbGltOiBlbGltaW5hdGVk
IGR1cGxpY2F0ZSBtZXNzYWdlIHRvICVzIGlkICVzICglcykiLAotCSAgIG5hbWUsIG1zZ2lkLCBh
Y3Rpb24pOworICAgIGFzc2VydChka2V5LT5kYXRlICE9IE5VTEwpOworICAgIHN5c2xvZyhMT0df
SU5GTywgImR1cGVsaW06IGVsaW1pbmF0ZWQgZHVwbGljYXRlIG1lc3NhZ2UgdG8gJXMgaWQgJXMg
ZGF0ZSAlcyAoJXMpIiwKKyAgICAgIGRrZXktPnRvLCBka2V5LT5pZCwgZGtleS0+ZGF0ZSwgYWN0
aW9uKTsgICAgCiAgICAgaWYgKGNvbmZpZ19hdWRpdGxvZykKLQlzeXNsb2coTE9HX05PVElDRSwg
ImF1ZGl0bG9nOiBkdXBsaWNhdGUgc2Vzc2lvbmlkPTwlcz4gYWN0aW9uPTwlcz4gbWVzc2FnZS1p
ZD0lcyB1c2VyPTwlcz4iLAotCSAgICAgICBzZXNzaW9uX2lkKCksIGFjdGlvbiwgbXNnaWQsIG5h
bWUpOyAKKwlzeXNsb2coTE9HX05PVElDRSwgImF1ZGl0bG9nOiBkdXBsaWNhdGUgc2Vzc2lvbmlk
PTwlcz4gYWN0aW9uPTwlcz4gbWVzc2FnZS1pZD0lcyB1c2VyPTwlcz4gZGF0ZT08JXM+IiwKKwkg
ICAgICAgc2Vzc2lvbl9pZCgpLCBhY3Rpb24sIGRrZXktPmlkLCBka2V5LT50bywgZGtleS0+ZGF0
ZSk7IAogfQogCi12b2lkIGR1cGxpY2F0ZV9tYXJrKGNoYXIgKmlkLCBpbnQgaWRsZW4sIGNvbnN0
IGNoYXIgKnRvLCBpbnQgdG9sZW4sIHRpbWVfdCBtYXJrLAotCQkgICAgdW5zaWduZWQgbG9uZyB1
aWQpCit2b2lkIGR1cGxpY2F0ZV9tYXJrKGR1cGxpY2F0ZV9rZXlfdCAqZGtleSwgdGltZV90IG1h
cmssIHVuc2lnbmVkIGxvbmcgdWlkKQogewogICAgIGNoYXIgYnVmWzEwMjRdLCBkYXRhWzEwMF07
CisgICAgaW50IGlkbGVuID0gc3RybGVuKGRrZXktPmlkKTsKKyAgICBpbnQgdG9sZW4gPSBzdHJs
ZW4oZGtleS0+dG8pOworICAgIGludCBkYXRlbGVuID0gc3RybGVuKGRrZXktPmRhdGUpOyAKICAg
ICBpbnQgcjsKIAogICAgIGlmICghZHVwbGljYXRlX2Rib3BlbikgcmV0dXJuOwogCi0gICAgaWYg
KGlkbGVuICsgdG9sZW4gPiAoaW50KSBzaXplb2YoYnVmKSAtIDMwKSByZXR1cm47Ci0gICAgbWVt
Y3B5KGJ1ZiwgaWQsIGlkbGVuKTsKKyAgICBpZiAoaWRsZW4gKyB0b2xlbiArIGRhdGVsZW4gPiAo
aW50KSBzaXplb2YoYnVmKSAtIDMwKSByZXR1cm47IAorICAgIG1lbWNweShidWYsIGRrZXktPmlk
LCBpZGxlbik7CiAgICAgYnVmW2lkbGVuXSA9ICdcMCc7Ci0gICAgbWVtY3B5KGJ1ZiArIGlkbGVu
ICsgMSwgdG8sIHRvbGVuKTsKKyAgICBtZW1jcHkoYnVmICsgaWRsZW4gKyAxLCBka2V5LT50bywg
dG9sZW4pOwogICAgIGJ1ZltpZGxlbiArIHRvbGVuICsgMV0gPSAnXDAnOworICAgIGFzc2VydChk
a2V5LT5kYXRlICE9IE5VTEwpOworICAgIG1lbWNweShidWYgKyBpZGxlbiArIHRvbGVuICsgMiwg
ZGtleS0+ZGF0ZSwgZGF0ZWxlbik7CisgICAgYnVmW2lkbGVuICsgdG9sZW4gKyBkYXRlbGVuICsg
Ml0gPSAnXDAnOwogCiAgICAgbWVtY3B5KGRhdGEsICZtYXJrLCBzaXplb2YobWFyaykpOwogICAg
IG1lbWNweShkYXRhICsgc2l6ZW9mKG1hcmspLCAmdWlkLCBzaXplb2YodWlkKSk7CiAKICAgICBk
byB7CiAJciA9IERCLT5zdG9yZShkdXBkYiwgYnVmLAotCQkgICAgICBpZGxlbiArIHRvbGVuICsg
MiwgLyogKzIgYi9jIDEgZm9yIHRoZSBjZW50ZXIgbnVsbDsKLQkJCQkJICAgICsxIGZvciB0aGUg
dGVybWluYXRpbmcgbnVsbCAqLworCQkgICAgICBpZGxlbiArIHRvbGVuICsgZGF0ZWxlbiArIDMs
IC8qIFdlIGhhdmUgdGhyZWUgY29uY2F0ZW5hdGVkIHZhbHVlcyBub3csIGFsbCBwYXJ0cyBlbmRp
bmcgd2l0aCAnXDAnICovCiAJCSAgICAgIGRhdGEsIHNpemVvZihtYXJrKStzaXplb2YodWlkKSwg
TlVMTCk7CiAgICAgfSB3aGlsZSAociA9PSBDWVJVU0RCX0FHQUlOKTsKIAotICAgIHN5c2xvZyhM
T0dfREVCVUcsICJkdXBsaWNhdGVfbWFyazogJS00MHMgJS0yMHMgJWxkICVsdSIsCi0JICAgYnVm
LCBidWYraWRsZW4rMSwgbWFyaywgdWlkKTsKKyAgICBzeXNsb2coTE9HX0RFQlVHLCAiZHVwbGlj
YXRlX21hcms6ICUtNDBzICUtMjBzICUtNDBzICVsZCAlbHUiLAorCSAgIGJ1ZiwgYnVmK2lkbGVu
KzEsIGJ1ZitpZGxlbit0b2xlbisyLCBtYXJrLCB1aWQpOyAKIAogICAgIHJldHVybjsKIH0KZGlm
ZiAtLWdpdCBhL2RhdGFzdG9yZS9kZXYvcnBtYnVpbGQvQlVJTEQvY3lydXMtaW1hcGQtMi40LjEw
L2ltYXAvZHVwbGljYXRlLmggYi9HSVQvVEVNUC9jeXJ1cy1pbWFwZC0yLjQuMTAvaW1hcC9kdXBs
aWNhdGUuaAppbmRleCBkMWQ4NzM3Li44YTM2YTg5IDEwMDY0NAotLS0gYS9kYXRhc3RvcmUvZGV2
L3JwbWJ1aWxkL0JVSUxEL2N5cnVzLWltYXBkLTIuNC4xMC9pbWFwL2R1cGxpY2F0ZS5oCisrKyBi
L0dJVC9URU1QL2N5cnVzLWltYXBkLTIuNC4xMC9pbWFwL2R1cGxpY2F0ZS5oCkBAIC00OSwxMiAr
NDksMTcgQEAKIC8qIG5hbWUgb2YgdGhlIGR1cGxpY2F0ZSBkZWxpdmVyeSBkYXRhYmFzZSAqLwog
I2RlZmluZSBGTkFNRV9ERUxJVkVSREIgIi9kZWxpdmVyLmRiIgogCit0eXBlZGVmIHN0cnVjdCBk
dXBsaWNhdGVfa2V5IHsKKyAgICBjaGFyICppZDsKKyAgICBjaGFyICp0bzsKKyAgICBjaGFyICpk
YXRlOworfSBkdXBsaWNhdGVfa2V5X3Q7CisKIGludCBkdXBsaWNhdGVfaW5pdChjb25zdCBjaGFy
ICpmbmFtZSwgaW50IG15ZmxhZ3MpOwogCi10aW1lX3QgZHVwbGljYXRlX2NoZWNrKGNoYXIgKmlk
LCBpbnQgaWRsZW4sIGNvbnN0IGNoYXIgKnRvLCBpbnQgdG9sZW4pOwotdm9pZCBkdXBsaWNhdGVf
bG9nKGNoYXIgKm1zZ2lkLCBjb25zdCBjaGFyICpuYW1lLCBjaGFyICphY3Rpb24pOwotdm9pZCBk
dXBsaWNhdGVfbWFyayhjaGFyICppZCwgaW50IGlkbGVuLCBjb25zdCBjaGFyICp0bywgaW50IHRv
bGVuLCB0aW1lX3QgbWFyaywKLQkJICAgIHVuc2lnbmVkIGxvbmcgdWlkKTsKK3RpbWVfdCBkdXBs
aWNhdGVfY2hlY2soZHVwbGljYXRlX2tleV90ICpka2V5KTsKK3ZvaWQgZHVwbGljYXRlX2xvZyhk
dXBsaWNhdGVfa2V5X3QgKmRrZXksIGNoYXIgKmFjdGlvbik7Cit2b2lkIGR1cGxpY2F0ZV9tYXJr
KGR1cGxpY2F0ZV9rZXlfdCAqZGtleSwgdGltZV90IG1hcmssIHVuc2lnbmVkIGxvbmcgdWlkKTsK
IGludCBkdXBsaWNhdGVfZmluZChjaGFyICptc2dpZCwgaW50ICgqcHJvYykoKSwgdm9pZCAqcm9j
ayk7CiAKIGludCBkdXBsaWNhdGVfcHJ1bmUoaW50IHNlY29uZHMsIHN0cnVjdCBoYXNoX3RhYmxl
ICpleHBpcmVfdGFibGUpOwpkaWZmIC0tZ2l0IGEvZGF0YXN0b3JlL2Rldi9ycG1idWlsZC9CVUlM
RC9jeXJ1cy1pbWFwZC0yLjQuMTAvaW1hcC9sbXRwX3NpZXZlLmMgYi9HSVQvVEVNUC9jeXJ1cy1p
bWFwZC0yLjQuMTAvaW1hcC9sbXRwX3NpZXZlLmMKaW5kZXggMzc5YmVmZC4uNGZiMTkxYyAxMDA2
NDQKLS0tIGEvZGF0YXN0b3JlL2Rldi9ycG1idWlsZC9CVUlMRC9jeXJ1cy1pbWFwZC0yLjQuMTAv
aW1hcC9sbXRwX3NpZXZlLmMKKysrIGIvR0lUL1RFTVAvY3lydXMtaW1hcGQtMi40LjEwL2ltYXAv
bG10cF9zaWV2ZS5jCkBAIC0yMjUsNiArMjI1LDcgQEAgc3RhdGljIGludCBzZW5kX3JlamVjdGlv
bihjb25zdCBjaGFyICpvcmlnaWQsCiAgICAgdGltZV90IHQ7CiAgICAgY2hhciBkYXRlc3RyWzgw
XTsKICAgICBwaWRfdCBzbV9waWQsIHA7CisgICAgZHVwbGljYXRlX2tleV90IGRrZXkgPSB7TlVM
TCwgTlVMTCwgTlVMTH07CiAKICAgICBzbWJ1ZlswXSA9ICJzZW5kbWFpbCI7CiAgICAgc21idWZb
MV0gPSAiLWkiOwkJLyogaWdub3JlIGRvdHMgKi8KQEAgLTI0NCwxMCArMjQ1LDEzIEBAIHN0YXRp
YyBpbnQgc2VuZF9yZWplY3Rpb24oY29uc3QgY2hhciAqb3JpZ2lkLAogCSAgICAgZ2xvYmFsX291
dGdvaW5nX2NvdW50KyssIGNvbmZpZ19zZXJ2ZXJuYW1lKTsKICAgICAKICAgICBuYW1lYnVmID0g
bWFrZV9zaWV2ZV9kYihtYWlscmVjZWlwKTsKLSAgICBkdXBsaWNhdGVfbWFyayhidWYsIHN0cmxl
bihidWYpLCBuYW1lYnVmLCBzdHJsZW4obmFtZWJ1ZiksIHQsIDApOwotICAgIGZwcmludGYoc20s
ICJNZXNzYWdlLUlEOiAlc1xyXG4iLCBidWYpOwogCisgICAgZGtleS5pZCA9IGJ1ZjsKKyAgICBk
a2V5LnRvID0gbmFtZWJ1ZjsKICAgICByZmM4MjJkYXRlX2dlbihkYXRlc3RyLCBzaXplb2YoZGF0
ZXN0ciksIHQpOworICAgIGRrZXkuZGF0ZSA9IGRhdGVzdHI7CisgICAgZHVwbGljYXRlX21hcmso
JmRrZXksIHQsIDApOworICAgIGZwcmludGYoc20sICJNZXNzYWdlLUlEOiAlc1xyXG4iLCBidWYp
OwogICAgIGZwcmludGYoc20sICJEYXRlOiAlc1xyXG4iLCBkYXRlc3RyKTsKIAogICAgIGZwcmlu
dGYoc20sICJYLVNpZXZlOiAlc1xyXG4iLCBTSUVWRV9WRVJTSU9OKTsKQEAgLTM2OCw2ICszNzIs
NyBAQCBzdGF0aWMgaW50IHNpZXZlX3JlZGlyZWN0KHZvaWQgKmFjLAogICAgIHNjcmlwdF9kYXRh
X3QgKnNkID0gKHNjcmlwdF9kYXRhX3QgKikgc2M7CiAgICAgbWVzc2FnZV9kYXRhX3QgKm0gPSAo
KGRlbGl2ZXJfZGF0YV90ICopIG1jKS0+bTsKICAgICBjaGFyIGJ1Zls4MTkyXSwgKnNpZXZlZGIg
PSBOVUxMOworICAgIGR1cGxpY2F0ZV9rZXlfdCBka2V5ID0ge05VTEwsIE5VTEwsIE5VTEx9Owog
ICAgIGludCByZXM7CiAKICAgICAvKiBpZiB3ZSBoYXZlIGEgbXNnaWQsIHdlIGNhbiB0cmFjayBv
dXIgcmVkaXJlY3RzICovCkBAIC0zNzUsMTcgKzM4MCwxOSBAQCBzdGF0aWMgaW50IHNpZXZlX3Jl
ZGlyZWN0KHZvaWQgKmFjLAogCXNucHJpbnRmKGJ1Ziwgc2l6ZW9mKGJ1ZiksICIlcy0lcyIsIG0t
PmlkLCByYy0+YWRkcik7CiAJc2lldmVkYiA9IG1ha2Vfc2lldmVfZGIoc2QtPnVzZXJuYW1lKTsK
IAorCWRrZXkuaWQgPSBidWY7CisJZGtleS50byA9IHNpZXZlZGI7CisJZGtleS5kYXRlID0gKChk
ZWxpdmVyX2RhdGFfdCAqKSBtYyktPm0tPmRhdGU7CiAJLyogb2ssIGxldCdzIHNlZSBpZiB3ZSd2
ZSByZWRpcmVjdGVkIHRoaXMgbWVzc2FnZSBiZWZvcmUgKi8KLQlpZiAoZHVwbGljYXRlX2NoZWNr
KGJ1Ziwgc3RybGVuKGJ1ZiksIHNpZXZlZGIsIHN0cmxlbihzaWV2ZWRiKSkpIHsKLQkgICAgZHVw
bGljYXRlX2xvZyhtLT5pZCwgc2QtPnVzZXJuYW1lLCAicmVkaXJlY3QiKTsKKwlpZiAoZHVwbGlj
YXRlX2NoZWNrKCZka2V5KSkgeworCSAgICBkdXBsaWNhdGVfbG9nKCZka2V5LCAicmVkaXJlY3Qi
KTsKIAkgICAgcmV0dXJuIFNJRVZFX09LOwogCX0KICAgICB9CiAKICAgICBpZiAoKHJlcyA9IHNl
bmRfZm9yd2FyZChyYy0+YWRkciwgbS0+cmV0dXJuX3BhdGgsIG0tPmRhdGEpKSA9PSAwKSB7CiAJ
LyogbWFyayB0aGlzIG1lc3NhZ2UgYXMgcmVkaXJlY3RlZCAqLwotCWlmIChzaWV2ZWRiKSBkdXBs
aWNhdGVfbWFyayhidWYsIHN0cmxlbihidWYpLCAKLQkJCQkgICAgc2lldmVkYiwgc3RybGVuKHNp
ZXZlZGIpLCB0aW1lKE5VTEwpLCAwKTsKKwlpZiAoc2lldmVkYikgZHVwbGljYXRlX21hcmsoJmRr
ZXksIHRpbWUoTlVMTCksIDApOwogCiAJc25tcF9pbmNyZW1lbnQoU0lFVkVfUkVESVJFQ1QsIDEp
OwogCXN5c2xvZyhMT0dfSU5GTywgInNpZXZlIHJlZGlyZWN0ZWQ6ICVzIHRvOiAlcyIsCkBAIC00
OTQsNyArNTAxLDcgQEAgc3RhdGljIGludCBzaWV2ZV9maWxlaW50byh2b2lkICphYywKIAkJCSAg
ICAgIGZjLT5pbWFwZmxhZ3MtPmZsYWcsIGZjLT5pbWFwZmxhZ3MtPm5mbGFncywKIAkJCSAgICAg
IChjaGFyICopIHNkLT51c2VybmFtZSwgc2QtPmF1dGhzdGF0ZSwgbWQtPmlkLAogCQkJICAgICAg
c2QtPnVzZXJuYW1lLCBtZGF0YS0+bm90aWZ5aGVhZGVyLAotCQkJICAgICAgbmFtZWJ1ZiwgcXVv
dGFvdmVycmlkZSwgMCk7CisJCQkgICAgICBuYW1lYnVmLCBtZC0+ZGF0ZSwgcXVvdGFvdmVycmlk
ZSwgMCk7CiAgICAgfQogCiAgICAgaWYgKCFyZXQpIHsKQEAgLTU2NCwxNCArNTcxLDE5IEBAIHN0
YXRpYyBpbnQgYXV0b3Jlc3BvbmQodm9pZCAqYWMsCiAgICAgc2NyaXB0X2RhdGFfdCAqc2QgPSAo
c2NyaXB0X2RhdGFfdCAqKSBzYzsKICAgICB0aW1lX3QgdCwgbm93OwogICAgIGludCByZXQ7Cisg
ICAgZHVwbGljYXRlX2tleV90IGRrZXkgPSB7TlVMTCwgTlVMTCwgTlVMTH07CiAKICAgICBzbm1w
X2luY3JlbWVudChTSUVWRV9WQUNBVElPTl9UT1RBTCwgMSk7CiAKICAgICBub3cgPSB0aW1lKE5V
TEwpOwogCiAgICAgLyogb2ssIGxldCdzIHNlZSBpZiB3ZSd2ZSByZXNwb25kZWQgYmVmb3JlICov
Ci0gICAgdCA9IGR1cGxpY2F0ZV9jaGVjaygoY2hhciAqKSBhcmMtPmhhc2gsIFNJRVZFX0hBU0hM
RU4sIAotCQkJc2QtPnVzZXJuYW1lLCBzdHJsZW4oc2QtPnVzZXJuYW1lKSk7CisgICAgZGtleS5p
ZCA9IHhtYWxsb2MoU0lFVkVfSEFTSExFTiArIDEpOworICAgIG1lbWNweShka2V5LmlkLCAoY2hh
ciAqKSBhcmMtPmhhc2gsIFNJRVZFX0hBU0hMRU4pOworICAgIGRrZXkuaWRbU0lFVkVfSEFTSExF
Tl0gPSAnXDAnOworICAgIGRrZXkudG8gPSBzZC0+dXNlcm5hbWU7CisgICAgZGtleS5kYXRlID0g
KChkZWxpdmVyX2RhdGFfdCAqKSBtYyktPm0tPmRhdGU7CisgICAgdCA9IGR1cGxpY2F0ZV9jaGVj
aygmZGtleSk7CiAgICAgaWYgKHQpIHsKIAlpZiAobm93ID49IHQpIHsKIAkgICAgLyogeWF5LCB3
ZSBjYW4gcmVzcG9uZCBhZ2FpbiEgKi8KQEAgLTU4NSwxMSArNTk3LDEwIEBAIHN0YXRpYyBpbnQg
YXV0b3Jlc3BvbmQodm9pZCAqYWMsCiAgICAgfQogCiAgICAgaWYgKHJldCA9PSBTSUVWRV9PSykg
ewotCWR1cGxpY2F0ZV9tYXJrKChjaGFyICopIGFyYy0+aGFzaCwgU0lFVkVfSEFTSExFTiwgCi0J
CSAgICAgICBzZC0+dXNlcm5hbWUsIHN0cmxlbihzZC0+dXNlcm5hbWUpLCAKLQkJICAgICAgIG5v
dyArIGFyYy0+ZGF5cyAqICgyNCAqIDYwICogNjApLCAwKTsKKwlkdXBsaWNhdGVfbWFyaygmZGtl
eSwgbm93ICsgYXJjLT5kYXlzICogKDI0ICogNjAgKiA2MCksIDApOwogICAgIH0KIAorICAgIGlm
IChka2V5LmlkICE9IE5VTEwpIGZyZWUoZGtleS5pZCk7CiAgICAgcmV0dXJuIHJldDsKIH0KIApA
QCAtNjA3LDYgKzYxOCw3IEBAIHN0YXRpYyBpbnQgc2VuZF9yZXNwb25zZSh2b2lkICphYywKICAg
ICBzaWV2ZV9zZW5kX3Jlc3BvbnNlX2NvbnRleHRfdCAqc3JjID0gKHNpZXZlX3NlbmRfcmVzcG9u
c2VfY29udGV4dF90ICopIGFjOwogICAgIG1lc3NhZ2VfZGF0YV90ICptZCA9ICgoZGVsaXZlcl9k
YXRhX3QgKikgbWMpLT5tOwogICAgIHNjcmlwdF9kYXRhX3QgKnNkYXRhID0gKHNjcmlwdF9kYXRh
X3QgKikgc2M7CisgICAgZHVwbGljYXRlX2tleV90IGRrZXkgPSB7TlVMTCwgTlVMTCwgTlVMTH07
CiAKICAgICBzbWJ1ZlswXSA9ICJzZW5kbWFpbCI7CiAgICAgc21idWZbMV0gPSAiLWkiOwkJLyog
aWdub3JlIGRvdHMgKi8KQEAgLTY2Nyw4ICs2NzksMTAgQEAgc3RhdGljIGludCBzZW5kX3Jlc3Bv
bnNlKHZvaWQgKmFjLAogICAgIGlmIChzbV9zdGF0ID09IDApIHsgLyogc2VuZG1haWwgZXhpdCB2
YWx1ZSAqLwogCXNpZXZlZGIgPSBtYWtlX3NpZXZlX2RiKHNkYXRhLT51c2VybmFtZSk7CiAKLQlk
dXBsaWNhdGVfbWFyayhvdXRtc2dpZCwgc3RybGVuKG91dG1zZ2lkKSwgCi0JCSAgICAgICBzaWV2
ZWRiLCBzdHJsZW4oc2lldmVkYiksIHQsIDApOworCWRrZXkuaWQgPSBvdXRtc2dpZDsKKwlka2V5
LnRvID0gc2lldmVkYjsKKwlka2V5LmRhdGUgPSAoKGRlbGl2ZXJfZGF0YV90ICopIG1jKS0+bS0+
ZGF0ZTsKKwlkdXBsaWNhdGVfbWFyaygmZGtleSwgdCwgMCk7CiAKIAlzbm1wX2luY3JlbWVudChT
SUVWRV9WQUNBVElPTl9SRVBMSUVELCAxKTsKIApAQCAtODc5LDYgKzg5Myw3IEBAIGludCBydW5f
c2lldmUoY29uc3QgY2hhciAqdXNlciwgY29uc3QgY2hhciAqZG9tYWluLCBjb25zdCBjaGFyICpt
YWlsYm94LAogICAgIGNoYXIgdXNlcmJ1ZltNQVhfTUFJTEJPWF9CVUZGRVJdID0gIiI7CiAgICAg
Y2hhciBhdXRodXNlcmJ1ZltNQVhfTUFJTEJPWF9CVUZGRVJdOwogICAgIGludCByID0gMDsKKyAg
ICBkdXBsaWNhdGVfa2V5X3QgZGtleSA9IHtOVUxMLCBOVUxMLCBOVUxMfTsKIAogICAgIGlmICgh
dXNlcikgewogCS8qIHNoYXJlZCBtYWlsYm94LCBjaGVjayBmb3IgYW5ub3RhdGlvbiAqLwpAQCAt
OTM1LDggKzk1MCwxMCBAQCBpbnQgcnVuX3NpZXZlKGNvbnN0IGNoYXIgKnVzZXIsIGNvbnN0IGNo
YXIgKmRvbWFpbiwgY29uc3QgY2hhciAqbWFpbGJveCwKIAkJIGRvbWFpbiA/IGRvbWFpbiA6ICIi
KTsKIAlzZGIgPSBtYWtlX3NpZXZlX2RiKG5hbWVidWYpOwogCQkKLQlkdXBsaWNhdGVfbWFyayht
c2dkYXRhLT5tLT5pZCwgc3RybGVuKG1zZ2RhdGEtPm0tPmlkKSwgCi0JCSAgICAgICBzZGIsIHN0
cmxlbihzZGIpLCB0aW1lKE5VTEwpLCAwKTsKKwlka2V5LmlkID0gbXNnZGF0YS0+bS0+aWQ7CisJ
ZGtleS50byA9IHNkYjsKKwlka2V5LmRhdGUgPSBtc2dkYXRhLT5tLT5kYXRlOworCWR1cGxpY2F0
ZV9tYXJrKCZka2V5LCB0aW1lKE5VTEwpLCAwKTsKICAgICB9CiAJCQogICAgIC8qIGZyZWUgZXZl
cnl0aGluZyAqLwpkaWZmIC0tZ2l0IGEvZGF0YXN0b3JlL2Rldi9ycG1idWlsZC9CVUlMRC9jeXJ1
cy1pbWFwZC0yLjQuMTAvaW1hcC9sbXRwZC5jIGIvR0lUL1RFTVAvY3lydXMtaW1hcGQtMi40LjEw
L2ltYXAvbG10cGQuYwppbmRleCBlZDM0YzdjLi5jYTM1MzMxIDEwMDY0NAotLS0gYS9kYXRhc3Rv
cmUvZGV2L3JwbWJ1aWxkL0JVSUxEL2N5cnVzLWltYXBkLTIuNC4xMC9pbWFwL2xtdHBkLmMKKysr
IGIvR0lUL1RFTVAvY3lydXMtaW1hcGQtMi40LjEwL2ltYXAvbG10cGQuYwpAQCAtNDk2LDYgKzQ5
Niw3IEBAIGludCBkZWxpdmVyX21haWxib3goRklMRSAqZiwKIAkJICAgIGNvbnN0IGNoYXIgKnVz
ZXIsCiAJCSAgICBjaGFyICpub3RpZnloZWFkZXIsCiAJCSAgICBjb25zdCBjaGFyICptYWlsYm94
bmFtZSwKKwkJICAgIGNoYXIgKmRhdGUsCiAJCSAgICBpbnQgcXVvdGFvdmVycmlkZSwKIAkJICAg
IGludCBhY2xvdmVycmlkZSkKIHsKQEAgLTUwMyw2ICs1MDQsNyBAQCBpbnQgZGVsaXZlcl9tYWls
Ym94KEZJTEUgKmYsCiAgICAgc3RydWN0IGFwcGVuZHN0YXRlIGFzOwogICAgIHVuc2lnbmVkIGxv
bmcgdWlkOwogICAgIGNvbnN0IGNoYXIgKm5vdGlmaWVyOworICAgIGR1cGxpY2F0ZV9rZXlfdCBk
a2V5ID0ge05VTEwsIE5VTEwsIE5VTEx9OwogCiAgICAgciA9IGFwcGVuZF9zZXR1cCgmYXMsIG1h
aWxib3huYW1lLAogCQkgICAgIGF1dGh1c2VyLCBhdXRoc3RhdGUsIGFjbG92ZXJyaWRlID8gMCA6
IEFDTF9QT1NULCAKQEAgLTUxMSw5ICs1MTMsMTIgQEAgaW50IGRlbGl2ZXJfbWFpbGJveChGSUxF
ICpmLAogCQkgICAgIChsb25nKSBzaXplIDogMCk7CiAKICAgICAvKiBjaGVjayBmb3IgZHVwbGlj
YXRlIG1lc3NhZ2UgKi8KKyAgICBka2V5LmlkID0gaWQ7CisgICAgZGtleS50byA9IG1haWxib3hu
YW1lOworICAgIGRrZXkuZGF0ZSA9IGRhdGU7CiAgICAgaWYgKCFyICYmIGlkICYmIGR1cGVsaW0g
JiYgIShhcy5tYWlsYm94LT5pLm9wdGlvbnMgJiBPUFRfSU1BUF9EVVBERUxJVkVSKSAmJgotCWR1
cGxpY2F0ZV9jaGVjayhpZCwgc3RybGVuKGlkKSwgbWFpbGJveG5hbWUsIHN0cmxlbihtYWlsYm94
bmFtZSkpKSB7Ci0JZHVwbGljYXRlX2xvZyhpZCwgbWFpbGJveG5hbWUsICJkZWxpdmVyeSIpOwor
CWR1cGxpY2F0ZV9jaGVjaygmZGtleSkpIHsKKwlkdXBsaWNhdGVfbG9nKCZka2V5LCAiZGVsaXZl
cnkiKTsKIAlhcHBlbmRfYWJvcnQoJmFzKTsKIAlyZXR1cm4gMDsKICAgICB9CkBAIC01MzksOCAr
NTQ0LDcgQEAgaW50IGRlbGl2ZXJfbWFpbGJveChGSUxFICpmLAogCQlzeXNsb2coTE9HX0lORk8s
ICJEZWxpdmVyZWQ6ICVzIHRvIG1haWxib3g6ICVzIiwKIAkJICAgICAgIGlkLCBtYWlsYm94bmFt
ZSk7CiAJCWlmIChkdXBlbGltICYmIGlkKSB7Ci0JCSAgICBkdXBsaWNhdGVfbWFyayhpZCwgc3Ry
bGVuKGlkKSwgbWFpbGJveG5hbWUsIAotCQkJCSAgIHN0cmxlbihtYWlsYm94bmFtZSksIHRpbWUo
TlVMTCksIHVpZCk7CisJCSAgICBkdXBsaWNhdGVfbWFyaygmZGtleSwgdGltZShOVUxMKSwgdWlk
KTsKIAkJfQogCQltYWlsYm94X2Nsb3NlKCZtYWlsYm94KTsKIAkgICAgfQpAQCAtNjkwLDcgKzY5
NCw3IEBAIGludCBkZWxpdmVyX2xvY2FsKGRlbGl2ZXJfZGF0YV90ICpteWRhdGEsIGNoYXIgKipm
bGFnLCBpbnQgbmZsYWdzLAogCQkJICAgICAgIG1kLT5zaXplLCBmbGFnLCBuZmxhZ3MsCiAJCQkg
ICAgICAgbXlkYXRhLT5hdXRodXNlciwgbXlkYXRhLT5hdXRoc3RhdGUsIG1kLT5pZCwKIAkJCSAg
ICAgICBOVUxMLCBteWRhdGEtPm5vdGlmeWhlYWRlciwKLQkJCSAgICAgICBuYW1lYnVmLCBxdW90
YW92ZXJyaWRlLCAwKTsKKwkJCSAgICAgICBuYW1lYnVmLCBtZC0+ZGF0ZSwgcXVvdGFvdmVycmlk
ZSwgMCk7CiAgICAgfQogCiAgICAgLyogY2FzZSAyOiBvcmRpbmFyeSB1c2VyICovCkBAIC03MTAs
NyArNzE0LDcgQEAgaW50IGRlbGl2ZXJfbG9jYWwoZGVsaXZlcl9kYXRhX3QgKm15ZGF0YSwgY2hh
ciAqKmZsYWcsIGludCBuZmxhZ3MsCiAJCQkJICAgbWQtPnNpemUsIGZsYWcsIG5mbGFncywKIAkJ
CQkgICBteWRhdGEtPmF1dGh1c2VyLCBteWRhdGEtPmF1dGhzdGF0ZSwgbWQtPmlkLAogCQkJCSAg
IHVzZXJuYW1lLCBteWRhdGEtPm5vdGlmeWhlYWRlciwKLQkJCQkgICBuYW1lYnVmLCBxdW90YW92
ZXJyaWRlLCAwKTsKKwkJCQkgICBuYW1lYnVmLCBtZC0+ZGF0ZSwgcXVvdGFvdmVycmlkZSwgMCk7
CiAJfQogCWlmIChyZXQyID09IElNQVBfTUFJTEJPWF9OT05FWElTVEVOVCAmJiBtYWlsYm94bmFt
ZSAmJgogCSAgICBjb25maWdfZ2V0c3dpdGNoKElNQVBPUFRfTE1UUF9GVVpaWV9NQUlMQk9YX01B
VENIKSAmJgpAQCAtNzIwLDcgKzcyNCw3IEBAIGludCBkZWxpdmVyX2xvY2FsKGRlbGl2ZXJfZGF0
YV90ICpteWRhdGEsIGNoYXIgKipmbGFnLCBpbnQgbmZsYWdzLAogCQkJCSAgIG1kLT5zaXplLCBm
bGFnLCBuZmxhZ3MsCiAJCQkJICAgbXlkYXRhLT5hdXRodXNlciwgbXlkYXRhLT5hdXRoc3RhdGUs
IG1kLT5pZCwKIAkJCQkgICB1c2VybmFtZSwgbXlkYXRhLT5ub3RpZnloZWFkZXIsCi0JCQkJICAg
bmFtZWJ1ZiwgcXVvdGFvdmVycmlkZSwgMCk7CisJCQkJICAgbmFtZWJ1ZiwgbWQtPmRhdGUsIHF1
b3Rhb3ZlcnJpZGUsIDApOwogCX0KIAlpZiAocmV0MikgewogCSAgICAvKiBub3JtYWwgZGVsaXZl
cnkgdG8gSU5CT1ggKi8KQEAgLTczMiw3ICs3MzYsNyBAQCBpbnQgZGVsaXZlcl9sb2NhbChkZWxp
dmVyX2RhdGFfdCAqbXlkYXRhLCBjaGFyICoqZmxhZywgaW50IG5mbGFncywKIAkJCQkgIG1kLT5z
aXplLCBmbGFnLCBuZmxhZ3MsCiAJCQkJICAoY2hhciAqKSB1c2VybmFtZSwgYXV0aHN0YXRlLCBt
ZC0+aWQsCiAJCQkJICB1c2VybmFtZSwgbXlkYXRhLT5ub3RpZnloZWFkZXIsCi0JCQkJICBuYW1l
YnVmLCBxdW90YW92ZXJyaWRlLCAxKTsKKwkJCQkgIG5hbWVidWYsIG1kLT5kYXRlLCBxdW90YW92
ZXJyaWRlLCAxKTsKIAogCSAgICBpZiAoYXV0aHN0YXRlKSBhdXRoX2ZyZWVzdGF0ZShhdXRoc3Rh
dGUpOwogCX0KZGlmZiAtLWdpdCBhL2RhdGFzdG9yZS9kZXYvcnBtYnVpbGQvQlVJTEQvY3lydXMt
aW1hcGQtMi40LjEwL2ltYXAvbG10cGQuaCBiL0dJVC9URU1QL2N5cnVzLWltYXBkLTIuNC4xMC9p
bWFwL2xtdHBkLmgKaW5kZXggZDg2NTc3Ny4uNzU2MWE1YSAxMDA2NDQKLS0tIGEvZGF0YXN0b3Jl
L2Rldi9ycG1idWlsZC9CVUlMRC9jeXJ1cy1pbWFwZC0yLjQuMTAvaW1hcC9sbXRwZC5oCisrKyBi
L0dJVC9URU1QL2N5cnVzLWltYXBkLTIuNC4xMC9pbWFwL2xtdHBkLmgKQEAgLTg5LDYgKzg5LDcg
QEAgZXh0ZXJuIGludCBkZWxpdmVyX21haWxib3goRklMRSAqZiwKIAkJCSAgIGNvbnN0IGNoYXIg
KnVzZXIsCiAJCQkgICBjaGFyICpub3RpZnloZWFkZXIsCiAJCQkgICBjb25zdCBjaGFyICptYWls
Ym94bmFtZSwKKwkJCSAgIGNoYXIgKmRhdGUsCiAJCQkgICBpbnQgcXVvdGFvdmVycmlkZSwKIAkJ
CSAgIGludCBhY2xvdmVycmlkZSk7CiAKZGlmZiAtLWdpdCBhL2RhdGFzdG9yZS9kZXYvcnBtYnVp
bGQvQlVJTEQvY3lydXMtaW1hcGQtMi40LjEwL2ltYXAvbG10cGVuZ2luZS5jIGIvR0lUL1RFTVAv
Y3lydXMtaW1hcGQtMi40LjEwL2ltYXAvbG10cGVuZ2luZS5jCmluZGV4IDMwMDVlZDYuLmYwMzU3
YmUgMTAwNjQ0Ci0tLSBhL2RhdGFzdG9yZS9kZXYvcnBtYnVpbGQvQlVJTEQvY3lydXMtaW1hcGQt
Mi40LjEwL2ltYXAvbG10cGVuZ2luZS5jCisrKyBiL0dJVC9URU1QL2N5cnVzLWltYXBkLTIuNC4x
MC9pbWFwL2xtdHBlbmdpbmUuYwpAQCAtMjgyLDYgKzI4Miw3IEBAIGludCBtc2dfbmV3KG1lc3Nh
Z2VfZGF0YV90ICoqbSkKICAgICByZXQtPnJldHVybl9wYXRoID0gTlVMTDsKICAgICByZXQtPnJj
cHQgPSBOVUxMOwogICAgIHJldC0+cmNwdF9udW0gPSAwOworICAgIHJldC0+ZGF0ZSA9IE5VTEw7
CiAKICAgICByZXQtPmF1dGh1c2VyID0gTlVMTDsKICAgICByZXQtPmF1dGhzdGF0ZSA9IE5VTEw7
CkBAIC0zMTksNiArMzIwLDkgQEAgdm9pZCBtc2dfZnJlZShtZXNzYWdlX2RhdGFfdCAqbSkKIAl9
CiAJZnJlZShtLT5yY3B0KTsKICAgICB9CisgICAgaWYgKG0tPmRhdGUpIHsKKyAgICAgIGZyZWUo
bS0+ZGF0ZSk7CisgICAgIH0KIAogICAgIGlmIChtLT5hdXRodXNlcikgewogCWZyZWUobS0+YXV0
aHVzZXIpOwpAQCAtNzQxLDEyICs3NDUsMTYgQEAgc3RhdGljIGludCBzYXZlbXNnKHN0cnVjdCBj
bGllbnRkYXRhICpjZCwKICAgICB9CiAKICAgICAvKiBnZXQgZGF0ZSAqLwotICAgIGlmICghc3Bv
b2xfZ2V0aGVhZGVyKG0tPmhkcmNhY2hlLCAiZGF0ZSIpKSB7CisgICAgaWYgKCEoYm9keSA9IHNw
b29sX2dldGhlYWRlcihtLT5oZHJjYWNoZSwgImRhdGUiKSkpIHsKIAkvKiBubyBkYXRlLCBjcmVh
dGUgb25lICovCiAJYWRkYm9keSA9IHhzdHJkdXAoZGF0ZXN0cik7CisJbS0+ZGF0ZSA9IHhzdHJk
dXAoZGF0ZXN0cik7CiAJZnByaW50ZihmLCAiRGF0ZTogJXNcclxuIiwgYWRkYm9keSk7CiAJc3Bv
b2xfY2FjaGVfaGVhZGVyKHhzdHJkdXAoIkRhdGUiKSwgYWRkYm9keSwgbS0+aGRyY2FjaGUpOwog
ICAgIH0KKyAgICBlbHNlIHsKKwltLT5kYXRlID0geHN0cmR1cChib2R5WzBdKTsKKyAgICB9CiAK
ICAgICBpZiAoIW0tPnJldHVybl9wYXRoICYmCiAJKGJvZHkgPSBtc2dfZ2V0aGVhZGVyKG0sICJy
ZXR1cm4tcGF0aCIpKSkgewpkaWZmIC0tZ2l0IGEvZGF0YXN0b3JlL2Rldi9ycG1idWlsZC9CVUlM
RC9jeXJ1cy1pbWFwZC0yLjQuMTAvaW1hcC9sbXRwZW5naW5lLmggYi9HSVQvVEVNUC9jeXJ1cy1p
bWFwZC0yLjQuMTAvaW1hcC9sbXRwZW5naW5lLmgKaW5kZXggYzM1ODVkYS4uMTZiNmJjMyAxMDA2
NDQKLS0tIGEvZGF0YXN0b3JlL2Rldi9ycG1idWlsZC9CVUlMRC9jeXJ1cy1pbWFwZC0yLjQuMTAv
aW1hcC9sbXRwZW5naW5lLmgKKysrIGIvR0lUL1RFTVAvY3lydXMtaW1hcGQtMi40LjEwL2ltYXAv
bG10cGVuZ2luZS5oCkBAIC02NSw2ICs2NSw3IEBAIHN0cnVjdCBtZXNzYWdlX2RhdGEgewogICAg
IGNoYXIgKnJldHVybl9wYXRoOwkJLyogd2hlcmUgdG8gcmV0dXJuIG1lc3NhZ2UgKi8KICAgICBh
ZGRyZXNzX2RhdGFfdCAqKnJjcHQ7CS8qIHRvIHJlY2lwaWVudHMgb2YgdGhpcyBtZXNzYWdlICov
CiAgICAgaW50IHJjcHRfbnVtOwkJLyogbnVtYmVyIG9mIHJlY2lwaWVudHMgKi8KKyAgICBjaGFy
ICpkYXRlOyAJCS8qIGRhdGUgZmllbGQgb2YgaGVhZGVyICovCiAKICAgICAvKiBhdXRoIHN0YXRl
ICovCiAgICAgY2hhciAqYXV0aHVzZXI7CmRpZmYgLS1naXQgYS9kYXRhc3RvcmUvZGV2L3JwbWJ1
aWxkL0JVSUxEL2N5cnVzLWltYXBkLTIuNC4xMC9pbWFwL25udHBkLmMgYi9HSVQvVEVNUC9jeXJ1
cy1pbWFwZC0yLjQuMTAvaW1hcC9ubnRwZC5jCmluZGV4IDlmNjQzMWQuLmY3NDk0NDkgMTAwNjQ0
Ci0tLSBhL2RhdGFzdG9yZS9kZXYvcnBtYnVpbGQvQlVJTEQvY3lydXMtaW1hcGQtMi40LjEwL2lt
YXAvbm50cGQuYworKysgYi9HSVQvVEVNUC9jeXJ1cy1pbWFwZC0yLjQuMTAvaW1hcC9ubnRwZC5j
CkBAIC0yODc0LDYgKzI4NzQsNyBAQCBzdHJ1Y3QgbWVzc2FnZV9kYXRhIHsKIAogICAgIGNoYXIg
KipyY3B0OwkJLyogbWFpbGJveGVzIHRvIHBvc3QgbWVzc2FnZSAqLwogICAgIGludCByY3B0X251
bTsJCS8qIG51bWJlciBvZiBncm91cHMgKi8KKyAgICBjaGFyICpkYXRlOwkJLyogZGF0ZSBmaWVs
ZCBvZiBoZWFkZXIgKi8gCiAKICAgICBoZHJjYWNoZV90IGhkcmNhY2hlOwogfTsKQEAgLTI4OTEs
NiArMjg5Miw3IEBAIGludCBtc2dfbmV3KG1lc3NhZ2VfZGF0YV90ICoqbSkKICAgICByZXQtPnNp
emUgPSAwOwogICAgIHJldC0+cmNwdCA9IE5VTEw7CiAgICAgcmV0LT5yY3B0X251bSA9IDA7Cisg
ICAgcmV0LT5kYXRlID0gTlVMTDsKIAogICAgIHJldC0+aGRyY2FjaGUgPSBzcG9vbF9uZXdfaGRy
Y2FjaGUoKTsKIApAQCAtMjkyNCw2ICsyOTI2LDkgQEAgdm9pZCBtc2dfZnJlZShtZXNzYWdlX2Rh
dGFfdCAqbSkKIAl9CiAJZnJlZShtLT5yY3B0KTsKICAgICB9CisgICAgaWYgKG0tPmRhdGUpIHsK
KwlmcmVlKG0tPmRhdGUpOworICAgIH0KIAogICAgIHNwb29sX2ZyZWVfaGRyY2FjaGUobS0+aGRy
Y2FjaGUpOwogCkBAIC0zMDQ3LDkgKzMwNTIsMTMgQEAgc3RhdGljIGludCBzYXZlbXNnKG1lc3Nh
Z2VfZGF0YV90ICptLCBGSUxFICpmKQogCWNoYXIgZGF0ZXN0cls4MF07CiAKIAlyZmM4MjJkYXRl
X2dlbihkYXRlc3RyLCBzaXplb2YoZGF0ZXN0ciksIG5vdyk7CisJbS0+ZGF0ZSA9IHhzdHJkdXAo
ZGF0ZXN0cik7CiAJZnByaW50ZihmLCAiRGF0ZTogJXNcclxuIiwgZGF0ZXN0cik7CiAJc3Bvb2xf
Y2FjaGVfaGVhZGVyKHhzdHJkdXAoIkRhdGUiKSwgeHN0cmR1cChkYXRlc3RyKSwgbS0+aGRyY2Fj
aGUpOwogICAgIH0KKyAgICBlbHNlIHsKKwltLT5kYXRlID0geHN0cmR1cChib2R5WzBdKTsKKyAg
ICB9CiAKICAgICAvKiBnZXQgY29udHJvbCAqLwogICAgIGlmICgoYm9keSA9IHNwb29sX2dldGhl
YWRlcihtLT5oZHJjYWNoZSwgImNvbnRyb2wiKSkgIT0gTlVMTCkgewpAQCAtMzI3OSw2ICszMjg4
LDcgQEAgc3RhdGljIGludCBkZWxpdmVyKG1lc3NhZ2VfZGF0YV90ICptc2cpCiAgICAgdW5zaWdu
ZWQgbG9uZyB1aWQ7CiAgICAgc3RydWN0IGJvZHkgKmJvZHkgPSBOVUxMOwogICAgIHN0cnVjdCBk
ZXN0ICpkbGlzdCA9IE5VTEw7CisgICAgZHVwbGljYXRlX2tleV90IGRrZXkgPSB7bXNnLT5pZCwg
TlVMTCwgbXNnLT5kYXRlfTsKIAogICAgIC8qIGNoZWNrIEFDTHMgb2YgYWxsIG1haWxib3hlcyAq
LwogICAgIGZvciAobiA9IDA7IG4gPCBtc2ctPnJjcHRfbnVtOyBuKyspIHsKQEAgLTMyODYsNiAr
MzI5Niw3IEBAIHN0YXRpYyBpbnQgZGVsaXZlcihtZXNzYWdlX2RhdGFfdCAqbXNnKQogCiAJLyog
bG9vayBpdCB1cCAqLwogCXIgPSBtbG9va3VwKHJjcHQsICZzZXJ2ZXIsICZhY2wsIE5VTEwpOwor
CWRrZXkudG8gPSByY3B0OwogCWlmIChyKSByZXR1cm4gSU1BUF9NQUlMQk9YX05PTkVYSVNURU5U
OwogCiAJaWYgKCEoYWNsICYmIChteXJpZ2h0cyA9IGN5cnVzX2FjbF9teXJpZ2h0cyhubnRwX2F1
dGhzdGF0ZSwgYWNsKSkgJiYKQEAgLTMzMDEsOSArMzMxMiw5IEBAIHN0YXRpYyBpbnQgZGVsaXZl
cihtZXNzYWdlX2RhdGFfdCAqbXNnKQogCSAgICBzdHJ1Y3QgYXBwZW5kc3RhdGUgYXM7CiAKIAkg
ICAgaWYgKG1zZy0+aWQgJiYgCi0JCWR1cGxpY2F0ZV9jaGVjayhtc2ctPmlkLCBzdHJsZW4obXNn
LT5pZCksIHJjcHQsIHN0cmxlbihyY3B0KSkpIHsKKwkJZHVwbGljYXRlX2NoZWNrKCZka2V5KSkg
ewogCQkvKiBkdXBsaWNhdGUgbWVzc2FnZSAqLwotCQlkdXBsaWNhdGVfbG9nKG1zZy0+aWQsIHJj
cHQsICJubnRwIGRlbGl2ZXJ5Iik7CisJCWR1cGxpY2F0ZV9sb2coJmRrZXksICJubnRwIGRlbGl2
ZXJ5Iik7CiAJCWNvbnRpbnVlOwogCSAgICB9CiAKQEAgLTMzMTksMTQgKzMzMzAsMTIgQEAgc3Rh
dGljIGludCBkZWxpdmVyKG1lc3NhZ2VfZGF0YV90ICptc2cpCiAJCSAgICByID0gYXBwZW5kX2Zy
b21zdHJlYW0oJmFzLCAmYm9keSwgbXNnLT5kYXRhLCBtc2ctPnNpemUsIDAsCiAJCQkJCSAgKGNv
bnN0IGNoYXIgKiopIE5VTEwsIDApOwogCQl9Ci0JCWlmIChyIHx8IChtc2ctPmlkICYmICAgCi0J
CQkgIGR1cGxpY2F0ZV9jaGVjayhtc2ctPmlkLCBzdHJsZW4obXNnLT5pZCksCi0JCQkJCSAgcmNw
dCwgc3RybGVuKHJjcHQpKSkpIHsgIAorCQlpZiAociB8fCAoIG1zZy0+aWQgJiYgZHVwbGljYXRl
X2NoZWNrKCZka2V5KSApICkgeyAgICAKIAkJICAgIGFwcGVuZF9hYm9ydCgmYXMpOwogICAgICAg
ICAgICAgICAgICAgIAogCQkgICAgaWYgKCFyKSB7CiAJCQkvKiBkdXBsaWNhdGUgbWVzc2FnZSAq
LwotCQkJZHVwbGljYXRlX2xvZyhtc2ctPmlkLCByY3B0LCAibm50cCBkZWxpdmVyeSIpOworCQkJ
ZHVwbGljYXRlX2xvZygmZGtleSwgIm5udHAgZGVsaXZlcnkiKTsKIAkJCWNvbnRpbnVlOwogCQkg
ICAgfSAgICAgICAgICAgIAogCQl9ICAgICAgICAgICAgICAgIApAQCAtMzMzNiw4ICszMzQ1LDcg
QEAgc3RhdGljIGludCBkZWxpdmVyKG1lc3NhZ2VfZGF0YV90ICptc2cpCiAJICAgIH0KIAogCSAg
ICBpZiAoIXIgJiYgbXNnLT5pZCkKLQkJZHVwbGljYXRlX21hcmsobXNnLT5pZCwgc3RybGVuKG1z
Zy0+aWQpLCByY3B0LCBzdHJsZW4ocmNwdCksCi0JCQkgICAgICAgdGltZShOVUxMKSwgdWlkKTsK
KwkJZHVwbGljYXRlX21hcmsoJmRrZXksIHRpbWUoTlVMTCksIHVpZCk7CiAKIAkgICAgaWYgKHIp
IHJldHVybiByOwogCkBAIC0zNTA5LDcgKzM1MTcsOCBAQCBzdGF0aWMgaW50IGNhbmNlbChtZXNz
YWdlX2RhdGFfdCAqbXNnKQogICAgIC8qIHN0b3JlIG1zZ2lkIG9mIGNhbmNlbGxlZCBtZXNzYWdl
IGZvciBJSEFWRS9DSEVDSy9UQUtFVEhJUwogICAgICAqIChpbiBjYXNlIHdlIGhhdmVuJ3QgcmVj
ZWl2ZWQgdGhlIG1lc3NhZ2UgeWV0KQogICAgICAqLwotICAgIGR1cGxpY2F0ZV9tYXJrKG1zZ2lk
LCBzdHJsZW4obXNnaWQpLCAiIiwgMCwgMCwgdGltZShOVUxMKSk7CisgICAgZHVwbGljYXRlX2tl
eV90IGRrZXkgPSB7bXNnaWQsICIiLCAiIn07CisgICAgZHVwbGljYXRlX21hcmsoJmRrZXksIDAs
IHRpbWUoTlVMTCkpOwogCiAgICAgcmV0dXJuIHI7CiB9Cg==
</data>        

          </attachment>
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1414</attachid>
            <date>2011-08-11 07:26 EDT</date>
            <desc>Patch for improved duplicate suppression (version 2). </desc>
            <filename>cyrus-imapd-2.4.10-duplicate-suppression-v2.patch</filename>
            <type>text/plain</type>
            <size>19276</size>
            <attacher>kristof.katus@gmail.com</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL0dJVC9URU1QL2N5cnVzLWltYXBkLTIuNC4xMC1vcmkvaW1hcC9kdXBsaWNh
dGUuYyBiL0dJVC9URU1QL2N5cnVzLWltYXBkLTIuNC4xMC9pbWFwL2R1cGxpY2F0ZS5jCmluZGV4
IDNhNzJjNDMuLjgyMmEyOTEgMTAwNjQ0Ci0tLSBhL0dJVC9URU1QL2N5cnVzLWltYXBkLTIuNC4x
MC1vcmkvaW1hcC9kdXBsaWNhdGUuYworKysgYi9HSVQvVEVNUC9jeXJ1cy1pbWFwZC0yLjQuMTAv
aW1hcC9kdXBsaWNhdGUuYwpAQCAtMTIxLDkgKzEyMSwxMiBAQCBpbnQgZHVwbGljYXRlX2luaXQo
Y29uc3QgY2hhciAqZm5hbWUsIGludCBteWZsYWdzIF9fYXR0cmlidXRlX18oKHVudXNlZCkpKQog
ICAgIHJldHVybiByOwogfQogCi10aW1lX3QgZHVwbGljYXRlX2NoZWNrKGNoYXIgKmlkLCBpbnQg
aWRsZW4sIGNvbnN0IGNoYXIgKnRvLCBpbnQgdG9sZW4pCit0aW1lX3QgZHVwbGljYXRlX2NoZWNr
KGR1cGxpY2F0ZV9rZXlfdCAqZGtleSkKIHsKICAgICBjaGFyIGJ1ZlsxMDI0XTsKKyAgICBpbnQg
aWRsZW4gPSBzdHJsZW4oZGtleS0+aWQpOworICAgIGludCB0b2xlbiA9IHN0cmxlbihka2V5LT50
byk7CisgICAgaW50IGRhdGVsZW4gPSBzdHJsZW4oZGtleS0+ZGF0ZSk7IAogICAgIGludCByOwog
ICAgIGNvbnN0IGNoYXIgKmRhdGEgPSBOVUxMOwogICAgIGludCBsZW4gPSAwOwpAQCAtMTMxLDE2
ICsxMzQsMTggQEAgdGltZV90IGR1cGxpY2F0ZV9jaGVjayhjaGFyICppZCwgaW50IGlkbGVuLCBj
b25zdCBjaGFyICp0bywgaW50IHRvbGVuKQogCiAgICAgaWYgKCFkdXBsaWNhdGVfZGJvcGVuKSBy
ZXR1cm4gMDsKIAotICAgIGlmIChpZGxlbiArIHRvbGVuID4gKGludCkgc2l6ZW9mKGJ1ZikgLSAz
MCkgcmV0dXJuIDA7Ci0gICAgbWVtY3B5KGJ1ZiwgaWQsIGlkbGVuKTsKKyAgICBpZiAoaWRsZW4g
KyB0b2xlbiArIGRhdGVsZW4gPiAoaW50KSBzaXplb2YoYnVmKSAtIDMwKSByZXR1cm4gMDsKKyAg
ICBtZW1jcHkoYnVmLCBka2V5LT5pZCwgaWRsZW4pOwogICAgIGJ1ZltpZGxlbl0gPSAnXDAnOwot
ICAgIG1lbWNweShidWYgKyBpZGxlbiArIDEsIHRvLCB0b2xlbik7CisgICAgbWVtY3B5KGJ1ZiAr
IGlkbGVuICsgMSwgZGtleS0+dG8sIHRvbGVuKTsKICAgICBidWZbaWRsZW4gKyB0b2xlbiArIDFd
ID0gJ1wwJzsKKyAgICBhc3NlcnQoZGtleS0+ZGF0ZSAhPSBOVUxMKTsKKyAgICBtZW1jcHkoYnVm
ICsgaWRsZW4gKyB0b2xlbiArIDIsIGRrZXktPmRhdGUsIGRhdGVsZW4pOworICAgIGJ1ZltpZGxl
biArIHRvbGVuICsgZGF0ZWxlbiArIDJdID0gJ1wwJzsKIAogICAgIGRvIHsKIAlyID0gREItPmZl
dGNoKGR1cGRiLCBidWYsCi0JCSAgICAgIGlkbGVuICsgdG9sZW4gKyAyLCAvKiArMiBiL2MgMSBm
b3IgdGhlIGNlbnRlciBudWxsOwotCQkJCQkgICAgKzEgZm9yIHRoZSB0ZXJtaW5hdGluZyBudWxs
ICovCisJCSAgICAgIGlkbGVuICsgdG9sZW4gKyBkYXRlbGVuICsgMywgLyogV2UgaGF2ZSB0aHJl
ZSBjb25jYXRlbmF0ZWQgdmFsdWVzIG5vdywgYWxsIHBhcnRzIGVuZGluZyB3aXRoICdcMCcgKi8K
IAkJICAgICAgJmRhdGEsICZsZW4sIE5VTEwpOwogICAgIH0gd2hpbGUgKHIgPT0gQ1lSVVNEQl9B
R0FJTik7CiAKQEAgLTE1Miw1NCArMTU3LDU5IEBAIHRpbWVfdCBkdXBsaWNhdGVfY2hlY2soY2hh
ciAqaWQsIGludCBpZGxlbiwgY29uc3QgY2hhciAqdG8sIGludCB0b2xlbikKIAltZW1jcHkoJm1h
cmssIGRhdGEsIHNpemVvZih0aW1lX3QpKTsKICAgICB9IGVsc2UgaWYgKHIgIT0gQ1lSVVNEQl9P
SykgewogCWlmIChyICE9IENZUlVTREJfTk9URk9VTkQpIHsKLQkgICAgc3lzbG9nKExPR19FUlIs
ICJkdXBsaWNhdGVfY2hlY2s6IGVycm9yIGxvb2tpbmcgdXAgJXMvJXM6ICVzIiwKLQkJICAgaWQs
IHRvLAotCQkgICBjeXJ1c2RiX3N0cmVycm9yKHIpKTsKKwkgICAgc3lzbG9nKExPR19FUlIsICJk
dXBsaWNhdGVfY2hlY2s6IGVycm9yIGxvb2tpbmcgdXAgJXMvJXMvJXM6ICVzIiwKKwkJICAgZGtl
eS0+aWQsIGRrZXktPnRvLCBka2V5LT5kYXRlLCAKKwkJICAgY3lydXNkYl9zdHJlcnJvcihyKSk7
IAogCX0KIAltYXJrID0gMDsKICAgICB9CiAKLSAgICBzeXNsb2coTE9HX0RFQlVHLCAiZHVwbGlj
YXRlX2NoZWNrOiAlLTQwcyAlLTIwcyAlbGQiLAotCSAgIGJ1ZiwgYnVmK2lkbGVuKzEsIG1hcmsp
OworICAgIHN5c2xvZyhMT0dfREVCVUcsICJkdXBsaWNhdGVfY2hlY2s6ICUtNDBzICUtMjBzICUt
NDBzICVsZCIsCisJICAgYnVmLCBidWYraWRsZW4rMSwgYnVmK2lkbGVuK3RvbGVuKzIsIG1hcmsp
OyAKIAogICAgIHJldHVybiBtYXJrOwogfQogCi12b2lkIGR1cGxpY2F0ZV9sb2coY2hhciAqbXNn
aWQsIGNvbnN0IGNoYXIgKm5hbWUsIGNoYXIgKmFjdGlvbikKK3ZvaWQgZHVwbGljYXRlX2xvZyhk
dXBsaWNhdGVfa2V5X3QgKmRrZXksIGNoYXIgKmFjdGlvbikgCiB7Ci0gICAgc3lzbG9nKExPR19J
TkZPLCAiZHVwZWxpbTogZWxpbWluYXRlZCBkdXBsaWNhdGUgbWVzc2FnZSB0byAlcyBpZCAlcyAo
JXMpIiwKLQkgICBuYW1lLCBtc2dpZCwgYWN0aW9uKTsKKyAgICBhc3NlcnQoZGtleS0+ZGF0ZSAh
PSBOVUxMKTsKKyAgICBzeXNsb2coTE9HX0lORk8sICJkdXBlbGltOiBlbGltaW5hdGVkIGR1cGxp
Y2F0ZSBtZXNzYWdlIHRvICVzIGlkICVzIGRhdGUgJXMgKCVzKSIsCisgICAgICBka2V5LT50bywg
ZGtleS0+aWQsIGRrZXktPmRhdGUsIGFjdGlvbik7ICAgIAogICAgIGlmIChjb25maWdfYXVkaXRs
b2cpCi0Jc3lzbG9nKExPR19OT1RJQ0UsICJhdWRpdGxvZzogZHVwbGljYXRlIHNlc3Npb25pZD08
JXM+IGFjdGlvbj08JXM+IG1lc3NhZ2UtaWQ9JXMgdXNlcj08JXM+IiwKLQkgICAgICAgc2Vzc2lv
bl9pZCgpLCBhY3Rpb24sIG1zZ2lkLCBuYW1lKTsgCisJc3lzbG9nKExPR19OT1RJQ0UsICJhdWRp
dGxvZzogZHVwbGljYXRlIHNlc3Npb25pZD08JXM+IGFjdGlvbj08JXM+IG1lc3NhZ2UtaWQ9JXMg
dXNlcj08JXM+IGRhdGU9PCVzPiIsCisJICAgICAgIHNlc3Npb25faWQoKSwgYWN0aW9uLCBka2V5
LT5pZCwgZGtleS0+dG8sIGRrZXktPmRhdGUpOyAKIH0KIAotdm9pZCBkdXBsaWNhdGVfbWFyayhj
aGFyICppZCwgaW50IGlkbGVuLCBjb25zdCBjaGFyICp0bywgaW50IHRvbGVuLCB0aW1lX3QgbWFy
aywKLQkJICAgIHVuc2lnbmVkIGxvbmcgdWlkKQordm9pZCBkdXBsaWNhdGVfbWFyayhkdXBsaWNh
dGVfa2V5X3QgKmRrZXksIHRpbWVfdCBtYXJrLCB1bnNpZ25lZCBsb25nIHVpZCkKIHsKICAgICBj
aGFyIGJ1ZlsxMDI0XSwgZGF0YVsxMDBdOworICAgIGludCBpZGxlbiA9IHN0cmxlbihka2V5LT5p
ZCk7CisgICAgaW50IHRvbGVuID0gc3RybGVuKGRrZXktPnRvKTsKKyAgICBpbnQgZGF0ZWxlbiA9
IHN0cmxlbihka2V5LT5kYXRlKTsgCiAgICAgaW50IHI7CiAKICAgICBpZiAoIWR1cGxpY2F0ZV9k
Ym9wZW4pIHJldHVybjsKIAotICAgIGlmIChpZGxlbiArIHRvbGVuID4gKGludCkgc2l6ZW9mKGJ1
ZikgLSAzMCkgcmV0dXJuOwotICAgIG1lbWNweShidWYsIGlkLCBpZGxlbik7CisgICAgaWYgKGlk
bGVuICsgdG9sZW4gKyBkYXRlbGVuID4gKGludCkgc2l6ZW9mKGJ1ZikgLSAzMCkgcmV0dXJuOyAK
KyAgICBtZW1jcHkoYnVmLCBka2V5LT5pZCwgaWRsZW4pOwogICAgIGJ1ZltpZGxlbl0gPSAnXDAn
OwotICAgIG1lbWNweShidWYgKyBpZGxlbiArIDEsIHRvLCB0b2xlbik7CisgICAgbWVtY3B5KGJ1
ZiArIGlkbGVuICsgMSwgZGtleS0+dG8sIHRvbGVuKTsKICAgICBidWZbaWRsZW4gKyB0b2xlbiAr
IDFdID0gJ1wwJzsKKyAgICBhc3NlcnQoZGtleS0+ZGF0ZSAhPSBOVUxMKTsKKyAgICBtZW1jcHko
YnVmICsgaWRsZW4gKyB0b2xlbiArIDIsIGRrZXktPmRhdGUsIGRhdGVsZW4pOworICAgIGJ1Zltp
ZGxlbiArIHRvbGVuICsgZGF0ZWxlbiArIDJdID0gJ1wwJzsKIAogICAgIG1lbWNweShkYXRhLCAm
bWFyaywgc2l6ZW9mKG1hcmspKTsKICAgICBtZW1jcHkoZGF0YSArIHNpemVvZihtYXJrKSwgJnVp
ZCwgc2l6ZW9mKHVpZCkpOwogCiAgICAgZG8gewogCXIgPSBEQi0+c3RvcmUoZHVwZGIsIGJ1ZiwK
LQkJICAgICAgaWRsZW4gKyB0b2xlbiArIDIsIC8qICsyIGIvYyAxIGZvciB0aGUgY2VudGVyIG51
bGw7Ci0JCQkJCSAgICArMSBmb3IgdGhlIHRlcm1pbmF0aW5nIG51bGwgKi8KKwkJICAgICAgaWRs
ZW4gKyB0b2xlbiArIGRhdGVsZW4gKyAzLCAvKiBXZSBoYXZlIHRocmVlIGNvbmNhdGVuYXRlZCB2
YWx1ZXMgbm93LCBhbGwgcGFydHMgZW5kaW5nIHdpdGggJ1wwJyAqLwogCQkgICAgICBkYXRhLCBz
aXplb2YobWFyaykrc2l6ZW9mKHVpZCksIE5VTEwpOwogICAgIH0gd2hpbGUgKHIgPT0gQ1lSVVNE
Ql9BR0FJTik7CiAKLSAgICBzeXNsb2coTE9HX0RFQlVHLCAiZHVwbGljYXRlX21hcms6ICUtNDBz
ICUtMjBzICVsZCAlbHUiLAotCSAgIGJ1ZiwgYnVmK2lkbGVuKzEsIG1hcmssIHVpZCk7CisgICAg
c3lzbG9nKExPR19ERUJVRywgImR1cGxpY2F0ZV9tYXJrOiAlLTQwcyAlLTIwcyAlLTQwcyAlbGQg
JWx1IiwKKwkgICBidWYsIGJ1ZitpZGxlbisxLCBidWYraWRsZW4rdG9sZW4rMiwgbWFyaywgdWlk
KTsgCiAKICAgICByZXR1cm47CiB9CmRpZmYgLS1naXQgYS9HSVQvVEVNUC9jeXJ1cy1pbWFwZC0y
LjQuMTAtb3JpL2ltYXAvZHVwbGljYXRlLmggYi9HSVQvVEVNUC9jeXJ1cy1pbWFwZC0yLjQuMTAv
aW1hcC9kdXBsaWNhdGUuaAppbmRleCBkMWQ4NzM3Li44YTM2YTg5IDEwMDY0NAotLS0gYS9HSVQv
VEVNUC9jeXJ1cy1pbWFwZC0yLjQuMTAtb3JpL2ltYXAvZHVwbGljYXRlLmgKKysrIGIvR0lUL1RF
TVAvY3lydXMtaW1hcGQtMi40LjEwL2ltYXAvZHVwbGljYXRlLmgKQEAgLTQ5LDEyICs0OSwxNyBA
QAogLyogbmFtZSBvZiB0aGUgZHVwbGljYXRlIGRlbGl2ZXJ5IGRhdGFiYXNlICovCiAjZGVmaW5l
IEZOQU1FX0RFTElWRVJEQiAiL2RlbGl2ZXIuZGIiCiAKK3R5cGVkZWYgc3RydWN0IGR1cGxpY2F0
ZV9rZXkgeworICAgIGNoYXIgKmlkOworICAgIGNoYXIgKnRvOworICAgIGNoYXIgKmRhdGU7Cit9
IGR1cGxpY2F0ZV9rZXlfdDsKKwogaW50IGR1cGxpY2F0ZV9pbml0KGNvbnN0IGNoYXIgKmZuYW1l
LCBpbnQgbXlmbGFncyk7CiAKLXRpbWVfdCBkdXBsaWNhdGVfY2hlY2soY2hhciAqaWQsIGludCBp
ZGxlbiwgY29uc3QgY2hhciAqdG8sIGludCB0b2xlbik7Ci12b2lkIGR1cGxpY2F0ZV9sb2coY2hh
ciAqbXNnaWQsIGNvbnN0IGNoYXIgKm5hbWUsIGNoYXIgKmFjdGlvbik7Ci12b2lkIGR1cGxpY2F0
ZV9tYXJrKGNoYXIgKmlkLCBpbnQgaWRsZW4sIGNvbnN0IGNoYXIgKnRvLCBpbnQgdG9sZW4sIHRp
bWVfdCBtYXJrLAotCQkgICAgdW5zaWduZWQgbG9uZyB1aWQpOwordGltZV90IGR1cGxpY2F0ZV9j
aGVjayhkdXBsaWNhdGVfa2V5X3QgKmRrZXkpOwordm9pZCBkdXBsaWNhdGVfbG9nKGR1cGxpY2F0
ZV9rZXlfdCAqZGtleSwgY2hhciAqYWN0aW9uKTsKK3ZvaWQgZHVwbGljYXRlX21hcmsoZHVwbGlj
YXRlX2tleV90ICpka2V5LCB0aW1lX3QgbWFyaywgdW5zaWduZWQgbG9uZyB1aWQpOwogaW50IGR1
cGxpY2F0ZV9maW5kKGNoYXIgKm1zZ2lkLCBpbnQgKCpwcm9jKSgpLCB2b2lkICpyb2NrKTsKIAog
aW50IGR1cGxpY2F0ZV9wcnVuZShpbnQgc2Vjb25kcywgc3RydWN0IGhhc2hfdGFibGUgKmV4cGly
ZV90YWJsZSk7CmRpZmYgLS1naXQgYS9HSVQvVEVNUC9jeXJ1cy1pbWFwZC0yLjQuMTAtb3JpL2lt
YXAvbG10cF9zaWV2ZS5jIGIvR0lUL1RFTVAvY3lydXMtaW1hcGQtMi40LjEwL2ltYXAvbG10cF9z
aWV2ZS5jCmluZGV4IDM3OWJlZmQuLjEwNzVkOWUgMTAwNjQ0Ci0tLSBhL0dJVC9URU1QL2N5cnVz
LWltYXBkLTIuNC4xMC1vcmkvaW1hcC9sbXRwX3NpZXZlLmMKKysrIGIvR0lUL1RFTVAvY3lydXMt
aW1hcGQtMi40LjEwL2ltYXAvbG10cF9zaWV2ZS5jCkBAIC0yMjUsNiArMjI1LDcgQEAgc3RhdGlj
IGludCBzZW5kX3JlamVjdGlvbihjb25zdCBjaGFyICpvcmlnaWQsCiAgICAgdGltZV90IHQ7CiAg
ICAgY2hhciBkYXRlc3RyWzgwXTsKICAgICBwaWRfdCBzbV9waWQsIHA7CisgICAgZHVwbGljYXRl
X2tleV90IGRrZXkgPSB7TlVMTCwgTlVMTCwgTlVMTH07CiAKICAgICBzbWJ1ZlswXSA9ICJzZW5k
bWFpbCI7CiAgICAgc21idWZbMV0gPSAiLWkiOwkJLyogaWdub3JlIGRvdHMgKi8KQEAgLTI0NCwx
MCArMjQ1LDEzIEBAIHN0YXRpYyBpbnQgc2VuZF9yZWplY3Rpb24oY29uc3QgY2hhciAqb3JpZ2lk
LAogCSAgICAgZ2xvYmFsX291dGdvaW5nX2NvdW50KyssIGNvbmZpZ19zZXJ2ZXJuYW1lKTsKICAg
ICAKICAgICBuYW1lYnVmID0gbWFrZV9zaWV2ZV9kYihtYWlscmVjZWlwKTsKLSAgICBkdXBsaWNh
dGVfbWFyayhidWYsIHN0cmxlbihidWYpLCBuYW1lYnVmLCBzdHJsZW4obmFtZWJ1ZiksIHQsIDAp
OwotICAgIGZwcmludGYoc20sICJNZXNzYWdlLUlEOiAlc1xyXG4iLCBidWYpOwogCisgICAgZGtl
eS5pZCA9IGJ1ZjsKKyAgICBka2V5LnRvID0gbmFtZWJ1ZjsKICAgICByZmM4MjJkYXRlX2dlbihk
YXRlc3RyLCBzaXplb2YoZGF0ZXN0ciksIHQpOworICAgIGRrZXkuZGF0ZSA9IGRhdGVzdHI7Cisg
ICAgZHVwbGljYXRlX21hcmsoJmRrZXksIHQsIDApOworICAgIGZwcmludGYoc20sICJNZXNzYWdl
LUlEOiAlc1xyXG4iLCBidWYpOwogICAgIGZwcmludGYoc20sICJEYXRlOiAlc1xyXG4iLCBkYXRl
c3RyKTsKIAogICAgIGZwcmludGYoc20sICJYLVNpZXZlOiAlc1xyXG4iLCBTSUVWRV9WRVJTSU9O
KTsKQEAgLTM2OCw2ICszNzIsNyBAQCBzdGF0aWMgaW50IHNpZXZlX3JlZGlyZWN0KHZvaWQgKmFj
LAogICAgIHNjcmlwdF9kYXRhX3QgKnNkID0gKHNjcmlwdF9kYXRhX3QgKikgc2M7CiAgICAgbWVz
c2FnZV9kYXRhX3QgKm0gPSAoKGRlbGl2ZXJfZGF0YV90ICopIG1jKS0+bTsKICAgICBjaGFyIGJ1
Zls4MTkyXSwgKnNpZXZlZGIgPSBOVUxMOworICAgIGR1cGxpY2F0ZV9rZXlfdCBka2V5ID0ge05V
TEwsIE5VTEwsIE5VTEx9OwogICAgIGludCByZXM7CiAKICAgICAvKiBpZiB3ZSBoYXZlIGEgbXNn
aWQsIHdlIGNhbiB0cmFjayBvdXIgcmVkaXJlY3RzICovCkBAIC0zNzUsMTcgKzM4MCwxOSBAQCBz
dGF0aWMgaW50IHNpZXZlX3JlZGlyZWN0KHZvaWQgKmFjLAogCXNucHJpbnRmKGJ1Ziwgc2l6ZW9m
KGJ1ZiksICIlcy0lcyIsIG0tPmlkLCByYy0+YWRkcik7CiAJc2lldmVkYiA9IG1ha2Vfc2lldmVf
ZGIoc2QtPnVzZXJuYW1lKTsKIAorCWRrZXkuaWQgPSBidWY7CisJZGtleS50byA9IHNpZXZlZGI7
CisJZGtleS5kYXRlID0gKChkZWxpdmVyX2RhdGFfdCAqKSBtYyktPm0tPmRhdGU7CiAJLyogb2ss
IGxldCdzIHNlZSBpZiB3ZSd2ZSByZWRpcmVjdGVkIHRoaXMgbWVzc2FnZSBiZWZvcmUgKi8KLQlp
ZiAoZHVwbGljYXRlX2NoZWNrKGJ1Ziwgc3RybGVuKGJ1ZiksIHNpZXZlZGIsIHN0cmxlbihzaWV2
ZWRiKSkpIHsKLQkgICAgZHVwbGljYXRlX2xvZyhtLT5pZCwgc2QtPnVzZXJuYW1lLCAicmVkaXJl
Y3QiKTsKKwlpZiAoZHVwbGljYXRlX2NoZWNrKCZka2V5KSkgeworCSAgICBkdXBsaWNhdGVfbG9n
KCZka2V5LCAicmVkaXJlY3QiKTsKIAkgICAgcmV0dXJuIFNJRVZFX09LOwogCX0KICAgICB9CiAK
ICAgICBpZiAoKHJlcyA9IHNlbmRfZm9yd2FyZChyYy0+YWRkciwgbS0+cmV0dXJuX3BhdGgsIG0t
PmRhdGEpKSA9PSAwKSB7CiAJLyogbWFyayB0aGlzIG1lc3NhZ2UgYXMgcmVkaXJlY3RlZCAqLwot
CWlmIChzaWV2ZWRiKSBkdXBsaWNhdGVfbWFyayhidWYsIHN0cmxlbihidWYpLCAKLQkJCQkgICAg
c2lldmVkYiwgc3RybGVuKHNpZXZlZGIpLCB0aW1lKE5VTEwpLCAwKTsKKwlpZiAoc2lldmVkYikg
ZHVwbGljYXRlX21hcmsoJmRrZXksIHRpbWUoTlVMTCksIDApOwogCiAJc25tcF9pbmNyZW1lbnQo
U0lFVkVfUkVESVJFQ1QsIDEpOwogCXN5c2xvZyhMT0dfSU5GTywgInNpZXZlIHJlZGlyZWN0ZWQ6
ICVzIHRvOiAlcyIsCkBAIC00OTQsNyArNTAxLDcgQEAgc3RhdGljIGludCBzaWV2ZV9maWxlaW50
byh2b2lkICphYywKIAkJCSAgICAgIGZjLT5pbWFwZmxhZ3MtPmZsYWcsIGZjLT5pbWFwZmxhZ3Mt
Pm5mbGFncywKIAkJCSAgICAgIChjaGFyICopIHNkLT51c2VybmFtZSwgc2QtPmF1dGhzdGF0ZSwg
bWQtPmlkLAogCQkJICAgICAgc2QtPnVzZXJuYW1lLCBtZGF0YS0+bm90aWZ5aGVhZGVyLAotCQkJ
ICAgICAgbmFtZWJ1ZiwgcXVvdGFvdmVycmlkZSwgMCk7CisJCQkgICAgICBuYW1lYnVmLCBtZC0+
ZGF0ZSwgcXVvdGFvdmVycmlkZSwgMCk7CiAgICAgfQogCiAgICAgaWYgKCFyZXQpIHsKQEAgLTU2
NCwxNCArNTcxLDE4IEBAIHN0YXRpYyBpbnQgYXV0b3Jlc3BvbmQodm9pZCAqYWMsCiAgICAgc2Ny
aXB0X2RhdGFfdCAqc2QgPSAoc2NyaXB0X2RhdGFfdCAqKSBzYzsKICAgICB0aW1lX3QgdCwgbm93
OwogICAgIGludCByZXQ7CisgICAgZHVwbGljYXRlX2tleV90IGRrZXkgPSB7TlVMTCwgTlVMTCwg
IiJ9OwogCiAgICAgc25tcF9pbmNyZW1lbnQoU0lFVkVfVkFDQVRJT05fVE9UQUwsIDEpOwogCiAg
ICAgbm93ID0gdGltZShOVUxMKTsKIAogICAgIC8qIG9rLCBsZXQncyBzZWUgaWYgd2UndmUgcmVz
cG9uZGVkIGJlZm9yZSAqLwotICAgIHQgPSBkdXBsaWNhdGVfY2hlY2soKGNoYXIgKikgYXJjLT5o
YXNoLCBTSUVWRV9IQVNITEVOLCAKLQkJCXNkLT51c2VybmFtZSwgc3RybGVuKHNkLT51c2VybmFt
ZSkpOworICAgIGRrZXkuaWQgPSB4bWFsbG9jKFNJRVZFX0hBU0hMRU4gKyAxKTsKKyAgICBtZW1j
cHkoZGtleS5pZCwgKGNoYXIgKikgYXJjLT5oYXNoLCBTSUVWRV9IQVNITEVOKTsKKyAgICBka2V5
LmlkW1NJRVZFX0hBU0hMRU5dID0gJ1wwJzsKKyAgICBka2V5LnRvID0gc2QtPnVzZXJuYW1lOwor
ICAgIHQgPSBkdXBsaWNhdGVfY2hlY2soJmRrZXkpOwogICAgIGlmICh0KSB7CiAJaWYgKG5vdyA+
PSB0KSB7CiAJICAgIC8qIHlheSwgd2UgY2FuIHJlc3BvbmQgYWdhaW4hICovCkBAIC01ODUsMTEg
KzU5NiwxMCBAQCBzdGF0aWMgaW50IGF1dG9yZXNwb25kKHZvaWQgKmFjLAogICAgIH0KIAogICAg
IGlmIChyZXQgPT0gU0lFVkVfT0spIHsKLQlkdXBsaWNhdGVfbWFyaygoY2hhciAqKSBhcmMtPmhh
c2gsIFNJRVZFX0hBU0hMRU4sIAotCQkgICAgICAgc2QtPnVzZXJuYW1lLCBzdHJsZW4oc2QtPnVz
ZXJuYW1lKSwgCi0JCSAgICAgICBub3cgKyBhcmMtPmRheXMgKiAoMjQgKiA2MCAqIDYwKSwgMCk7
CisJZHVwbGljYXRlX21hcmsoJmRrZXksIG5vdyArIGFyYy0+ZGF5cyAqICgyNCAqIDYwICogNjAp
LCAwKTsKICAgICB9CiAKKyAgICBpZiAoZGtleS5pZCAhPSBOVUxMKSBmcmVlKGRrZXkuaWQpOwog
ICAgIHJldHVybiByZXQ7CiB9CiAKQEAgLTYwNyw2ICs2MTcsNyBAQCBzdGF0aWMgaW50IHNlbmRf
cmVzcG9uc2Uodm9pZCAqYWMsCiAgICAgc2lldmVfc2VuZF9yZXNwb25zZV9jb250ZXh0X3QgKnNy
YyA9IChzaWV2ZV9zZW5kX3Jlc3BvbnNlX2NvbnRleHRfdCAqKSBhYzsKICAgICBtZXNzYWdlX2Rh
dGFfdCAqbWQgPSAoKGRlbGl2ZXJfZGF0YV90ICopIG1jKS0+bTsKICAgICBzY3JpcHRfZGF0YV90
ICpzZGF0YSA9IChzY3JpcHRfZGF0YV90ICopIHNjOworICAgIGR1cGxpY2F0ZV9rZXlfdCBka2V5
ID0ge05VTEwsIE5VTEwsIE5VTEx9OwogCiAgICAgc21idWZbMF0gPSAic2VuZG1haWwiOwogICAg
IHNtYnVmWzFdID0gIi1pIjsJCS8qIGlnbm9yZSBkb3RzICovCkBAIC02NjcsOCArNjc4LDEwIEBA
IHN0YXRpYyBpbnQgc2VuZF9yZXNwb25zZSh2b2lkICphYywKICAgICBpZiAoc21fc3RhdCA9PSAw
KSB7IC8qIHNlbmRtYWlsIGV4aXQgdmFsdWUgKi8KIAlzaWV2ZWRiID0gbWFrZV9zaWV2ZV9kYihz
ZGF0YS0+dXNlcm5hbWUpOwogCi0JZHVwbGljYXRlX21hcmsob3V0bXNnaWQsIHN0cmxlbihvdXRt
c2dpZCksIAotCQkgICAgICAgc2lldmVkYiwgc3RybGVuKHNpZXZlZGIpLCB0LCAwKTsKKwlka2V5
LmlkID0gb3V0bXNnaWQ7CisJZGtleS50byA9IHNpZXZlZGI7CisJZGtleS5kYXRlID0gKChkZWxp
dmVyX2RhdGFfdCAqKSBtYyktPm0tPmRhdGU7CisJZHVwbGljYXRlX21hcmsoJmRrZXksIHQsIDAp
OwogCiAJc25tcF9pbmNyZW1lbnQoU0lFVkVfVkFDQVRJT05fUkVQTElFRCwgMSk7CiAKQEAgLTg3
OSw2ICs4OTIsNyBAQCBpbnQgcnVuX3NpZXZlKGNvbnN0IGNoYXIgKnVzZXIsIGNvbnN0IGNoYXIg
KmRvbWFpbiwgY29uc3QgY2hhciAqbWFpbGJveCwKICAgICBjaGFyIHVzZXJidWZbTUFYX01BSUxC
T1hfQlVGRkVSXSA9ICIiOwogICAgIGNoYXIgYXV0aHVzZXJidWZbTUFYX01BSUxCT1hfQlVGRkVS
XTsKICAgICBpbnQgciA9IDA7CisgICAgZHVwbGljYXRlX2tleV90IGRrZXkgPSB7TlVMTCwgTlVM
TCwgTlVMTH07CiAKICAgICBpZiAoIXVzZXIpIHsKIAkvKiBzaGFyZWQgbWFpbGJveCwgY2hlY2sg
Zm9yIGFubm90YXRpb24gKi8KQEAgLTkzNSw4ICs5NDksMTAgQEAgaW50IHJ1bl9zaWV2ZShjb25z
dCBjaGFyICp1c2VyLCBjb25zdCBjaGFyICpkb21haW4sIGNvbnN0IGNoYXIgKm1haWxib3gsCiAJ
CSBkb21haW4gPyBkb21haW4gOiAiIik7CiAJc2RiID0gbWFrZV9zaWV2ZV9kYihuYW1lYnVmKTsK
IAkJCi0JZHVwbGljYXRlX21hcmsobXNnZGF0YS0+bS0+aWQsIHN0cmxlbihtc2dkYXRhLT5tLT5p
ZCksIAotCQkgICAgICAgc2RiLCBzdHJsZW4oc2RiKSwgdGltZShOVUxMKSwgMCk7CisJZGtleS5p
ZCA9IG1zZ2RhdGEtPm0tPmlkOworCWRrZXkudG8gPSBzZGI7CisJZGtleS5kYXRlID0gbXNnZGF0
YS0+bS0+ZGF0ZTsKKwlkdXBsaWNhdGVfbWFyaygmZGtleSwgdGltZShOVUxMKSwgMCk7CiAgICAg
fQogCQkKICAgICAvKiBmcmVlIGV2ZXJ5dGhpbmcgKi8KZGlmZiAtLWdpdCBhL0dJVC9URU1QL2N5
cnVzLWltYXBkLTIuNC4xMC1vcmkvaW1hcC9sbXRwZC5jIGIvR0lUL1RFTVAvY3lydXMtaW1hcGQt
Mi40LjEwL2ltYXAvbG10cGQuYwppbmRleCBlZDM0YzdjLi5jYTM1MzMxIDEwMDY0NAotLS0gYS9H
SVQvVEVNUC9jeXJ1cy1pbWFwZC0yLjQuMTAtb3JpL2ltYXAvbG10cGQuYworKysgYi9HSVQvVEVN
UC9jeXJ1cy1pbWFwZC0yLjQuMTAvaW1hcC9sbXRwZC5jCkBAIC00OTYsNiArNDk2LDcgQEAgaW50
IGRlbGl2ZXJfbWFpbGJveChGSUxFICpmLAogCQkgICAgY29uc3QgY2hhciAqdXNlciwKIAkJICAg
IGNoYXIgKm5vdGlmeWhlYWRlciwKIAkJICAgIGNvbnN0IGNoYXIgKm1haWxib3huYW1lLAorCQkg
ICAgY2hhciAqZGF0ZSwKIAkJICAgIGludCBxdW90YW92ZXJyaWRlLAogCQkgICAgaW50IGFjbG92
ZXJyaWRlKQogewpAQCAtNTAzLDYgKzUwNCw3IEBAIGludCBkZWxpdmVyX21haWxib3goRklMRSAq
ZiwKICAgICBzdHJ1Y3QgYXBwZW5kc3RhdGUgYXM7CiAgICAgdW5zaWduZWQgbG9uZyB1aWQ7CiAg
ICAgY29uc3QgY2hhciAqbm90aWZpZXI7CisgICAgZHVwbGljYXRlX2tleV90IGRrZXkgPSB7TlVM
TCwgTlVMTCwgTlVMTH07CiAKICAgICByID0gYXBwZW5kX3NldHVwKCZhcywgbWFpbGJveG5hbWUs
CiAJCSAgICAgYXV0aHVzZXIsIGF1dGhzdGF0ZSwgYWNsb3ZlcnJpZGUgPyAwIDogQUNMX1BPU1Qs
IApAQCAtNTExLDkgKzUxMywxMiBAQCBpbnQgZGVsaXZlcl9tYWlsYm94KEZJTEUgKmYsCiAJCSAg
ICAgKGxvbmcpIHNpemUgOiAwKTsKIAogICAgIC8qIGNoZWNrIGZvciBkdXBsaWNhdGUgbWVzc2Fn
ZSAqLworICAgIGRrZXkuaWQgPSBpZDsKKyAgICBka2V5LnRvID0gbWFpbGJveG5hbWU7CisgICAg
ZGtleS5kYXRlID0gZGF0ZTsKICAgICBpZiAoIXIgJiYgaWQgJiYgZHVwZWxpbSAmJiAhKGFzLm1h
aWxib3gtPmkub3B0aW9ucyAmIE9QVF9JTUFQX0RVUERFTElWRVIpICYmCi0JZHVwbGljYXRlX2No
ZWNrKGlkLCBzdHJsZW4oaWQpLCBtYWlsYm94bmFtZSwgc3RybGVuKG1haWxib3huYW1lKSkpIHsK
LQlkdXBsaWNhdGVfbG9nKGlkLCBtYWlsYm94bmFtZSwgImRlbGl2ZXJ5Iik7CisJZHVwbGljYXRl
X2NoZWNrKCZka2V5KSkgeworCWR1cGxpY2F0ZV9sb2coJmRrZXksICJkZWxpdmVyeSIpOwogCWFw
cGVuZF9hYm9ydCgmYXMpOwogCXJldHVybiAwOwogICAgIH0KQEAgLTUzOSw4ICs1NDQsNyBAQCBp
bnQgZGVsaXZlcl9tYWlsYm94KEZJTEUgKmYsCiAJCXN5c2xvZyhMT0dfSU5GTywgIkRlbGl2ZXJl
ZDogJXMgdG8gbWFpbGJveDogJXMiLAogCQkgICAgICAgaWQsIG1haWxib3huYW1lKTsKIAkJaWYg
KGR1cGVsaW0gJiYgaWQpIHsKLQkJICAgIGR1cGxpY2F0ZV9tYXJrKGlkLCBzdHJsZW4oaWQpLCBt
YWlsYm94bmFtZSwgCi0JCQkJICAgc3RybGVuKG1haWxib3huYW1lKSwgdGltZShOVUxMKSwgdWlk
KTsKKwkJICAgIGR1cGxpY2F0ZV9tYXJrKCZka2V5LCB0aW1lKE5VTEwpLCB1aWQpOwogCQl9CiAJ
CW1haWxib3hfY2xvc2UoJm1haWxib3gpOwogCSAgICB9CkBAIC02OTAsNyArNjk0LDcgQEAgaW50
IGRlbGl2ZXJfbG9jYWwoZGVsaXZlcl9kYXRhX3QgKm15ZGF0YSwgY2hhciAqKmZsYWcsIGludCBu
ZmxhZ3MsCiAJCQkgICAgICAgbWQtPnNpemUsIGZsYWcsIG5mbGFncywKIAkJCSAgICAgICBteWRh
dGEtPmF1dGh1c2VyLCBteWRhdGEtPmF1dGhzdGF0ZSwgbWQtPmlkLAogCQkJICAgICAgIE5VTEws
IG15ZGF0YS0+bm90aWZ5aGVhZGVyLAotCQkJICAgICAgIG5hbWVidWYsIHF1b3Rhb3ZlcnJpZGUs
IDApOworCQkJICAgICAgIG5hbWVidWYsIG1kLT5kYXRlLCBxdW90YW92ZXJyaWRlLCAwKTsKICAg
ICB9CiAKICAgICAvKiBjYXNlIDI6IG9yZGluYXJ5IHVzZXIgKi8KQEAgLTcxMCw3ICs3MTQsNyBA
QCBpbnQgZGVsaXZlcl9sb2NhbChkZWxpdmVyX2RhdGFfdCAqbXlkYXRhLCBjaGFyICoqZmxhZywg
aW50IG5mbGFncywKIAkJCQkgICBtZC0+c2l6ZSwgZmxhZywgbmZsYWdzLAogCQkJCSAgIG15ZGF0
YS0+YXV0aHVzZXIsIG15ZGF0YS0+YXV0aHN0YXRlLCBtZC0+aWQsCiAJCQkJICAgdXNlcm5hbWUs
IG15ZGF0YS0+bm90aWZ5aGVhZGVyLAotCQkJCSAgIG5hbWVidWYsIHF1b3Rhb3ZlcnJpZGUsIDAp
OworCQkJCSAgIG5hbWVidWYsIG1kLT5kYXRlLCBxdW90YW92ZXJyaWRlLCAwKTsKIAl9CiAJaWYg
KHJldDIgPT0gSU1BUF9NQUlMQk9YX05PTkVYSVNURU5UICYmIG1haWxib3huYW1lICYmCiAJICAg
IGNvbmZpZ19nZXRzd2l0Y2goSU1BUE9QVF9MTVRQX0ZVWlpZX01BSUxCT1hfTUFUQ0gpICYmCkBA
IC03MjAsNyArNzI0LDcgQEAgaW50IGRlbGl2ZXJfbG9jYWwoZGVsaXZlcl9kYXRhX3QgKm15ZGF0
YSwgY2hhciAqKmZsYWcsIGludCBuZmxhZ3MsCiAJCQkJICAgbWQtPnNpemUsIGZsYWcsIG5mbGFn
cywKIAkJCQkgICBteWRhdGEtPmF1dGh1c2VyLCBteWRhdGEtPmF1dGhzdGF0ZSwgbWQtPmlkLAog
CQkJCSAgIHVzZXJuYW1lLCBteWRhdGEtPm5vdGlmeWhlYWRlciwKLQkJCQkgICBuYW1lYnVmLCBx
dW90YW92ZXJyaWRlLCAwKTsKKwkJCQkgICBuYW1lYnVmLCBtZC0+ZGF0ZSwgcXVvdGFvdmVycmlk
ZSwgMCk7CiAJfQogCWlmIChyZXQyKSB7CiAJICAgIC8qIG5vcm1hbCBkZWxpdmVyeSB0byBJTkJP
WCAqLwpAQCAtNzMyLDcgKzczNiw3IEBAIGludCBkZWxpdmVyX2xvY2FsKGRlbGl2ZXJfZGF0YV90
ICpteWRhdGEsIGNoYXIgKipmbGFnLCBpbnQgbmZsYWdzLAogCQkJCSAgbWQtPnNpemUsIGZsYWcs
IG5mbGFncywKIAkJCQkgIChjaGFyICopIHVzZXJuYW1lLCBhdXRoc3RhdGUsIG1kLT5pZCwKIAkJ
CQkgIHVzZXJuYW1lLCBteWRhdGEtPm5vdGlmeWhlYWRlciwKLQkJCQkgIG5hbWVidWYsIHF1b3Rh
b3ZlcnJpZGUsIDEpOworCQkJCSAgbmFtZWJ1ZiwgbWQtPmRhdGUsIHF1b3Rhb3ZlcnJpZGUsIDEp
OwogCiAJICAgIGlmIChhdXRoc3RhdGUpIGF1dGhfZnJlZXN0YXRlKGF1dGhzdGF0ZSk7CiAJfQpk
aWZmIC0tZ2l0IGEvR0lUL1RFTVAvY3lydXMtaW1hcGQtMi40LjEwLW9yaS9pbWFwL2xtdHBkLmgg
Yi9HSVQvVEVNUC9jeXJ1cy1pbWFwZC0yLjQuMTAvaW1hcC9sbXRwZC5oCmluZGV4IGQ4NjU3Nzcu
Ljc1NjFhNWEgMTAwNjQ0Ci0tLSBhL0dJVC9URU1QL2N5cnVzLWltYXBkLTIuNC4xMC1vcmkvaW1h
cC9sbXRwZC5oCisrKyBiL0dJVC9URU1QL2N5cnVzLWltYXBkLTIuNC4xMC9pbWFwL2xtdHBkLmgK
QEAgLTg5LDYgKzg5LDcgQEAgZXh0ZXJuIGludCBkZWxpdmVyX21haWxib3goRklMRSAqZiwKIAkJ
CSAgIGNvbnN0IGNoYXIgKnVzZXIsCiAJCQkgICBjaGFyICpub3RpZnloZWFkZXIsCiAJCQkgICBj
b25zdCBjaGFyICptYWlsYm94bmFtZSwKKwkJCSAgIGNoYXIgKmRhdGUsCiAJCQkgICBpbnQgcXVv
dGFvdmVycmlkZSwKIAkJCSAgIGludCBhY2xvdmVycmlkZSk7CiAKZGlmZiAtLWdpdCBhL0dJVC9U
RU1QL2N5cnVzLWltYXBkLTIuNC4xMC1vcmkvaW1hcC9sbXRwZW5naW5lLmMgYi9HSVQvVEVNUC9j
eXJ1cy1pbWFwZC0yLjQuMTAvaW1hcC9sbXRwZW5naW5lLmMKaW5kZXggMzAwNWVkNi4uZjAzNTdi
ZSAxMDA2NDQKLS0tIGEvR0lUL1RFTVAvY3lydXMtaW1hcGQtMi40LjEwLW9yaS9pbWFwL2xtdHBl
bmdpbmUuYworKysgYi9HSVQvVEVNUC9jeXJ1cy1pbWFwZC0yLjQuMTAvaW1hcC9sbXRwZW5naW5l
LmMKQEAgLTI4Miw2ICsyODIsNyBAQCBpbnQgbXNnX25ldyhtZXNzYWdlX2RhdGFfdCAqKm0pCiAg
ICAgcmV0LT5yZXR1cm5fcGF0aCA9IE5VTEw7CiAgICAgcmV0LT5yY3B0ID0gTlVMTDsKICAgICBy
ZXQtPnJjcHRfbnVtID0gMDsKKyAgICByZXQtPmRhdGUgPSBOVUxMOwogCiAgICAgcmV0LT5hdXRo
dXNlciA9IE5VTEw7CiAgICAgcmV0LT5hdXRoc3RhdGUgPSBOVUxMOwpAQCAtMzE5LDYgKzMyMCw5
IEBAIHZvaWQgbXNnX2ZyZWUobWVzc2FnZV9kYXRhX3QgKm0pCiAJfQogCWZyZWUobS0+cmNwdCk7
CiAgICAgfQorICAgIGlmIChtLT5kYXRlKSB7CisgICAgICBmcmVlKG0tPmRhdGUpOworICAgICB9
CiAKICAgICBpZiAobS0+YXV0aHVzZXIpIHsKIAlmcmVlKG0tPmF1dGh1c2VyKTsKQEAgLTc0MSwx
MiArNzQ1LDE2IEBAIHN0YXRpYyBpbnQgc2F2ZW1zZyhzdHJ1Y3QgY2xpZW50ZGF0YSAqY2QsCiAg
ICAgfQogCiAgICAgLyogZ2V0IGRhdGUgKi8KLSAgICBpZiAoIXNwb29sX2dldGhlYWRlcihtLT5o
ZHJjYWNoZSwgImRhdGUiKSkgeworICAgIGlmICghKGJvZHkgPSBzcG9vbF9nZXRoZWFkZXIobS0+
aGRyY2FjaGUsICJkYXRlIikpKSB7CiAJLyogbm8gZGF0ZSwgY3JlYXRlIG9uZSAqLwogCWFkZGJv
ZHkgPSB4c3RyZHVwKGRhdGVzdHIpOworCW0tPmRhdGUgPSB4c3RyZHVwKGRhdGVzdHIpOwogCWZw
cmludGYoZiwgIkRhdGU6ICVzXHJcbiIsIGFkZGJvZHkpOwogCXNwb29sX2NhY2hlX2hlYWRlcih4
c3RyZHVwKCJEYXRlIiksIGFkZGJvZHksIG0tPmhkcmNhY2hlKTsKICAgICB9CisgICAgZWxzZSB7
CisJbS0+ZGF0ZSA9IHhzdHJkdXAoYm9keVswXSk7CisgICAgfQogCiAgICAgaWYgKCFtLT5yZXR1
cm5fcGF0aCAmJgogCShib2R5ID0gbXNnX2dldGhlYWRlcihtLCAicmV0dXJuLXBhdGgiKSkpIHsK
ZGlmZiAtLWdpdCBhL0dJVC9URU1QL2N5cnVzLWltYXBkLTIuNC4xMC1vcmkvaW1hcC9sbXRwZW5n
aW5lLmggYi9HSVQvVEVNUC9jeXJ1cy1pbWFwZC0yLjQuMTAvaW1hcC9sbXRwZW5naW5lLmgKaW5k
ZXggYzM1ODVkYS4uMTZiNmJjMyAxMDA2NDQKLS0tIGEvR0lUL1RFTVAvY3lydXMtaW1hcGQtMi40
LjEwLW9yaS9pbWFwL2xtdHBlbmdpbmUuaAorKysgYi9HSVQvVEVNUC9jeXJ1cy1pbWFwZC0yLjQu
MTAvaW1hcC9sbXRwZW5naW5lLmgKQEAgLTY1LDYgKzY1LDcgQEAgc3RydWN0IG1lc3NhZ2VfZGF0
YSB7CiAgICAgY2hhciAqcmV0dXJuX3BhdGg7CQkvKiB3aGVyZSB0byByZXR1cm4gbWVzc2FnZSAq
LwogICAgIGFkZHJlc3NfZGF0YV90ICoqcmNwdDsJLyogdG8gcmVjaXBpZW50cyBvZiB0aGlzIG1l
c3NhZ2UgKi8KICAgICBpbnQgcmNwdF9udW07CQkvKiBudW1iZXIgb2YgcmVjaXBpZW50cyAqLwor
ICAgIGNoYXIgKmRhdGU7IAkJLyogZGF0ZSBmaWVsZCBvZiBoZWFkZXIgKi8KIAogICAgIC8qIGF1
dGggc3RhdGUgKi8KICAgICBjaGFyICphdXRodXNlcjsKZGlmZiAtLWdpdCBhL0dJVC9URU1QL2N5
cnVzLWltYXBkLTIuNC4xMC1vcmkvaW1hcC9ubnRwZC5jIGIvR0lUL1RFTVAvY3lydXMtaW1hcGQt
Mi40LjEwL2ltYXAvbm50cGQuYwppbmRleCA5ZjY0MzFkLi5mNzQ5NDQ5IDEwMDY0NAotLS0gYS9H
SVQvVEVNUC9jeXJ1cy1pbWFwZC0yLjQuMTAtb3JpL2ltYXAvbm50cGQuYworKysgYi9HSVQvVEVN
UC9jeXJ1cy1pbWFwZC0yLjQuMTAvaW1hcC9ubnRwZC5jCkBAIC0yODc0LDYgKzI4NzQsNyBAQCBz
dHJ1Y3QgbWVzc2FnZV9kYXRhIHsKIAogICAgIGNoYXIgKipyY3B0OwkJLyogbWFpbGJveGVzIHRv
IHBvc3QgbWVzc2FnZSAqLwogICAgIGludCByY3B0X251bTsJCS8qIG51bWJlciBvZiBncm91cHMg
Ki8KKyAgICBjaGFyICpkYXRlOwkJLyogZGF0ZSBmaWVsZCBvZiBoZWFkZXIgKi8gCiAKICAgICBo
ZHJjYWNoZV90IGhkcmNhY2hlOwogfTsKQEAgLTI4OTEsNiArMjg5Miw3IEBAIGludCBtc2dfbmV3
KG1lc3NhZ2VfZGF0YV90ICoqbSkKICAgICByZXQtPnNpemUgPSAwOwogICAgIHJldC0+cmNwdCA9
IE5VTEw7CiAgICAgcmV0LT5yY3B0X251bSA9IDA7CisgICAgcmV0LT5kYXRlID0gTlVMTDsKIAog
ICAgIHJldC0+aGRyY2FjaGUgPSBzcG9vbF9uZXdfaGRyY2FjaGUoKTsKIApAQCAtMjkyNCw2ICsy
OTI2LDkgQEAgdm9pZCBtc2dfZnJlZShtZXNzYWdlX2RhdGFfdCAqbSkKIAl9CiAJZnJlZShtLT5y
Y3B0KTsKICAgICB9CisgICAgaWYgKG0tPmRhdGUpIHsKKwlmcmVlKG0tPmRhdGUpOworICAgIH0K
IAogICAgIHNwb29sX2ZyZWVfaGRyY2FjaGUobS0+aGRyY2FjaGUpOwogCkBAIC0zMDQ3LDkgKzMw
NTIsMTMgQEAgc3RhdGljIGludCBzYXZlbXNnKG1lc3NhZ2VfZGF0YV90ICptLCBGSUxFICpmKQog
CWNoYXIgZGF0ZXN0cls4MF07CiAKIAlyZmM4MjJkYXRlX2dlbihkYXRlc3RyLCBzaXplb2YoZGF0
ZXN0ciksIG5vdyk7CisJbS0+ZGF0ZSA9IHhzdHJkdXAoZGF0ZXN0cik7CiAJZnByaW50ZihmLCAi
RGF0ZTogJXNcclxuIiwgZGF0ZXN0cik7CiAJc3Bvb2xfY2FjaGVfaGVhZGVyKHhzdHJkdXAoIkRh
dGUiKSwgeHN0cmR1cChkYXRlc3RyKSwgbS0+aGRyY2FjaGUpOwogICAgIH0KKyAgICBlbHNlIHsK
KwltLT5kYXRlID0geHN0cmR1cChib2R5WzBdKTsKKyAgICB9CiAKICAgICAvKiBnZXQgY29udHJv
bCAqLwogICAgIGlmICgoYm9keSA9IHNwb29sX2dldGhlYWRlcihtLT5oZHJjYWNoZSwgImNvbnRy
b2wiKSkgIT0gTlVMTCkgewpAQCAtMzI3OSw2ICszMjg4LDcgQEAgc3RhdGljIGludCBkZWxpdmVy
KG1lc3NhZ2VfZGF0YV90ICptc2cpCiAgICAgdW5zaWduZWQgbG9uZyB1aWQ7CiAgICAgc3RydWN0
IGJvZHkgKmJvZHkgPSBOVUxMOwogICAgIHN0cnVjdCBkZXN0ICpkbGlzdCA9IE5VTEw7CisgICAg
ZHVwbGljYXRlX2tleV90IGRrZXkgPSB7bXNnLT5pZCwgTlVMTCwgbXNnLT5kYXRlfTsKIAogICAg
IC8qIGNoZWNrIEFDTHMgb2YgYWxsIG1haWxib3hlcyAqLwogICAgIGZvciAobiA9IDA7IG4gPCBt
c2ctPnJjcHRfbnVtOyBuKyspIHsKQEAgLTMyODYsNiArMzI5Niw3IEBAIHN0YXRpYyBpbnQgZGVs
aXZlcihtZXNzYWdlX2RhdGFfdCAqbXNnKQogCiAJLyogbG9vayBpdCB1cCAqLwogCXIgPSBtbG9v
a3VwKHJjcHQsICZzZXJ2ZXIsICZhY2wsIE5VTEwpOworCWRrZXkudG8gPSByY3B0OwogCWlmIChy
KSByZXR1cm4gSU1BUF9NQUlMQk9YX05PTkVYSVNURU5UOwogCiAJaWYgKCEoYWNsICYmIChteXJp
Z2h0cyA9IGN5cnVzX2FjbF9teXJpZ2h0cyhubnRwX2F1dGhzdGF0ZSwgYWNsKSkgJiYKQEAgLTMz
MDEsOSArMzMxMiw5IEBAIHN0YXRpYyBpbnQgZGVsaXZlcihtZXNzYWdlX2RhdGFfdCAqbXNnKQog
CSAgICBzdHJ1Y3QgYXBwZW5kc3RhdGUgYXM7CiAKIAkgICAgaWYgKG1zZy0+aWQgJiYgCi0JCWR1
cGxpY2F0ZV9jaGVjayhtc2ctPmlkLCBzdHJsZW4obXNnLT5pZCksIHJjcHQsIHN0cmxlbihyY3B0
KSkpIHsKKwkJZHVwbGljYXRlX2NoZWNrKCZka2V5KSkgewogCQkvKiBkdXBsaWNhdGUgbWVzc2Fn
ZSAqLwotCQlkdXBsaWNhdGVfbG9nKG1zZy0+aWQsIHJjcHQsICJubnRwIGRlbGl2ZXJ5Iik7CisJ
CWR1cGxpY2F0ZV9sb2coJmRrZXksICJubnRwIGRlbGl2ZXJ5Iik7CiAJCWNvbnRpbnVlOwogCSAg
ICB9CiAKQEAgLTMzMTksMTQgKzMzMzAsMTIgQEAgc3RhdGljIGludCBkZWxpdmVyKG1lc3NhZ2Vf
ZGF0YV90ICptc2cpCiAJCSAgICByID0gYXBwZW5kX2Zyb21zdHJlYW0oJmFzLCAmYm9keSwgbXNn
LT5kYXRhLCBtc2ctPnNpemUsIDAsCiAJCQkJCSAgKGNvbnN0IGNoYXIgKiopIE5VTEwsIDApOwog
CQl9Ci0JCWlmIChyIHx8IChtc2ctPmlkICYmICAgCi0JCQkgIGR1cGxpY2F0ZV9jaGVjayhtc2ct
PmlkLCBzdHJsZW4obXNnLT5pZCksCi0JCQkJCSAgcmNwdCwgc3RybGVuKHJjcHQpKSkpIHsgIAor
CQlpZiAociB8fCAoIG1zZy0+aWQgJiYgZHVwbGljYXRlX2NoZWNrKCZka2V5KSApICkgeyAgICAK
IAkJICAgIGFwcGVuZF9hYm9ydCgmYXMpOwogICAgICAgICAgICAgICAgICAgIAogCQkgICAgaWYg
KCFyKSB7CiAJCQkvKiBkdXBsaWNhdGUgbWVzc2FnZSAqLwotCQkJZHVwbGljYXRlX2xvZyhtc2ct
PmlkLCByY3B0LCAibm50cCBkZWxpdmVyeSIpOworCQkJZHVwbGljYXRlX2xvZygmZGtleSwgIm5u
dHAgZGVsaXZlcnkiKTsKIAkJCWNvbnRpbnVlOwogCQkgICAgfSAgICAgICAgICAgIAogCQl9ICAg
ICAgICAgICAgICAgIApAQCAtMzMzNiw4ICszMzQ1LDcgQEAgc3RhdGljIGludCBkZWxpdmVyKG1l
c3NhZ2VfZGF0YV90ICptc2cpCiAJICAgIH0KIAogCSAgICBpZiAoIXIgJiYgbXNnLT5pZCkKLQkJ
ZHVwbGljYXRlX21hcmsobXNnLT5pZCwgc3RybGVuKG1zZy0+aWQpLCByY3B0LCBzdHJsZW4ocmNw
dCksCi0JCQkgICAgICAgdGltZShOVUxMKSwgdWlkKTsKKwkJZHVwbGljYXRlX21hcmsoJmRrZXks
IHRpbWUoTlVMTCksIHVpZCk7CiAKIAkgICAgaWYgKHIpIHJldHVybiByOwogCkBAIC0zNTA5LDcg
KzM1MTcsOCBAQCBzdGF0aWMgaW50IGNhbmNlbChtZXNzYWdlX2RhdGFfdCAqbXNnKQogICAgIC8q
IHN0b3JlIG1zZ2lkIG9mIGNhbmNlbGxlZCBtZXNzYWdlIGZvciBJSEFWRS9DSEVDSy9UQUtFVEhJ
UwogICAgICAqIChpbiBjYXNlIHdlIGhhdmVuJ3QgcmVjZWl2ZWQgdGhlIG1lc3NhZ2UgeWV0KQog
ICAgICAqLwotICAgIGR1cGxpY2F0ZV9tYXJrKG1zZ2lkLCBzdHJsZW4obXNnaWQpLCAiIiwgMCwg
MCwgdGltZShOVUxMKSk7CisgICAgZHVwbGljYXRlX2tleV90IGRrZXkgPSB7bXNnaWQsICIiLCAi
In07CisgICAgZHVwbGljYXRlX21hcmsoJmRrZXksIDAsIHRpbWUoTlVMTCkpOwogCiAgICAgcmV0
dXJuIHI7CiB9Cg==
</data>        

          </attachment>
      

    </bug>

</bugzilla>