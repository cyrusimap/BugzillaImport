<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3602</bug_id>
          
          <creation_ts>2011-11-23 08:00 EDT</creation_ts>
          <short_desc>configuration with uppercase</short_desc>
          <delta_ts>2011-12-30 16:53:19 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.3.x</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>2.4.13</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Christophe Z">christophe.zbierski@atos.net</reporter>
          <assigned_to name="Bron Gondwana">brong@fastmail.fm</assigned_to>
          
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Christophe Z">christophe.zbierski@atos.net</who>
            <bug_when>2011-11-23 08:00:06 EDT</bug_when>
            <thetext>There is a problem between imapd.conf and cyrus.conf for overload setting. If we use uppercase in the name service, overloading does not work.

The patch is simple, using a new variable (lower_string) that contains config_ident in lowercase.


example (libconf.c) :

const char *config_getoverflowstring(const char *key, const char *def)
{
    char buf[256];
    char *ret = NULL;
    char *lower_string = NULL;

    if (!config_filename) return 0;

    /* First lookup &lt;ident&gt;_key, to see if we have a service-specific
     * override */

    if(config_ident) {
	lower_string = strdup(config_ident);
	lcase(lower_string);
	if(snprintf(buf,sizeof(buf),&quot;%s_%s&quot;, lower_string,key) == -1)
	    fatal(&quot;key too long in config_getoverflowstring&quot;, EC_TEMPFAIL);
	ret = hash_lookup(buf, &amp;confighash);
	free(lower_string);
    }
    
    /* No service-specific override, check the actual key */
    if(!ret)
	ret = hash_lookup(key, &amp;confighash);

    /* Return what we got or the default */
    return ret ? ret : def;
}</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2011-12-29 06:53:19 EDT</bug_when>
            <thetext>Ok - this will be in 2.4.13.  I went with the less invasive &quot;lcase(buf)&quot;.

Bron.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>