<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3553</bug_id>
          
          <creation_ts>2011-09-14 04:46 EDT</creation_ts>
          <short_desc>Invalid QRESYNC parameter list in Select</short_desc>
          <delta_ts>2012-01-19 07:50:00 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.4.11</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P1</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>2.4.13</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="alec">alec@alec.pl</reporter>
          <assigned_to name="Bron Gondwana">brong@fastmail.fm</assigned_to>
          <cc>gnb@fastmail.fm</cc>
    
    <cc>vanmeeuwen@kolabsys.com</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="alec">alec@alec.pl</who>
            <bug_when>2011-09-14 04:46:58 EDT</bug_when>
            <thetext>Created an attachment (id=1422)
Patch fixing the issue

C: A0005 ENABLE QRESYNC
S: * ENABLED QRESYNC CONDSTORE
S: A0005 OK Completed
C: A0006 SELECT INBOX (QRESYNC (1309794587 944))
S: * ENABLED QRESYNC CONDSTORE
S: A0006 BAD Invalid QRESYNC parameter list in Select</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Jeroen van Meeuwen (Kolab Systems)">vanmeeuwen@kolabsys.com</who>
            <bug_when>2011-09-14 05:32:54 EDT</bug_when>
            <thetext>Applied and pushed to master, cherry-picked to 2.4.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2011-09-14 05:42:30 EDT</bug_when>
            <thetext>Oh yeah, you&apos;re quite right.  I didn&apos;t test it with Murder at all.  Sorry.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Jeroen van Meeuwen (Kolab Systems)">vanmeeuwen@kolabsys.com</who>
            <bug_when>2011-09-14 06:02:05 EDT</bug_when>
            <thetext>(In reply to comment #2)
&gt; Oh yeah, you&apos;re quite right.  I didn&apos;t test it with Murder at all.  Sorry.

No problem, we&apos;re glad to be able to find / fix this issue :P

That said, I&apos;m going to want to be able to have Cassandane run against an existing Murder deployment...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Greg Banks">gnb@fastmail.fm</who>
            <bug_when>2011-09-15 02:54:49 EDT</bug_when>
            <thetext>&gt; That said, I&apos;m going to want to be able to have Cassandane run against an
existing Murder deployment...

Cassandane is designed to set up it&apos;s own Cyrus instances rather than run against existing ones.  This was entirely deliberate and there&apos;s a bunch of reasons for it, but I think that predictable and reproducible setups, and the avoidance of state leakage between tests, are sufficient reasons.

Cassandane test cases are by design capable of starting multiple Cyrus instances and controlling their configuration files to connect the instances in any way necessary; this is how we test replication scenarios.  It was always my intention to add murder support.

The tricky bit is &quot;how do we convince Cassandane to go run test X once for single instance and then once again for a murder&quot;?  Because the alternative is to have two copies of every test that needs to be run against a murder, which would be just nuts.  I&apos;m not entirely sure what the best approach is for this, but I&apos;m betting that something like parameterised tests is the Right Way...except that Test::Unit doesn&apos;t seem to support those.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2012-01-19 07:50:00 EDT</bug_when>
            <thetext>Moving to correct location</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1422</attachid>
            <date>2011-09-14 04:46 EDT</date>
            <desc>Patch fixing the issue</desc>
            <filename>imapd.qresync.patch</filename>
            <type>text/plain</type>
            <size>767</size>
            <attacher>alec@alec.pl</attacher>
            
              <data encoding="base64">LS0tIGltYXBkLmMub2xkCTIwMTEtMDktMTQgMTA6MzY6NTEuMDAwMDAwMDAwICswMjAwCisrKyBp
bWFwZC5jCTIwMTEtMDktMTQgMTA6NDA6MzEuMDAwMDAwMDAwICswMjAwCkBAIC0zNzUzLDcgKzM3
NTMsNyBAQAogCXByb3RfcHJpbnRmKGJhY2tlbmRfY3VycmVudC0+b3V0LCAiJXMgJXMgeyIgU0la
RV9UX0ZNVCAiK31cclxuJXMiLAogCQkgICAgdGFnLCBjbWQsIHN0cmxlbihuYW1lKSwgbmFtZSk7
CiAJaWYgKHYtPnVpZHZhbGlkaXR5KSB7Ci0JICAgIHByb3RfcHJpbnRmKGJhY2tlbmRfY3VycmVu
dC0+b3V0LCAiIChRUkVTWU5DICVsdSAiIE1PRFNFUV9GTVQsCisJICAgIHByb3RfcHJpbnRmKGJh
Y2tlbmRfY3VycmVudC0+b3V0LCAiIChRUkVTWU5DICglbHUgIiBNT0RTRVFfRk1ULAogCQkJdi0+
dWlkdmFsaWRpdHksIHYtPm1vZHNlcSk7CiAJICAgIGlmICh2LT5zZXF1ZW5jZSkgewogCQlwcm90
X3ByaW50ZihiYWNrZW5kX2N1cnJlbnQtPm91dCwgIiAlcyIsIHYtPnNlcXVlbmNlKTsKQEAgLTM3
NjIsNyArMzc2Miw3IEBACiAJCXByb3RfcHJpbnRmKGJhY2tlbmRfY3VycmVudC0+b3V0LCAiICgl
cyAlcykiLAogCQkJICAgIHYtPm1hdGNoX3NlcSwgdi0+bWF0Y2hfdWlkKTsKIAkgICAgfQotCSAg
ICBwcm90X3ByaW50ZihiYWNrZW5kX2N1cnJlbnQtPm91dCwgIikiKTsKKwkgICAgcHJvdF9wcmlu
dGYoYmFja2VuZF9jdXJyZW50LT5vdXQsICIpKSIpOwogCX0KIAlwcm90X3ByaW50ZihiYWNrZW5k
X2N1cnJlbnQtPm91dCwgIlxyXG4iKTsKIAo=
</data>        

          </attachment>
      

    </bug>

</bugzilla>