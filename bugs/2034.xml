<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2034</bug_id>
          
          <creation_ts>2003-04-25 14:36 EDT</creation_ts>
          <short_desc>imclient_starttls is undocumented</short_desc>
          <delta_ts>2010-10-18 12:43:01 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>lib</component>
          <version>2.1.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>other</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rob Siemborski">rjs3@andrew.cmu.edu</reporter>
          <assigned_to name="Ken Murchison">ken@oceana.com</assigned_to>
          <cc>patl@curl.com</cc>
    
    <cc>ro@TechFak.Uni-Bielefeld.DE</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-04-25 14:36:59 EDT</bug_when>
            <thetext>Although the imclient_starttls function seems to be a public part of the
imclient API, it is not documented on the imclient(3) man page.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-07-03 13:40:19 EDT</bug_when>
            <thetext>Additionally its unclear that we should be using HAVE_SSL #ifdef&apos;s around its
definition in imclient.h, since this is the public API header.

Ken, can you handle this?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Patrick J. LoPresti">patl@curl.com</who>
            <bug_when>2004-10-25 14:04:39 EDT</bug_when>
            <thetext>Created an attachment (id=311)
imclient STARTTLS cleanup and documentation

I sent this to the mailing list but it was never acted upon.  I
am attaching it here so that it is not forgotten.

This patch makes the following changes, most of which are pretty trivial
and all of which are helpful to adding TLS support to the Cyrus::IMAP Perl
module:

  - Remove the global variables var_tls_CAfile and var_tls_CApath,
    replacing them with arguments CAfile and CApath to
    imclient_starttls().

  - Remove the unused arguments (verifydepth and layer) to
    imclient_starttls().

  - Rename the arguments &quot;var_tls_cert_file&quot; and &quot;var_tls_key_file&quot; to
    &quot;cert_file&quot; and &quot;key_file&quot;.  (I felt this reads better in the
    documentation.)

  - Permit NULL in addition to the empty string for cert_file,
    cert_key, CAfile, and CApath.

  - Add imclient_havetls() function which queries for TLS (HAVE_SSL)
    support.

  - Export imclient_havetls() and imclient_starttls() in imclient.h
    unconditionally.  The latter returns an error if it is called when
    HAVE_SSL is undef.

  - Document imclient_havetls() and imclient_starttls() in
    imclient(3).
</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>311</attachid>
            <date>2004-10-25 14:04 EDT</date>
            <desc>imclient STARTTLS cleanup and documentation</desc>
            <filename>starttls_doc_patch.txt</filename>
            <type>text/plain</type>
            <size>5875</size>
            <attacher>patl@curl.com</attacher>
            
              <data encoding="base64">SW5kZXg6IGN5cnVzLWN2cy9saWIvaW1jbGllbnQuYwo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvY3Zz
L3NyYy9jeXJ1cy9saWIvaW1jbGllbnQuYyx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS44NApkaWZm
IC11IC1yMS44NCBpbWNsaWVudC5jCi0tLSBjeXJ1cy1jdnMvbGliL2ltY2xpZW50LmMJMjIgT2N0
IDIwMDMgMTg6NTA6MTIgLTAwMDAJMS44NAorKysgY3lydXMtY3ZzL2xpYi9pbWNsaWVudC5jCTIz
IFNlcCAyMDA0IDE5OjU2OjU4IC0wMDAwCkBAIC0xNjcwLDggKzE2NzAsNiBAQAogI2VuZGlmCiB9
CiAKLWNoYXIgKnZhcl90bHNfQ0FmaWxlPSIiOwotY2hhciAqdmFyX3Rsc19DQXBhdGg9IiI7CiAg
LyoKICAgKiBUaGlzIGlzIHRoZSBzZXR1cCByb3V0aW5lIGZvciB0aGUgU1NMIGNsaWVudC4gCiAg
ICoKQEAgLTE2NzksNyArMTY3NywxMCBAQAogICAqLwogCiBzdGF0aWMgaW50IHRsc19pbml0X2Ns
aWVudGVuZ2luZShzdHJ1Y3QgaW1jbGllbnQgKmltY2xpZW50LAotCQkJCSBpbnQgdmVyaWZ5ZGVw
dGgsIGNoYXIgKnZhcl90bHNfY2VydF9maWxlLCBjaGFyICp2YXJfdGxzX2tleV9maWxlKQorCQkJ
CSBpbnQgdmVyaWZ5ZGVwdGgsIGNoYXIgKnZhcl90bHNfY2VydF9maWxlLAorICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgY2hhciAqdmFyX3Rsc19rZXlfZmlsZSwKKyAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgIGNoYXIgKnZhcl90bHNfQ0FmaWxlLAorICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgY2hhciAqdmFyX3Rsc19DQXBhdGgpCiB7CiAgICAgaW50ICAg
ICBvZmYgPSAwOwogICAgIGludCAgICAgdmVyaWZ5X2ZsYWdzID0gU1NMX1ZFUklGWV9OT05FOwpA
QCAtMTcwNywxMSArMTcwOCwxMSBAQAogICAgIAogICAgIC8qIGRlYnVnZ2luZyAgIFNTTF9DVFhf
c2V0X2luZm9fY2FsbGJhY2soaW1jbGllbnQtPnRsc19jdHgsIGFwcHNfc3NsX2luZm9fY2FsbGJh
Y2spOyAqLwogCi0gICAgaWYgKHN0cmxlbih2YXJfdGxzX0NBZmlsZSkgPT0gMCkKKyAgICBpZiAo
dmFyX3Rsc19DQWZpbGUgPT0gTlVMTCB8fCBzdHJsZW4odmFyX3Rsc19DQWZpbGUpID09IDApCiAJ
Q0FmaWxlID0gTlVMTDsKICAgICBlbHNlCiAJQ0FmaWxlID0gdmFyX3Rsc19DQWZpbGU7Ci0gICAg
aWYgKHN0cmxlbih2YXJfdGxzX0NBcGF0aCkgPT0gMCkKKyAgICBpZiAodmFyX3Rsc19DQXBhdGgg
PT0gTlVMTCB8fCBzdHJsZW4odmFyX3Rsc19DQXBhdGgpID09IDApCiAJQ0FwYXRoID0gTlVMTDsK
ICAgICBlbHNlCiAJQ0FwYXRoID0gdmFyX3Rsc19DQXBhdGg7CkBAIC0xNzIyLDExICsxNzIzLDEx
IEBACiAJICAgIHByaW50ZigiWyBUTFMgZW5naW5lOiBjYW5ub3QgbG9hZCBDQSBkYXRhIF1cbiIp
OwogCSAgICByZXR1cm4gLTE7CiAJfQotICAgIGlmIChzdHJsZW4odmFyX3Rsc19jZXJ0X2ZpbGUp
ID09IDApCisgICAgaWYgKHZhcl90bHNfY2VydF9maWxlID09IE5VTEwgfHwgc3RybGVuKHZhcl90
bHNfY2VydF9maWxlKSA9PSAwKQogCWNfY2VydF9maWxlID0gTlVMTDsKICAgICBlbHNlCiAJY19j
ZXJ0X2ZpbGUgPSB2YXJfdGxzX2NlcnRfZmlsZTsKLSAgICBpZiAoc3RybGVuKHZhcl90bHNfa2V5
X2ZpbGUpID09IDApCisgICAgaWYgKHZhcl90bHNfa2V5X2ZpbGUgPT0gTlVMTCB8fCBzdHJsZW4o
dmFyX3Rsc19rZXlfZmlsZSkgPT0gMCkKIAljX2tleV9maWxlID0gTlVMTDsKICAgICBlbHNlCiAJ
Y19rZXlfZmlsZSA9IHZhcl90bHNfa2V5X2ZpbGU7CkBAIC0xOTczLDEzICsxOTc0LDIzIEBACiAJ
ICAgdGxzX2NpcGhlcl91c2ViaXRzLCB0bHNfY2lwaGVyX2FsZ2JpdHMpOyovCiAgICAgcmV0dXJu
IDA7CiB9CisjZW5kaWYgLyogSEFWRV9TU0wgKi8KKworaW50IGltY2xpZW50X2hhdmV0bHMgKCkg
eworI2lmZGVmIEhBVkVfU1NMCisgIHJldHVybiAxOworI2Vsc2UKKyAgcmV0dXJuIDA7CisjZW5k
aWYKK30KIAogaW50IGltY2xpZW50X3N0YXJ0dGxzKHN0cnVjdCBpbWNsaWVudCAqaW1jbGllbnQs
Ci0JCQkgICAgIGludCB2ZXJpZnlkZXB0aCBfX2F0dHJpYnV0ZV9fKCh1bnVzZWQpKSwKLQkJCSAg
ICAgY2hhciAqdmFyX3Rsc19jZXJ0X2ZpbGUsIAotCQkJICAgICBjaGFyICp2YXJfdGxzX2tleV9m
aWxlLAotCQkJICAgICBpbnQgKmxheWVyIF9fYXR0cmlidXRlX18oKHVudXNlZCkpKQorCQkJICAg
ICBjaGFyICpjZXJ0X2ZpbGUsCisJCQkgICAgIGNoYXIgKmtleV9maWxlLAorICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICBjaGFyICpDQWZpbGUsCisgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIGNoYXIgKkNBcGF0aCkKIHsKKyNpZmRlZiBIQVZFX1NTTAogICBpbnQgcmVzdWx0OwogICBz
dHJ1Y3QgYXV0aHJlc3VsdCB0aGVyZXN1bHQ7CiAgIHVuc2lnbmVkIHNzZjsKQEAgLTE5OTQsNyAr
MjAwNSw4IEBACiAgICAgaW1jbGllbnRfcHJvY2Vzc29uZWV2ZW50KGltY2xpZW50KTsKICAgfQog
Ci0gIHJlc3VsdD10bHNfaW5pdF9jbGllbnRlbmdpbmUoaW1jbGllbnQsIDEwLCB2YXJfdGxzX2Nl
cnRfZmlsZSwgdmFyX3Rsc19rZXlfZmlsZSk7CisgIHJlc3VsdD10bHNfaW5pdF9jbGllbnRlbmdp
bmUoaW1jbGllbnQsIDEwLCBjZXJ0X2ZpbGUsIGtleV9maWxlLAorICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIENBZmlsZSwgQ0FwYXRoKTsKICAgaWYgKHJlc3VsdCE9MCkKICAgewogICAg
IHByaW50ZigiWyBUTFMgZW5naW5lIGZhaWxlZCBdXG4iKTsKQEAgLTIwMzAsNSArMjA0Miw4IEBA
CiAgIGlmIChyZXN1bHQhPVNBU0xfT0spIHJldHVybiAxOwogCiAgIHJldHVybiAwOwotfQorI2Vs
c2UKKyAgcHJpbnRmKCJbIFRMUyBzdXBwb3J0IG5vdCBwcmVzZW50IChpbWNsaWVudF9zdGFydHRs
cykgXVxuIik7CisgIHJldHVybiAxOwogI2VuZGlmIC8qIEhBVkVfU1NMICovCit9CkluZGV4OiBj
eXJ1cy1jdnMvbGliL2ltY2xpZW50LmgKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMvY3ly
dXMvbGliL2ltY2xpZW50LmgsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMjYKZGlmZiAtdSAtcjEu
MjYgaW1jbGllbnQuaAotLS0gY3lydXMtY3ZzL2xpYi9pbWNsaWVudC5oCTIyIE9jdCAyMDAzIDE4
OjUwOjEyIC0wMDAwCTEuMjYKKysrIGN5cnVzLWN2cy9saWIvaW1jbGllbnQuaAkyMyBTZXAgMjAw
NCAxOTo1Njo1OCAtMDAwMApAQCAtODgsMTQgKzg4LDEzIEBACiAJCQkJIGludCBtaW5zc2YsIAog
CQkJCSBpbnQgbWF4c3NmKTsKIAorZXh0ZXJuIGludCBpbWNsaWVudF9oYXZlX3RscyAodm9pZCk7
CiAKLSNpZmRlZiBIQVZFX1NTTAogZXh0ZXJuIGludCBpbWNsaWVudF9zdGFydHRscyhzdHJ1Y3Qg
aW1jbGllbnQgKmltY2xpZW50LAotCQkJICAgICBpbnQgdmVyaWZ5ZGVwdGgsCi0JCQkgICAgIGNo
YXIgKnZhcl90bHNfY2VydF9maWxlLCAKLQkJCSAgICAgY2hhciAqdmFyX3Rsc19rZXlfZmlsZSwK
LQkJCSAgICAgaW50ICpsYXllcik7Ci0jZW5kaWYgLyogSEFWRV9TU0wgKi8KKwkJCSAgICAgY2hh
ciAqY2VydF9maWxlLCAKKwkJCSAgICAgY2hhciAqa2V5X2ZpbGUsCisgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgIGNoYXIgKkNBZmlsZSwKKyAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
Y2hhciAqQ0FwYXRoKTsKIAogZXh0ZXJuIHZvaWQgaW1jbGllbnRfd3JpdGUgKHN0cnVjdCBpbWNs
aWVudCAqaW1jbGllbnQsCiAJCQkgICAgY29uc3QgY2hhciAqcywgc2l6ZV90IGxlbik7CkluZGV4
OiBjeXJ1cy1jdnMvbWFuL2ltY2xpZW50LjMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2N2cy9zcmMv
Y3lydXMvbWFuL2ltY2xpZW50LjMsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTAKZGlmZiAtdSAt
cjEuMTAgaW1jbGllbnQuMwotLS0gY3lydXMtY3ZzL21hbi9pbWNsaWVudC4zCTIyIE9jdCAyMDAz
IDE4OjUwOjEzIC0wMDAwCTEuMTAKKysrIGN5cnVzLWN2cy9tYW4vaW1jbGllbnQuMwkyMyBTZXAg
MjAwNCAxOTo1Njo1OCAtMDAwMApAQCAtNzAsNiArNzAsMTAgQEAKIC5CSSAidm9pZCBpbWNsaWVu
dF9wcm9jZXNzb25lZXZlbnQgKHN0cnVjdCBpbWNsaWVudCAqIiBpbWNsaWVudCAiKTsiCiAuc3Ag
LjAyNWkKIC5CSSAiaW50IGltY2xpZW50X2F1dGhlbnRpY2F0ZSAoc3RydWN0IGltY2xpZW50ICoi
IGltY2xpZW50ICIsIHN0cnVjdCBzYXNsX2NsaWVudCAqKiIgYXZhaWxtZWNoICIsIGNvbnN0IGNo
YXIgKiIgc2VydmljZSAiLCBjb25zdCBjaGFyICoiIHVzZXIgIiwgaW50ICIgcHJvdGFsbG93ZWQg
Iik7IgorLnNwIC4wMjVpCisuQkkgImludCBpbWNsaWVudF9oYXZldGxzICgpOyIKKy5zcCAuMDI1
aQorLkJJICJpbnQgaW1jbGllbnRfc3RhcnR0bHMgKHN0cnVjdCBpbWNsaWVudCAqIiBpbWNsaWVu
dCAiLCBjaGFyICoiIGNlcnRfZmlsZSAiLCBjaGFyICoiIGtleV9maWxlICIsIGNoYXIgKiIgQ0Fm
aWxlICIsIGNoYXIgKiIgQ0FwYXRoICIpOyIKIAogLlNIIERFU0NSSVBUSU9OCiBUaGUgaW1jbGll
bnQgbGlicmFyeSBmdW5jdGlvbnMgYXJlIGRpc3RyaWJ1dGVkIHdpdGggQ3lydXMgSU1BUCBhbmQg
SU1TUC4KQEAgLTI1NSw2ICsyNTksMzIgQEAKIE9uIHN1Y2Nlc3MsIDAgaXMgcmV0dXJuZWQuICBP
biBmYWlsdXJlIChpLmUuLCAiQkFEIiBrZXlib2FyZCwgb3Igbm8KIGF1dGhlbnRpY2F0aW9uIG1l
Y2hhbmlzbXMgd29ya2VkKSwgMSBpcyByZXR1cm5lZC4gT24gZXh0cmVtZSBmYWlsdXJlCiAocHJl
bWF0dXJlICJPSyIpLCAyIGlzIHJldHVybmVkLgorLklQIFxmQlxpbWNsaWVudF9oYXZldGxzKCkg
XGZQNQorUmV0dXJucyBhIEJvb2xlYW4gaW5kaWNhdGluZyB3aGV0aGVyIHRoZQorLkIgaW1jbGll
bnQKK2xpYnJhcnkgd2FzIGNvbXBpbGVkIHdpdGggVExTIChTU0wpIHN1cHBvcnQuICBJZiBzbywK
Ky5CIGltY2xpZW50X3N0YXJ0dGxzKCkKK21heSBiZSB1c2VkIHRvIHNlY3VyZSB0aGUgSU1BUCBj
b25uZWN0aW9uLgorLklQIFxmQlxpbWNsaWVudF9zdGFydHRscygpIFxmUDUKK0lzc3VlcyBhIFNU
QVJUVExTIGNvbW1hbmQgb24gYW4gZXhpc3RpbmcgSU1BUCBjb25uZWN0aW9uIGFuZAorbmVnb3Rp
YXRlcyB0aGUgc2VjdXJlIGxpbmsuICBUaGUKKy5CIGNlcnRfZmlsZQorYW5kCisuQiBrZXlfZmls
ZQorYXJndW1lbnRzIHNwZWNpZnkgdGhlIGNsaWVudCBjZXJ0aWZpY2F0ZSBhbmQgc2VjcmV0IGtl
eSB0byB1c2UgdG8KK2F1dGhlbnRpY2F0ZSBvdXJzZWx2ZXMgdG8gdGhlIHNlcnZlci4gIElmIGNs
aWVudCBhdXRoZW50aWNhdGlvbiBpcyBub3QKK25lZWRlZCwgc2V0IGJvdGggb2YgdGhlc2UgYXJn
dW1lbnRzIHRvIE5VTEwuCisuc3AKK1RoZQorLkIgQ0FmaWxlCithbmQKKy5CIENBcGF0aAorYXJn
dW1lbnRzIHNwZWNpZnkgYSBmaWxlIG9yIGRpcmVjdG9yeSwgcmVzcGVjdGl2ZWx5LCBvZiBDQQor
Y2VydGlmaWNhdGVzIGZvciB2YWxpZGF0aW5nIHNlcnZlciBjZXJ0aWZpY2F0ZXMuICAoU2VlCisu
QiBTU0xfQ1RYX2xvYWRfdmVyaWZ5X2xvY2F0aW9ucygzKQorZm9yIGRldGFpbHMuKSAgSWYgYm90
aCBvZiB0aGVzZSBhcmUgTlVMTCwgdGhlIGNsaWVudCB3aWxsIGJlIHVuYWJsZSB0bwordmFsaWRh
dGUgdGhlIHNlcnZlcidzIGNlcnRpZmljYXRlLCBpbiB3aGljaCBjYXNlIHRoZSBjb25uZWN0aW9u
IG1heQorc3VjY2VlZCBidXQgYSB3YXJuaW5nIHdpbGwgYmUgcHJpbnRlZCB0byBzdGRvdXQuCiAK
IC5TSCBFWEFNUExFUwogVGhlIGZvbGxvd2luZyBjb2RlIGlzIGEgcG9zc2libGUgc2tlbGV0aW9u
IG9mCg==
</data>        

          </attachment>
      

    </bug>

</bugzilla>