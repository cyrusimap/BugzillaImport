<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2422</bug_id>
          
          <creation_ts>2004-04-21 05:58 EDT</creation_ts>
          <short_desc>Concurrent mailbox fails sometimes due to a broken server response</short_desc>
          <delta_ts>2010-10-18 12:43:05 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.1.x</version>
          <rep_platform>PC</rep_platform>
          <op_sys>FreeBSD</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Sergey Starosek">star@sunbay.com</reporter>
          <assigned_to name="Rob Siemborski">rjs3@andrew.cmu.edu</assigned_to>
          <cc>tejblum@yandex-team.ru</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Sergey Starosek">star@sunbay.com</who>
            <bug_when>2004-04-21 05:58:46 EDT</bug_when>
            <thetext>Having configured gkrellm2 mailcheck plugin to check email in the same mailbox
(four different folder), it&apos;s sometimes fails due to corrupted response

Looking at the traffic between client and server it&apos;s visible that sometimes
server responds with a message that is actually syslog output:

* OK host.domain.com Cyrus IMAP4 v2.1.15 server ready
a001 LOGIN &quot;user&quot; &quot;password&quot;
&lt;181&gt;Apr 21 12:35:59 imapd[18993]: login: client.host.domain.com[192.168.4.103]
user plaintext a001 OK User logged in</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2004-04-21 11:13:38 EDT</bug_when>
            <thetext>This is truly odd.  Could something be going wrong with your syslog that causes
it to print to stdout instead of to the log file?

</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Sergey Starosek">star@sunbay.com</who>
            <bug_when>2004-04-21 11:51:08 EDT</bug_when>
            <thetext>I agree that this is trully odd. On the other hand I don&apos;t see how syslog
configuration can interfere imapd behavior. Imapd is started as a standalone
daemon from the rc.d script and thus its stdin/out cannot be affected by syslog
output.

Quickly grepped /etc/syslog.conf for imapd:
local6.notice                                   /var/log/imapd.log

I asked our admins for the possible reason of the problem. They changed prefork
parameter in the services section of cyrus.conf to a higher level (for the imap
service) and restarted the service. After this problem disappeared (at least I
can&apos;t reproduce it for now).

Any suggestions how to proceed?</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Sergey Starosek">star@sunbay.com</who>
            <bug_when>2004-04-21 11:56:37 EDT</bug_when>
            <thetext>To make it more detailed:

Not all but usually only one (random) connection of four fails because of broken
response. The rest finish successfully (it&apos;s visible from tcpdump output).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Derrick">shadow@andrew.cmu.edu</who>
            <bug_when>2004-09-14 16:00:56 EDT</bug_when>
            <thetext>Created an attachment (id=309)
diff of this fix
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Derrick">shadow@andrew.cmu.edu</who>
            <bug_when>2004-09-14 16:01:35 EDT</bug_when>
            <thetext>stdio handling change was committed on 9/8 (updated 9/9) to handle this, and
will be in the next release. a diff for 2.2 is attached to this bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Derrick">shadow@andrew.cmu.edu</who>
            <bug_when>2004-09-14 18:24:22 EDT</bug_when>
            <thetext>*** Bug 2359 has been marked as a duplicate of this bug. ***</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Kevin M. Myer">kevin_myer@iu13.org</who>
            <bug_when>2005-02-05 12:58:51 EDT</bug_when>
            <thetext>Glad to see that this is finally fixed.  I reported in back in 2001 to the list :D

http://asg.web.cmu.edu/archive/message.php?mailbox=archive.info-cyrus&amp;msg=11042

I ran across it again today when I was changing syslog entries on a mail server.

Is there a patch against 2.1 available?  </thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>309</attachid>
            <date>2004-09-14 16:00 EDT</date>
            <desc>diff of this fix</desc>
            <filename>diff</filename>
            <type>text/plain</type>
            <size>8895</size>
            <attacher>shadow@andrew.cmu.edu</attacher>
            
              <data encoding="base64">SW5kZXg6IGltYXAvaW1hcGQuYwo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBmaWxlOiAvYWZzL2FuZHJldy5jbXUu
ZWR1L3N5c3RlbS9jdnMvc3JjL2N5cnVzL2ltYXAvaW1hcGQuYyx2CnJldHJpZXZpbmcgcmV2aXNp
b24gMS40ODIKcmV0cmlldmluZyByZXZpc2lvbiAxLjQ4MwpkaWZmIC11IC1yMS40ODIgLXIxLjQ4
MwotLS0gaW1hcC9pbWFwZC5jCTMgU2VwIDIwMDQgMTg6MTM6MTcgLTAwMDAJMS40ODIKKysrIGlt
YXAvaW1hcGQuYwk4IFNlcCAyMDA0IDE5OjQ1OjIxIC0wMDAwCTEuNDgzCkBAIC0zOCw3ICszOCw3
IEBACiAgKiBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBVU0UgT1IgUEVSRk9STUFO
Q0UgT0YgVEhJUyBTT0ZUV0FSRS4KICAqLwogCi0vKiAkSWQ6IGltYXBkLmMsdiAxLjQ4MiAyMDA0
LzA5LzAzIDE4OjEzOjE3IGtlbjMgRXhwICQgKi8KKy8qICRJZDogaW1hcGQuYyx2IDEuNDgzIDIw
MDQvMDkvMDggMTk6NDU6MjEgc2hhZG93IEV4cCAkICovCiAKICNpbmNsdWRlIDxjb25maWcuaD4K
IApAQCAtNDMzLDYgKzQzMyw4IEBACiAKIHN0YXRpYyB2b2lkIGltYXBkX3Jlc2V0KHZvaWQpCiB7
CisgICAgaW50IG51bGxmZCA9IC0xOworCiAgICAgcHJvY19jbGVhbnVwKCk7CiAKICAgICBpZiAo
aW1hcGRfbWFpbGJveCkgewpAQCAtNDY3LDkgKzQ2OSwxNCBAQAogICAgIH0KICNlbmRpZgogCi0g
ICAgY3lydXNfY2xvc2Vfc29jaygwKTsgICAgCi0gICAgY3lydXNfY2xvc2Vfc29jaygxKTsKLSAg
ICBjeXJ1c19jbG9zZV9zb2NrKDIpOworICAgIG51bGxmZCA9IG9wZW4oIi9kZXYvbnVsbCIsIE9f
UkRPTkxZLCAwKTsKKyAgICBpZiAobnVsbGZkIDwgMCkgeworCWZhdGFsKCJvcGVuKCkgZmFpbGVk
IiwgRUNfVEVNUEZBSUwpOworICAgIH0KKyAgICBjeXJ1c19kdXAyX3NvY2sobnVsbGZkLCAwKTsK
KyAgICBjeXJ1c19kdXAyX3NvY2sobnVsbGZkLCAxKTsKKyAgICBjeXJ1c19kdXAyX3NvY2sobnVs
bGZkLCAyKTsKKyAgICBjbG9zZShudWxsZmQpOwogCiAgICAgc3RyY3B5KGltYXBkX2NsaWVudGhv
c3QsICJbbG9jYWxdIik7CiAgICAgaWYgKGltYXBkX2xvZ2ZkICE9IC0xKSB7CkluZGV4OiBpbWFw
L2xtdHBkLmMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2Fmcy9hbmRyZXcuY211LmVkdS9zeXN0ZW0v
Y3ZzL3NyYy9jeXJ1cy9pbWFwL2xtdHBkLmMsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuMTM3CnJl
dHJpZXZpbmcgcmV2aXNpb24gMS4xMzgKZGlmZiAtdSAtcjEuMTM3IC1yMS4xMzgKLS0tIGltYXAv
bG10cGQuYwk2IEp1bCAyMDA0IDIwOjAyOjIwIC0wMDAwCTEuMTM3CisrKyBpbWFwL2xtdHBkLmMJ
OCBTZXAgMjAwNCAxOTo0NToyMiAtMDAwMAkxLjEzOApAQCAtMSw2ICsxLDYgQEAKIC8qIGxtdHBk
LmMgLS0gUHJvZ3JhbSB0byBkZWxpdmVyIG1haWwgdG8gYSBtYWlsYm94CiAgKgotICogJElkOiBs
bXRwZC5jLHYgMS4xMzcgMjAwNC8wNy8wNiAyMDowMjoyMCBrZW4zIEV4cCAkCisgKiAkSWQ6IGxt
dHBkLmMsdiAxLjEzOCAyMDA0LzA5LzA4IDE5OjQ1OjIyIHNoYWRvdyBFeHAgJAogICogQ29weXJp
Z2h0IChjKSAxOTk4LTIwMDMgQ2FybmVnaWUgTWVsbG9uIFVuaXZlcnNpdHkuICBBbGwgcmlnaHRz
IHJlc2VydmVkLgogICoKICAqIFJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBi
aW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dApAQCAtMjA3LDYgKzIwNyw3IEBACiAJCSBjaGFy
ICoqZW52cCBfX2F0dHJpYnV0ZV9fKCh1bnVzZWQpKSkKIHsKICAgICBpbnQgb3B0OworICAgIGlu
dCBudWxsZmQgPSAtMTsKIAogICAgIGRlbGl2ZXJfaW4gPSBwcm90X25ldygwLCAwKTsKICAgICBk
ZWxpdmVyX291dCA9IHByb3RfbmV3KDEsIDEpOwpAQCAtMjM5LDkgKzI0MCwxNCBAQAogCWRlbGl2
ZXJfbG9nZmQgPSAtMTsKICAgICB9CiAKLSAgICBjeXJ1c19jbG9zZV9zb2NrKDApOwotICAgIGN5
cnVzX2Nsb3NlX3NvY2soMSk7Ci0gICAgY3lydXNfY2xvc2Vfc29jaygyKTsKKyAgICBudWxsZmQg
PSBvcGVuKCIvZGV2L251bGwiLCBPX1JET05MWSwgMCk7CisgICAgaWYgKG51bGxmZCA8IDApIHsK
KyAgICAgICBmYXRhbCgib3BlbigpIGZhaWxlZCIsIEVDX1RFTVBGQUlMKTsKKyAgICB9CisgICAg
Y3lydXNfZHVwMl9zb2NrKG51bGxmZCwgMCk7CisgICAgY3lydXNfZHVwMl9zb2NrKG51bGxmZCwg
MSk7CisgICAgY3lydXNfZHVwMl9zb2NrKG51bGxmZCwgMik7CisgICAgY2xvc2UobnVsbGZkKTsK
IAogICAgIHJldHVybiAwOwogfQpJbmRleDogaW1hcC9ubnRwZC5jCj09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZp
bGU6IC9hZnMvYW5kcmV3LmNtdS5lZHUvc3lzdGVtL2N2cy9zcmMvY3lydXMvaW1hcC9ubnRwZC5j
LHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjMzCnJldHJpZXZpbmcgcmV2aXNpb24gMS4zNQpkaWZm
IC11IC1yMS4zMyAtcjEuMzUKLS0tIGltYXAvbm50cGQuYwkxNSBKdWwgMjAwNCAyMjo0Mjo0NSAt
MDAwMAkxLjMzCisrKyBpbWFwL25udHBkLmMJOCBTZXAgMjAwNCAxOTo0NToyMiAtMDAwMAkxLjM1
CkBAIC0zOCw3ICszOCw3IEBACiAgKiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIE5FR0xJR0VOQ0Ug
T1IgT1RIRVIgVE9SVElPVVMgQUNUSU9OLCBBUklTSU5HCiAgKiBPVVQgT0YgT1IgSU4gQ09OTkVD
VElPTiBXSVRIIFRIRSBVU0UgT1IgUEVSRk9STUFOQ0UgT0YgVEhJUyBTT0ZUV0FSRS4KICAqCi0g
KiAkSWQ6IG5udHBkLmMsdiAxLjMzIDIwMDQvMDcvMTUgMjI6NDI6NDUgcmpzMyBFeHAgJAorICog
JElkOiBubnRwZC5jLHYgMS4zNSAyMDA0LzA5LzA4IDE5OjQ1OjIyIHNoYWRvdyBFeHAgJAogICov
CiAKIC8qCkBAIC00MTUsNiArNDE1LDcgQEAKIHN0YXRpYyB2b2lkIG5udHBfcmVzZXQodm9pZCkK
IHsKICAgICBpbnQgaTsKKyAgICBpbnQgbnVsbGZkID0gLTE7CiAKICAgICBwcm9jX2NsZWFudXAo
KTsKIApAQCAtNDU3LDkgKzQ1OCwxNCBAQAogICAgIH0KICNlbmRpZgogCi0gICAgY3lydXNfY2xv
c2Vfc29jaygwKTsKLSAgICBjeXJ1c19jbG9zZV9zb2NrKDEpOwotICAgIGN5cnVzX2Nsb3NlX3Nv
Y2soMik7CisgICAgbnVsbGZkID0gb3BlbigiL2Rldi9udWxsIiwgT19SRE9OTFksIDApOworICAg
IGlmIChudWxsZmQgPCAwKSB7CisgICAgICAgZmF0YWwoIm9wZW4oKSBmYWlsZWQiLCBFQ19URU1Q
RkFJTCk7CisgICAgfQorICAgIGN5cnVzX2R1cDJfc29jayhudWxsZmQsIDApOworICAgIGN5cnVz
X2R1cDJfc29jayhudWxsZmQsIDEpOworICAgIGN5cnVzX2R1cDJfc29jayhudWxsZmQsIDIpOwor
ICAgIGNsb3NlKG51bGxmZCk7CiAKICAgICBzdHJjcHkobm50cF9jbGllbnRob3N0LCAiW2xvY2Fs
XSIpOwogICAgIGlmIChubnRwX2xvZ2ZkICE9IC0xKSB7CkBAIC00OTYsNiArNTAyLDcgQEAKIAog
ICAgIG5udHBfZXhpc3RzID0gMDsKICAgICBubnRwX2N1cnJlbnQgPSAwOworICAgIGRpZF9leHRl
bnNpb25zID0gMDsKIH0KIAogLyoKSW5kZXg6IGltYXAvcG9wM2QuYwo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ClJDUyBm
aWxlOiAvYWZzL2FuZHJldy5jbXUuZWR1L3N5c3RlbS9jdnMvc3JjL2N5cnVzL2ltYXAvcG9wM2Qu
Yyx2CnJldHJpZXZpbmcgcmV2aXNpb24gMS4xNjEKcmV0cmlldmluZyByZXZpc2lvbiAxLjE2Mgpk
aWZmIC11IC1yMS4xNjEgLXIxLjE2MgotLS0gaW1hcC9wb3AzZC5jCTQgQXVnIDIwMDQgMTM6MDM6
MTYgLTAwMDAJMS4xNjEKKysrIGltYXAvcG9wM2QuYwk4IFNlcCAyMDA0IDE5OjQ1OjIyIC0wMDAw
CTEuMTYyCkBAIC00MCw3ICs0MCw3IEBACiAgKi8KIAogLyoKLSAqICRJZDogcG9wM2QuYyx2IDEu
MTYxIDIwMDQvMDgvMDQgMTM6MDM6MTYga2VuMyBFeHAgJAorICogJElkOiBwb3AzZC5jLHYgMS4x
NjIgMjAwNC8wOS8wOCAxOTo0NToyMiBzaGFkb3cgRXhwICQKICAqLwogI2luY2x1ZGUgPGNvbmZp
Zy5oPgogCkBAIC0xOTcsNiArMTk3LDggQEAKIAogc3RhdGljIHZvaWQgcG9wZF9yZXNldCh2b2lk
KQogeworICAgIGludCBudWxsZmQgPSAtMTsKKwogICAgIHByb2NfY2xlYW51cCgpOwogCiAgICAg
LyogY2xvc2UgbG9jYWwgbWFpbGJveCAqLwpAQCAtMjMzLDkgKzIzNSwxNCBAQAogICAgIH0KICNl
bmRpZgogCi0gICAgY3lydXNfY2xvc2Vfc29jaygwKTsKLSAgICBjeXJ1c19jbG9zZV9zb2NrKDEp
OwotICAgIGN5cnVzX2Nsb3NlX3NvY2soMik7CisgICAgbnVsbGZkID0gb3BlbigiL2Rldi9udWxs
IiwgT19SRE9OTFksIDApOworICAgIGlmIChudWxsZmQgPCAwKSB7CisgICAgICAgZmF0YWwoIm9w
ZW4oKSBmYWlsZWQiLCBFQ19URU1QRkFJTCk7CisgICAgfQorICAgIGN5cnVzX2R1cDJfc29jayhu
dWxsZmQsIDApOworICAgIGN5cnVzX2R1cDJfc29jayhudWxsZmQsIDEpOworICAgIGN5cnVzX2R1
cDJfc29jayhudWxsZmQsIDIpOworICAgIGNsb3NlKG51bGxmZCk7CiAKICAgICBzdHJjcHkocG9w
ZF9jbGllbnRob3N0LCAiW2xvY2FsXSIpOwogICAgIGlmIChwb3BkX2xvZ2ZkICE9IC0xKSB7Cklu
ZGV4OiBpbWFwL3Byb3h5ZC5jCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KUkNTIGZpbGU6IC9hZnMvYW5kcmV3LmNtdS5l
ZHUvc3lzdGVtL2N2cy9zcmMvY3lydXMvaW1hcC9wcm94eWQuYyx2CnJldHJpZXZpbmcgcmV2aXNp
b24gMS4xODgKcmV0cmlldmluZyByZXZpc2lvbiAxLjE4OQpkaWZmIC11IC1yMS4xODggLXIxLjE4
OQotLS0gaW1hcC9wcm94eWQuYwkyNyBBdWcgMjAwNCAwNjo1NjowOSAtMDAwMAkxLjE4OAorKysg
aW1hcC9wcm94eWQuYwk4IFNlcCAyMDA0IDE5OjQ1OjIyIC0wMDAwCTEuMTg5CkBAIC0zOSw3ICsz
OSw3IEBACiAgKiBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBVU0UgT1IgUEVSRk9S
TUFOQ0UgT0YgVEhJUyBTT0ZUV0FSRS4KICAqLwogCi0vKiAkSWQ6IHByb3h5ZC5jLHYgMS4xODgg
MjAwNC8wOC8yNyAwNjo1NjowOSBzaGFkb3cgRXhwICQgKi8KKy8qICRJZDogcHJveHlkLmMsdiAx
LjE4OSAyMDA0LzA5LzA4IDE5OjQ1OjIyIHNoYWRvdyBFeHAgJCAqLwogCiAjaW5jbHVkZSA8Y29u
ZmlnLmg+CiAKQEAgLTExNzcsNiArMTE3Nyw3IEBACiBzdGF0aWMgdm9pZCBwcm94eWRfcmVzZXQo
dm9pZCkgCiB7CiAgICAgaW50IGk7CisgICAgaW50IG51bGxmZCA9IC0xOwogICAgIAogICAgIHBy
b2NfY2xlYW51cCgpOwogCkBAIC0xMjE0LDkgKzEyMTUsMTQgQEAKICAgICB9CiAjZW5kaWYKIAot
ICAgIGN5cnVzX2Nsb3NlX3NvY2soMCk7Ci0gICAgY3lydXNfY2xvc2Vfc29jaygxKTsKLSAgICBj
eXJ1c19jbG9zZV9zb2NrKDIpOworICAgIG51bGxmZCA9IG9wZW4oIi9kZXYvbnVsbCIsIE9fUkRP
TkxZLCAwKTsKKyAgICBpZiAobnVsbGZkIDwgMCkgeworICAgICAgIGZhdGFsKCJvcGVuKCkgZmFp
bGVkIiwgRUNfVEVNUEZBSUwpOworICAgIH0KKyAgICBjeXJ1c19kdXAyX3NvY2sobnVsbGZkLCAw
KTsKKyAgICBjeXJ1c19kdXAyX3NvY2sobnVsbGZkLCAxKTsKKyAgICBjeXJ1c19kdXAyX3NvY2so
bnVsbGZkLCAyKTsKKyAgICBjbG9zZShudWxsZmQpOwogICAgIAogICAgIC8qIENsZWFudXAgR2xv
YmFscyAqLwogICAgIHByb3h5ZF9jbWRjbnQgPSAwOwpJbmRleDogaW1hcC9zbW1hcGQuYwo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09ClJDUyBmaWxlOiAvYWZzL2FuZHJldy5jbXUuZWR1L3N5c3RlbS9jdnMvc3JjL2N5cnVz
L2ltYXAvc21tYXBkLmMsdgpyZXRyaWV2aW5nIHJldmlzaW9uIDEuOApyZXRyaWV2aW5nIHJldmlz
aW9uIDEuOQpkaWZmIC11IC1yMS44IC1yMS45Ci0tLSBpbWFwL3NtbWFwZC5jCTIyIE1heSAyMDA0
IDAzOjQ1OjUyIC0wMDAwCTEuOAorKysgaW1hcC9zbW1hcGQuYwk4IFNlcCAyMDA0IDE5OjQ1OjIy
IC0wMDAwCTEuOQpAQCAtNzIsNyArNzIsNyBAQAogICogbWF5IGNvbnRhaW4gYW4gZXhwbGFuYXRv
cnkgbWVzc2FnZS4KICAqCiAgKgotICogJElkOiBzbW1hcGQuYyx2IDEuOCAyMDA0LzA1LzIyIDAz
OjQ1OjUyIHJqczMgRXhwICQKKyAqICRJZDogc21tYXBkLmMsdiAxLjkgMjAwNC8wOS8wOCAxOTo0
NToyMiBzaGFkb3cgRXhwICQKICAqLwogCiAjaW5jbHVkZSA8Y29uZmlnLmg+CkBAIC0xMTYsMTIg
KzExNiwxOSBAQAogdm9pZCBzaHV0X2Rvd24oaW50IGNvZGUpIF9fYXR0cmlidXRlX18oKG5vcmV0
dXJuKSk7CiB2b2lkIHNodXRfZG93bihpbnQgY29kZSkKIHsKKyAgICBpbnQgbnVsbGZkID0gLTE7
CisKICAgICBpZiAobWFwX2luKSBwcm90X2ZyZWUobWFwX2luKTsKICAgICBpZiAobWFwX291dCkg
cHJvdF9mcmVlKG1hcF9vdXQpOwogCi0gICAgY3lydXNfY2xvc2Vfc29jaygwKTsKLSAgICBjeXJ1
c19jbG9zZV9zb2NrKDEpOwotICAgIGN5cnVzX2Nsb3NlX3NvY2soMik7CisgICAgbnVsbGZkID0g
b3BlbigiL2Rldi9udWxsIiwgT19SRE9OTFksIDApOworICAgIGlmIChudWxsZmQgPCAwKSB7Cisg
ICAgICAgZmF0YWwoIm9wZW4oKSBmYWlsZWQiLCBFQ19URU1QRkFJTCk7CisgICAgfQorICAgIGN5
cnVzX2R1cDJfc29jayhudWxsZmQsIDApOworICAgIGN5cnVzX2R1cDJfc29jayhudWxsZmQsIDEp
OworICAgIGN5cnVzX2R1cDJfc29jayhudWxsZmQsIDIpOworICAgIGNsb3NlKG51bGxmZCk7CiAK
ICAgICBtYm94bGlzdF9jbG9zZSgpOwogICAgIG1ib3hsaXN0X2RvbmUoKTsKSW5kZXg6IGxpYi91
dGlsLmMKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PQpSQ1MgZmlsZTogL2Fmcy9hbmRyZXcuY211LmVkdS9zeXN0ZW0vY3Zz
L3NyYy9jeXJ1cy9saWIvdXRpbC5jLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjI4CnJldHJpZXZp
bmcgcmV2aXNpb24gMS4yOQpkaWZmIC11IC1yMS4yOCAtcjEuMjkKLS0tIGxpYi91dGlsLmMJMjcg
RmViIDIwMDQgMTg6MTc6MzMgLTAwMDAJMS4yOAorKysgbGliL3V0aWwuYwk4IFNlcCAyMDA0IDE5
OjQ1OjMyIC0wMDAwCTEuMjkKQEAgLTQwLDcgKzQwLDcgQEAKICAqCiAgKi8KIC8qCi0gKiAkSWQ6
IHV0aWwuYyx2IDEuMjggMjAwNC8wMi8yNyAxODoxNzozMyBrZW4zIEV4cCAkCisgKiAkSWQ6IHV0
aWwuYyx2IDEuMjkgMjAwNC8wOS8wOCAxOTo0NTozMiBzaGFkb3cgRXhwICQKICAqLwogCiAjaW5j
bHVkZSA8Y29uZmlnLmg+CkBAIC0yODMsNiArMjgzLDEyIEBACiB7CiAgICAgc2h1dGRvd24oZmQs
IFNIVVRfUkQpOwogICAgIHJldHVybiBjbG9zZShmZCk7Cit9CisKK2ludCBjeXJ1c19kdXAyX3Nv
Y2soaW50IG9sZGZkLCBpbnQgbmV3ZmQpIAoreworICAgIHNodXRkb3duKG5ld2ZkLCBTSFVUX1JE
KTsKKyAgICByZXR1cm4gZHVwMihvbGRmZCxuZXdmZCk7CiB9CiAKIC8qIEdpdmVuIGEgbWtzdGVt
cCgzKSBwYXR0ZXJuIGZvciBhIGZpbGVuYW1lLApJbmRleDogdGltc2lldmVkL3RpbXNpZXZlZC5j
Cj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT0KUkNTIGZpbGU6IC9hZnMvYW5kcmV3LmNtdS5lZHUvc3lzdGVtL2N2cy9zcmMv
Y3lydXMvdGltc2lldmVkL3RpbXNpZXZlZC5jLHYKcmV0cmlldmluZyByZXZpc2lvbiAxLjUzCnJl
dHJpZXZpbmcgcmV2aXNpb24gMS41NApkaWZmIC11IC1yMS41MyAtcjEuNTQKLS0tIHRpbXNpZXZl
ZC90aW1zaWV2ZWQuYwkyMiBNYXkgMjAwNCAwMzo0NTo1OSAtMDAwMAkxLjUzCisrKyB0aW1zaWV2
ZWQvdGltc2lldmVkLmMJOCBTZXAgMjAwNCAxOTo0NTozNiAtMDAwMAkxLjU0CkBAIC0xLDcgKzEs
NyBAQAogLyogdGltc2lldmVkLmMgLS0gbWFpbiBmaWxlIGZvciB0aW1zaWV2ZWQgKHNpZXZlIHNj
cmlwdCBhY2NlcHRpbmcgcHJvZ3JhbSkKICAqIFRpbSBNYXJ0aW4KICAqIDkvMjEvOTkKLSAqICRJ
ZDogdGltc2lldmVkLmMsdiAxLjUzIDIwMDQvMDUvMjIgMDM6NDU6NTkgcmpzMyBFeHAgJAorICog
JElkOiB0aW1zaWV2ZWQuYyx2IDEuNTQgMjAwNC8wOS8wOCAxOTo0NTozNiBzaGFkb3cgRXhwICQK
ICAqLwogLyoKICAqIENvcHlyaWdodCAoYykgMTk5OC0yMDAzIENhcm5lZ2llIE1lbGxvbiBVbml2
ZXJzaXR5LiAgQWxsIHJpZ2h0cyByZXNlcnZlZC4KQEAgLTEyMyw2ICsxMjMsOCBAQAogdm9pZCBz
aHV0X2Rvd24oaW50IGNvZGUpIF9fYXR0cmlidXRlX18gKChub3JldHVybikpOwogdm9pZCBzaHV0
X2Rvd24oaW50IGNvZGUpCiB7CisgICAgaW50IG51bGxmZCA9IC0xOworCiAgICAgLyogY2xvc2Ug
bWFpbGJveGVzICovCiAgICAgbWJveGxpc3RfY2xvc2UoKTsKICAgICBtYm94bGlzdF9kb25lKCk7
CkBAIC0xMzgsOSArMTQwLDE0IEBACiAKICAgICBjeXJ1c19kb25lKCk7CiAKLSAgICBjeXJ1c19j
bG9zZV9zb2NrKDApOwotICAgIGN5cnVzX2Nsb3NlX3NvY2soMSk7Ci0gICAgY3lydXNfY2xvc2Vf
c29jaygyKTsKKyAgICBudWxsZmQgPSBvcGVuKCIvZGV2L251bGwiLCBPX1JET05MWSwgMCk7Cisg
ICAgaWYgKG51bGxmZCA8IDApIHsKKyAgICAgICBmYXRhbCgib3BlbigpIGZhaWxlZCIsIEVDX1RF
TVBGQUlMKTsKKyAgICB9CisgICAgY3lydXNfZHVwMl9zb2NrKG51bGxmZCwgMCk7CisgICAgY3ly
dXNfZHVwMl9zb2NrKG51bGxmZCwgMSk7CisgICAgY3lydXNfZHVwMl9zb2NrKG51bGxmZCwgMik7
CisgICAgY2xvc2UobnVsbGZkKTsKICAgICAKICAgICAvKiBkb25lICovCiAgICAgZXhpdChjb2Rl
KTsK
</data>        

          </attachment>
      

    </bug>

</bugzilla>