<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3113</bug_id>
          
          <creation_ts>2008-10-30 12:37 EDT</creation_ts>
          <short_desc>stringlist and left recursion</short_desc>
          <delta_ts>2010-10-25 18:46:47 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Sieve</component>
          <version>2.3.x</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Windows XP</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P5</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Dilyan Palauzov">dilyan.palauzov@aegee.org</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          <cc>brong@fastmail.fm</cc>
          

      

      

      
          <long_desc isprivate="0">
            <who name="Dilyan Palauzov">dilyan.palauzov@aegee.org</who>
            <bug_when>2008-10-30 12:37:48 EDT</bug_when>
            <thetext>The documentation of Bison 2.3, Section 3.4 Recursive Rules (http://www.gnu.org/software/bison/manual/html_mono/bison.html.gz#Recursion) recommends writing left-recursion rules and discourages right-recursion grammers.  

After I experienced a &quot;memory exhausted&quot; error from timsieved 2.3.13 (while uploading 150 stringlist), I replaced in sieve/sieve.y:

strings: STRING                  { $$ = new_sl($1, NULL); }
        | STRING &apos;,&apos; strings     { $$ = new_sl($1, $3); }
        ;

with

strings: STRING                  { $$ = new_sl($1, NULL); }
        | strings &apos;,&apos; STRING     { $$ = new_sl($3, $1); }
        ;

and the problem disappeared.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2009-03-15 22:31:33 EDT</bug_when>
            <thetext>The only issue I have with this patch is that the stringlist gets created reversed...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2009-03-15 22:53:04 EDT</bug_when>
            <thetext>Created an attachment (id=1061)
Stringlist Left Recursion with reverse

How about this?  It reverses the stringlist as well...</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Bron Gondwana">brong@fastmail.fm</who>
            <bug_when>2009-11-16 21:46:05 EDT</bug_when>
            <thetext>I committed this one back in March 2009, but forgot to update the bug.  The change is in CVS.</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1061</attachid>
            <date>2009-03-15 22:53 EDT</date>
            <desc>Stringlist Left Recursion with reverse</desc>
            <filename>stringlist_left.diff</filename>
            <type>text/plain</type>
            <size>1335</size>
            <attacher>brong@fastmail.fm</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL3NpZXZlLnkgYi9zaWV2ZS55CmluZGV4IDFlYTZjZTAuLmI4NGQyYmUgMTAw
NjQ0Ci0tLSBhL3NpZXZlLnkKKysrIGIvc2lldmUueQpAQCAtNDM1LDEyICs0MzUsMTIgQEAgdnRh
Z3M6IC8qIGVtcHR5ICovCQkgeyAkJCA9IG5ld192dGFncygpOyB9CiAJCQkJICAgZWxzZSB7ICQk
LT5taW1lID0gTUlNRTsgfSB9CiAJOwogCi1zdHJpbmdsaXN0OiAnWycgc3RyaW5ncyAnXScgICAg
ICB7ICQkID0gJDI7IH0KK3N0cmluZ2xpc3Q6ICdbJyBzdHJpbmdzICddJyAgICAgIHsgJCQgPSBz
bF9yZXZlcnNlKCQyKTsgfQogCXwgU1RSSU5HCQkgeyAkJCA9IG5ld19zbCgkMSwgTlVMTCk7IH0K
IAk7CiAKIHN0cmluZ3M6IFNUUklORwkJCSB7ICQkID0gbmV3X3NsKCQxLCBOVUxMKTsgfQotCXwg
U1RSSU5HICcsJyBzdHJpbmdzCSB7ICQkID0gbmV3X3NsKCQxLCAkMyk7IH0KKwl8IHN0cmluZ3Mg
JywnIFNUUklORwkgeyAkJCA9IG5ld19zbCgkMywgJDEpOyB9CiAJOwogCiBibG9jazogJ3snIGNv
bW1hbmRzICd9JwkJIHsgJCQgPSAkMjsgfQpkaWZmIC0tZ2l0IGEvdHJlZS5jIGIvdHJlZS5jCmlu
ZGV4IDcxYWVkMTguLmQxNGM5NDMgMTAwNjQ0Ci0tLSBhL3RyZWUuYworKysgYi90cmVlLmMKQEAg
LTYxLDYgKzYxLDE5IEBAIHN0cmluZ2xpc3RfdCAqbmV3X3NsKGNoYXIgKnMsIHN0cmluZ2xpc3Rf
dCAqbikKICAgICByZXR1cm4gcDsKIH0KIAorc3RyaW5nbGlzdF90ICpzbF9yZXZlcnNlKHN0cmlu
Z2xpc3RfdCAqbCkKK3sKKyAgICBzdHJpbmdsaXN0X3QgKnByZXYgPSBOVUxMOworICAgIHN0cmlu
Z2xpc3RfdCAqbmV4dDsKKyAgICBzdHJpbmdsaXN0X3QgKmN1ciA9IGw7CisgICAgd2hpbGUgKGN1
cikgeworCW5leHQgPSBjdXItPm5leHQ7CisJY3VyLT5uZXh0ID0gcHJldjsKKwlwcmV2ID0gY3Vy
OworCWN1ciA9IG5leHQ7CisgICAgfQorICAgIHJldHVybiBwcmV2OworfQogCiB0YWdfdCAqbmV3
X3RhZyhpbnQgdHlwZSwgY2hhciAqcykKIHsKZGlmZiAtLWdpdCBhL3RyZWUuaCBiL3RyZWUuaApp
bmRleCBhNjNiNjdhLi43MDlkZTRhIDEwMDY0NAotLS0gYS90cmVlLmgKKysrIGIvdHJlZS5oCkBA
IC0xNjgsNiArMTY4LDcgQEAgc3RydWN0IENvbW1hbmRsaXN0IHsKIH07CiAKIHN0cmluZ2xpc3Rf
dCAqbmV3X3NsKGNoYXIgKnMsIHN0cmluZ2xpc3RfdCAqbik7CitzdHJpbmdsaXN0X3QgKnNsX3Jl
dmVyc2Uoc3RyaW5nbGlzdF90ICpsKTsKIHRhZ190ICpuZXdfdGFnKGludCB0eXBlLCBjaGFyICpz
KTsKIHRhZ2xpc3RfdCAqbmV3X3RhZ2xpc3QodGFnX3QgKnQsIHRhZ2xpc3RfdCAqbik7CiB0ZXN0
X3QgKm5ld190ZXN0KGludCB0eXBlKTsK
</data>        

          </attachment>
      

    </bug>

</bugzilla>