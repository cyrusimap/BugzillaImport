<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>2922</bug_id>
          
          <creation_ts>2007-03-15 21:42 EDT</creation_ts>
          <short_desc>Auth mech PLAIN doesn&apos;t work, even if allowplaintext is set in imapd.conf</short_desc>
          <delta_ts>2010-10-25 18:46:41 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.3.x</version>
          <rep_platform>Other</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Florian Pflug">fgp@phlo.org</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Florian Pflug">fgp@phlo.org</who>
            <bug_when>2007-03-15 21:42:54 EDT</bug_when>
            <thetext>Cyrus 2.3 (and 2.2 too AFAIK) doesn&apos;t allow plaintext logins
using SASL, even if allowplaintext is set in the imapd.conf.
For IMAP this can be overcome by using LOGIN (no SASL) instead
of PLAIN. But since there a some features like proxy auth that
*only* work when you authenticate via SASL, this is not a complete
workaround. Other protocols like MUPDATE can&apos;t use PLAIN at all
because of this bug, since they always authenticate via SASL.

I&apos;ve created a patch that fixes this. It sets
SASL_SEC_NOPLAINTEXT precisly if allowplaintext is not set in
imapd.conf.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Florian Pflug">fgp@phlo.org</who>
            <bug_when>2007-03-15 21:43:37 EDT</bug_when>
            <thetext>Created an attachment (id=529)
Patch the allow using the PLAIN auth mech.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">murch@andrew.cmu.edu</who>
            <bug_when>2007-03-23 14:37:06 EDT</bug_when>
            <thetext>Applying this patch actually breaks a &quot;MUST NOT&quot; in the relevant RFCs regarding
use of PLAIN without TLS.  If you really want to use PLAIN without TLS (because
you are on a private network, etc), you should use the &apos;-p 2&apos; command line
option with the service (e.g. cmd=&quot;imapd -p 2&quot;  in cyrus.conf).  This option is
used to tell SASL that an external security layer is present.  Closing this bug.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Florian Pflug">fgp@phlo.org</who>
            <bug_when>2007-03-23 15:02:23 EDT</bug_when>
            <thetext>I do not agree with flagging this as WONTFIX. I might agree if you completly
removed LOGIN support from cyrus imapd, but allowing LOGIN but not SASL PLAIN
is just, well, plain stupid IMHO. Sasl offers advances features like proxy auth,
which might be usefull even for people who do not care about security. You
are effectivly saying &quot;We think you did not secure your *own* server enough,
therefore you are not allowed to use some features until you implement what
we think is security&quot;.
Things are even worse, because the allowplaintext option (or whatever it
is called in imapd.conf) suggest that you *can* enable plaintext password
if you wish to do so. Nobody will expect that this enables only one kind
of plaintext passwords - the one supporting less features (LOGIN).

Please reconsider, this &quot;feature&quot; doesn&apos;t lead to more security, it
leads to more frustration.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Ken Murchison">murch@andrew.cmu.edu</who>
            <bug_when>2007-04-03 09:03:33 EDT</bug_when>
            <thetext>&apos;allowplaintext&apos; now governs SASL PLAIN,but its default value has been changed
to disabled</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>529</attachid>
            <date>2007-03-15 21:43 EDT</date>
            <desc>Patch the allow using the PLAIN auth mech.</desc>
            <filename>cyrus-imapd-allowplain.patch</filename>
            <type>text/plain</type>
            <size>7530</size>
            <attacher>fgp@phlo.org</attacher>
            
              <data encoding="base64">ZGlmZiAtTmF1ciBjeXJ1cy1pbWFwZC0yLjMuNy9pbWFwL2JhY2tlbmQuYyBjeXJ1cy1pbWFwZC0y
LjMuNy5wbGFpbnRleHQvaW1hcC9iYWNrZW5kLmMKLS0tIGN5cnVzLWltYXBkLTIuMy43L2ltYXAv
YmFja2VuZC5jCTIwMDYtMDYtMjcgMTc6NTg6NDIuMDAwMDAwMDAwICswMjAwCisrKyBjeXJ1cy1p
bWFwZC0yLjMuNy5wbGFpbnRleHQvaW1hcC9iYWNrZW5kLmMJMjAwNy0wMy0xMiAxNjo0NToyMC4w
MDAwMDAwMDAgKzAxMDAKQEAgLTIwNCw3ICsyMDQsNyBAQAogCXJldHVybiByOwogICAgIH0KIAot
ICAgIHNlY3Byb3BzID0gbXlzYXNsX3NlY3Byb3BzKFNBU0xfU0VDX05PUExBSU5URVhUKTsKKyAg
ICBzZWNwcm9wcyA9IG15c2FzbF9zZWNwcm9wcygwKTsKICAgICByID0gc2FzbF9zZXRwcm9wKHMt
PnNhc2xjb25uLCBTQVNMX1NFQ19QUk9QUywgc2VjcHJvcHMpOwogICAgIGlmIChyICE9IFNBU0xf
T0spIHsKIAlyZXR1cm4gcjsKZGlmZiAtTmF1ciBjeXJ1cy1pbWFwZC0yLjMuNy9pbWFwL2dsb2Jh
bC5jIGN5cnVzLWltYXBkLTIuMy43LnBsYWludGV4dC9pbWFwL2dsb2JhbC5jCi0tLSBjeXJ1cy1p
bWFwZC0yLjMuNy9pbWFwL2dsb2JhbC5jCTIwMDUtMTItMTMgMjA6MzU6NTAuMDAwMDAwMDAwICsw
MTAwCisrKyBjeXJ1cy1pbWFwZC0yLjMuNy5wbGFpbnRleHQvaW1hcC9nbG9iYWwuYwkyMDA3LTAz
LTEyIDE2OjQ0OjI1LjAwMDAwMDAwMCArMDEwMApAQCAtMzA4LDcgKzMwOCw5IEBACiAJCQkJLyog
bWF4aW11bSBhbGxvd2FibGUgc2VjdXJpdHkgc3RyZW5ndGggKi8KIAogICAgIHJldC5zZWN1cml0
eV9mbGFncyA9IGZsYWdzOwotICAgIC8qIHJldC5zZWN1cml0eV9mbGFncyB8PSBTQVNMX1NFQ19O
T1BMQUlOVEVYVDsgKi8KKyAgICBpZiAoIWNvbmZpZ19nZXRzd2l0Y2goSU1BUE9QVF9BTExPV1BM
QUlOVEVYVCkpIHsKKwlyZXQuc2VjdXJpdHlfZmxhZ3MgfD0gU0FTTF9TRUNfTk9QTEFJTlRFWFQ7
CisgICAgfQogICAgIGlmICghY29uZmlnX2dldHN3aXRjaChJTUFQT1BUX0FMTE9XQU5PTllNT1VT
TE9HSU4pKSB7CiAJcmV0LnNlY3VyaXR5X2ZsYWdzIHw9IFNBU0xfU0VDX05PQU5PTllNT1VTOwog
ICAgIH0KZGlmZiAtTmF1ciBjeXJ1cy1pbWFwZC0yLjMuNy9pbWFwL2ltYXBkLmMgY3lydXMtaW1h
cGQtMi4zLjcucGxhaW50ZXh0L2ltYXAvaW1hcGQuYwotLS0gY3lydXMtaW1hcGQtMi4zLjcvaW1h
cC9pbWFwZC5jCTIwMDYtMDctMDMgMTU6MjI6NDEuMDAwMDAwMDAwICswMjAwCisrKyBjeXJ1cy1p
bWFwZC0yLjMuNy5wbGFpbnRleHQvaW1hcC9pbWFwZC5jCTIwMDctMDMtMTIgMTY6NDU6MzcuMDAw
MDAwMDAwICswMTAwCkBAIC03NTksOCArNzU5LDcgQEAKIAlmYXRhbCgiU0FTTCBmYWlsZWQgaW5p
dGlhbGl6aW5nOiBzYXNsX3NlcnZlcl9uZXcoKSIsIEVDX1RFTVBGQUlMKTsKICAgICB9CiAKLSAg
ICAvKiBuZXZlciBhbGxvdyBwbGFpbnRleHQsIHNpbmNlIElNQVAgaGFzIHRoZSBMT0dJTiBjb21t
YW5kICovCi0gICAgc2VjcHJvcHMgPSBteXNhc2xfc2VjcHJvcHMoU0FTTF9TRUNfTk9QTEFJTlRF
WFQpOworICAgIHNlY3Byb3BzID0gbXlzYXNsX3NlY3Byb3BzKDApOwogICAgIHNhc2xfc2V0cHJv
cChpbWFwZF9zYXNsY29ubiwgU0FTTF9TRUNfUFJPUFMsIHNlY3Byb3BzKTsKICAgICBzYXNsX3Nl
dHByb3AoaW1hcGRfc2FzbGNvbm4sIFNBU0xfU1NGX0VYVEVSTkFMLCAmZXh0cHJvcHNfc3NmKTsK
IApAQCAtOTMwMiw3ICs5MzAxLDcgQEAKIAkJCSAgIHNhc2xwcm9wcy5pcGxvY2FscG9ydCk7CiAg
ICAgaWYocmV0ICE9IFNBU0xfT0spIHJldHVybiByZXQ7CiAgICAgCi0gICAgc2VjcHJvcHMgPSBt
eXNhc2xfc2VjcHJvcHMoU0FTTF9TRUNfTk9QTEFJTlRFWFQpOworICAgIHNlY3Byb3BzID0gbXlz
YXNsX3NlY3Byb3BzKDApOwogICAgIHJldCA9IHNhc2xfc2V0cHJvcCgqY29ubiwgU0FTTF9TRUNf
UFJPUFMsIHNlY3Byb3BzKTsKICAgICBpZihyZXQgIT0gU0FTTF9PSykgcmV0dXJuIHJldDsKICAg
ICAvKiBlbmQgb2Ygc2VydmljZV9tYWluIGluaXRpYWxpemF0aW9uIGV4Y2VwdGluZyBTU0YgKi8K
ZGlmZiAtTmF1ciBjeXJ1cy1pbWFwZC0yLjMuNy9pbWFwL2xtdHBlbmdpbmUuYyBjeXJ1cy1pbWFw
ZC0yLjMuNy5wbGFpbnRleHQvaW1hcC9sbXRwZW5naW5lLmMKLS0tIGN5cnVzLWltYXBkLTIuMy43
L2ltYXAvbG10cGVuZ2luZS5jCTIwMDUtMTEtMDEgMjE6MTQ6MjAuMDAwMDAwMDAwICswMTAwCisr
KyBjeXJ1cy1pbWFwZC0yLjMuNy5wbGFpbnRleHQvaW1hcC9sbXRwZW5naW5lLmMJMjAwNy0wMy0x
MiAxNjo0NzowMS4wMDAwMDAwMDAgKzAxMDAKQEAgLTk1NCwxMiArOTU0LDcgQEAKICAgICAgICAg
ICAgICAgICAgICAgICAgICAgc2FzbHByb3BzLmlwbG9jYWxwb3J0KTsKICAgICBpZihyZXQgIT0g
U0FTTF9PSykgcmV0dXJuIHJldDsKICAgICAKLSAgICBzZWNmbGFncyA9IFNBU0xfU0VDX05PQU5P
TllNT1VTOwotICAgIGlmICghY29uZmlnX2dldHN3aXRjaChJTUFQT1BUX0FMTE9XUExBSU5URVhU
KSkgewotCXNlY2ZsYWdzIHw9IFNBU0xfU0VDX05PUExBSU5URVhUOwotICAgIH0KLQotICAgIHNl
Y3Byb3BzID0gbXlzYXNsX3NlY3Byb3BzKHNlY2ZsYWdzKTsKKyAgICBzZWNwcm9wcyA9IG15c2Fz
bF9zZWNwcm9wcyhTQVNMX1NFQ19OT0FOT05ZTU9VUyk7CiAgICAgcmV0ID0gc2FzbF9zZXRwcm9w
KCpjb25uLCBTQVNMX1NFQ19QUk9QUywgc2VjcHJvcHMpOwogICAgIGlmKHJldCAhPSBTQVNMX09L
KSByZXR1cm4gcmV0OwogICAgIC8qIGVuZCBvZiBzZXJ2aWNlX21haW4gaW5pdGlhbGl6YXRpb24g
ZXhjZXB0aW5nIFNTRiAqLwpAQCAtMTA5NiwxMiArMTA5MSw3IEBACiAKICAgICAvKiBzZXQgbXkg
YWxsb3dhYmxlIHNlY3VyaXR5IHByb3BlcnRpZXMgKi8KICAgICAvKiBBTk9OWU1PVVMgaXMgc2ls
bHkgYmVjYXVzZSB3ZSBhbGxvdyB0aGF0IGFueXdheSAqLwotICAgIHNlY2ZsYWdzID0gU0FTTF9T
RUNfTk9BTk9OWU1PVVM7Ci0gICAgaWYgKCFjb25maWdfZ2V0c3dpdGNoKElNQVBPUFRfQUxMT1dQ
TEFJTlRFWFQpKSB7Ci0Jc2VjZmxhZ3MgfD0gU0FTTF9TRUNfTk9QTEFJTlRFWFQ7Ci0gICAgfQot
Ci0gICAgc2VjcHJvcHMgPSBteXNhc2xfc2VjcHJvcHMoc2VjZmxhZ3MpOworICAgIHNlY3Byb3Bz
ID0gbXlzYXNsX3NlY3Byb3BzKFNBU0xfU0VDX05PQU5PTllNT1VTKTsKICAgICBzYXNsX3NldHBy
b3AoY2QuY29ubiwgU0FTTF9TRUNfUFJPUFMsIHNlY3Byb3BzKTsKIAogICAgIGlmIChmdW5jLT5w
cmVhdXRoKSB7CmRpZmYgLU5hdXIgY3lydXMtaW1hcGQtMi4zLjcvaW1hcC9tdXBkYXRlLmMgY3ly
dXMtaW1hcGQtMi4zLjcucGxhaW50ZXh0L2ltYXAvbXVwZGF0ZS5jCi0tLSBjeXJ1cy1pbWFwZC0y
LjMuNy9pbWFwL211cGRhdGUuYwkyMDA2LTAzLTE1IDE5OjU2OjMxLjAwMDAwMDAwMCArMDEwMAor
KysgY3lydXMtaW1hcGQtMi4zLjcucGxhaW50ZXh0L2ltYXAvbXVwZGF0ZS5jCTIwMDctMDMtMTIg
MTY6NDc6NDYuMDAwMDAwMDAwICswMTAwCkBAIC0zMzcsMTEgKzMzNyw3IEBACiAgICAgfQogCiAg
ICAgLyogc2V0IG15IGFsbG93YWJsZSBzZWN1cml0eSBwcm9wZXJ0aWVzICovCi0gICAgc2VjZmxh
Z3MgPSBTQVNMX1NFQ19OT0FOT05ZTU9VUzsKLSAgICBpZiAoIWNvbmZpZ19nZXRzd2l0Y2goSU1B
UE9QVF9BTExPV1BMQUlOVEVYVCkpIHsKLQlzZWNmbGFncyB8PSBTQVNMX1NFQ19OT1BMQUlOVEVY
VDsKLSAgICB9Ci0gICAgc2FzbF9zZXRwcm9wKEMtPnNhc2xjb25uLCBTQVNMX1NFQ19QUk9QUywg
bXlzYXNsX3NlY3Byb3BzKHNlY2ZsYWdzKSk7CisgICAgc2FzbF9zZXRwcm9wKEMtPnNhc2xjb25u
LCBTQVNMX1NFQ19QUk9QUywgbXlzYXNsX3NlY3Byb3BzKFNBU0xfU0VDX05PQU5PTllNT1VTKSk7
CiAKICAgICAvKiBDbGVhciBCdWZmZXJzICovCiAgICAgbWVtc2V0KCYoQy0+dGFnKSwgMCwgc2l6
ZW9mKHN0cnVjdCBidWYpKTsKQEAgLTIwMDMsMTEgKzE5OTksNyBAQAogICAgICAgICAgICAgICAg
ICAgICAgICAgICBjLT5zYXNscHJvcHMuaXBsb2NhbHBvcnQpOwogICAgIGlmKHJldCAhPSBTQVNM
X09LKSByZXR1cm4gcmV0OwogICAgIAotICAgIHNlY2ZsYWdzID0gU0FTTF9TRUNfTk9BTk9OWU1P
VVM7Ci0gICAgaWYgKCFjb25maWdfZ2V0c3dpdGNoKElNQVBPUFRfQUxMT1dQTEFJTlRFWFQpKSB7
Ci0Jc2VjZmxhZ3MgfD0gU0FTTF9TRUNfTk9QTEFJTlRFWFQ7Ci0gICAgfQotICAgIHNlY3Byb3Bz
ID0gbXlzYXNsX3NlY3Byb3BzKHNlY2ZsYWdzKTsKKyAgICBzZWNwcm9wcyA9IG15c2FzbF9zZWNw
cm9wcyhTQVNMX1NFQ19OT0FOT05ZTU9VUyk7CiAgICAgcmV0ID0gc2FzbF9zZXRwcm9wKGMtPnNh
c2xjb25uLCBTQVNMX1NFQ19QUk9QUywgc2VjcHJvcHMpOwogICAgIGlmKHJldCAhPSBTQVNMX09L
KSByZXR1cm4gcmV0OwogICAgIC8qIGVuZCBvZiBzZXJ2aWNlX21haW4gaW5pdGlhbGl6YXRpb24g
ZXhjZXB0aW5nIFNTRiAqLwpkaWZmIC1OYXVyIGN5cnVzLWltYXBkLTIuMy43L2ltYXAvbm50cGQu
YyBjeXJ1cy1pbWFwZC0yLjMuNy5wbGFpbnRleHQvaW1hcC9ubnRwZC5jCi0tLSBjeXJ1cy1pbWFw
ZC0yLjMuNy9pbWFwL25udHBkLmMJMjAwNi0wNS0yNiAxNzo1MDowNy4wMDAwMDAwMDAgKzAyMDAK
KysrIGN5cnVzLWltYXBkLTIuMy43LnBsYWludGV4dC9pbWFwL25udHBkLmMJMjAwNy0wMy0xMiAx
Njo0ODo0My4wMDAwMDAwMDAgKzAxMDAKQEAgLTU2OSw3ICs1NjksNyBAQAogCWZhdGFsKCJTQVNM
IGZhaWxlZCBpbml0aWFsaXppbmc6IHNhc2xfc2VydmVyX25ldygpIixFQ19URU1QRkFJTCk7IAog
CiAgICAgLyogd2lsbCBhbHdheXMgcmV0dXJuIHNvbWV0aGluZyB2YWxpZCAqLwotICAgIHNlY3By
b3BzID0gbXlzYXNsX3NlY3Byb3BzKFNBU0xfU0VDX05PUExBSU5URVhUKTsKKyAgICBzZWNwcm9w
cyA9IG15c2FzbF9zZWNwcm9wcygwKTsKICAgICBzYXNsX3NldHByb3Aobm50cF9zYXNsY29ubiwg
U0FTTF9TRUNfUFJPUFMsIHNlY3Byb3BzKTsKICAgICBzYXNsX3NldHByb3Aobm50cF9zYXNsY29u
biwgU0FTTF9TU0ZfRVhURVJOQUwsICZleHRwcm9wc19zc2YpOwogICAgIApAQCAtNzM0LDcgKzcz
NCw3IEBACiAgICAgICAgcmV0ID0gc2FzbF9zZXRwcm9wKCpjb25uLCBTQVNMX0lQTE9DQUxQT1JU
LAogICAgICAgICAgICAgICAgICAgICAgICAgICBzYXNscHJvcHMuaXBsb2NhbHBvcnQpOwogICAg
IGlmKHJldCAhPSBTQVNMX09LKSByZXR1cm4gcmV0OwotICAgIHNlY3Byb3BzID0gbXlzYXNsX3Nl
Y3Byb3BzKFNBU0xfU0VDX05PUExBSU5URVhUKTsKKyAgICBzZWNwcm9wcyA9IG15c2FzbF9zZWNw
cm9wcygwKTsKICAgICByZXQgPSBzYXNsX3NldHByb3AoKmNvbm4sIFNBU0xfU0VDX1BST1BTLCBz
ZWNwcm9wcyk7CiAgICAgaWYocmV0ICE9IFNBU0xfT0spIHJldHVybiByZXQ7CiAgICAgLyogZW5k
IG9mIHNlcnZpY2VfbWFpbiBpbml0aWFsaXphdGlvbiBleGNlcHRpbmcgU1NGICovCmRpZmYgLU5h
dXIgY3lydXMtaW1hcGQtMi4zLjcvaW1hcC9wb3AzZC5jIGN5cnVzLWltYXBkLTIuMy43LnBsYWlu
dGV4dC9pbWFwL3BvcDNkLmMKLS0tIGN5cnVzLWltYXBkLTIuMy43L2ltYXAvcG9wM2QuYwkyMDA2
LTA1LTI2IDE3OjUwOjA5LjAwMDAwMDAwMCArMDIwMAorKysgY3lydXMtaW1hcGQtMi4zLjcucGxh
aW50ZXh0L2ltYXAvcG9wM2QuYwkyMDA3LTAzLTEyIDE2OjQ5OjQ3LjAwMDAwMDAwMCArMDEwMApA
QCAtNDk2LDcgKzQ5Niw3IEBACiAJZmF0YWwoIlNBU0wgZmFpbGVkIGluaXRpYWxpemluZzogc2Fz
bF9zZXJ2ZXJfbmV3KCkiLEVDX1RFTVBGQUlMKTsgCiAKICAgICAvKiB3aWxsIGFsd2F5cyByZXR1
cm4gc29tZXRoaW5nIHZhbGlkICovCi0gICAgc2VjcHJvcHMgPSBteXNhc2xfc2VjcHJvcHMoU0FT
TF9TRUNfTk9QTEFJTlRFWFQpOworICAgIHNlY3Byb3BzID0gbXlzYXNsX3NlY3Byb3BzKDApOwog
ICAgIHNhc2xfc2V0cHJvcChwb3BkX3Nhc2xjb25uLCBTQVNMX1NFQ19QUk9QUywgc2VjcHJvcHMp
OwogICAgIHNhc2xfc2V0cHJvcChwb3BkX3Nhc2xjb25uLCBTQVNMX1NTRl9FWFRFUk5BTCwgJmV4
dHByb3BzX3NzZik7CiAgICAgCkBAIC0xNzgyLDcgKzE3ODIsNyBAQAogICAgICAgIHJldCA9IHNh
c2xfc2V0cHJvcCgqY29ubiwgU0FTTF9JUExPQ0FMUE9SVCwKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgc2FzbHByb3BzLmlwbG9jYWxwb3J0KTsKICAgICBpZihyZXQgIT0gU0FTTF9PSykgcmV0
dXJuIHJldDsKLSAgICBzZWNwcm9wcyA9IG15c2FzbF9zZWNwcm9wcyhTQVNMX1NFQ19OT1BMQUlO
VEVYVCk7CisgICAgc2VjcHJvcHMgPSBteXNhc2xfc2VjcHJvcHMoMCk7CiAgICAgcmV0ID0gc2Fz
bF9zZXRwcm9wKCpjb25uLCBTQVNMX1NFQ19QUk9QUywgc2VjcHJvcHMpOwogICAgIGlmKHJldCAh
PSBTQVNMX09LKSByZXR1cm4gcmV0OwogICAgIC8qIGVuZCBvZiBzZXJ2aWNlX21haW4gaW5pdGlh
bGl6YXRpb24gZXhjZXB0aW5nIFNTRiAqLwpkaWZmIC1OYXVyIGN5cnVzLWltYXBkLTIuMy43L2lt
YXAvc3luY19zZXJ2ZXIuYyBjeXJ1cy1pbWFwZC0yLjMuNy5wbGFpbnRleHQvaW1hcC9zeW5jX3Nl
cnZlci5jCi0tLSBjeXJ1cy1pbWFwZC0yLjMuNy9pbWFwL3N5bmNfc2VydmVyLmMJMjAwNi0wNi0x
MiAyMDo1Njo0Mi4wMDAwMDAwMDAgKzAyMDAKKysrIGN5cnVzLWltYXBkLTIuMy43LnBsYWludGV4
dC9pbWFwL3N5bmNfc2VydmVyLmMJMjAwNy0wMy0xMiAxNjo1MDo1Mi4wMDAwMDAwMDAgKzAxMDAK
QEAgLTQxMCw3ICs0MTAsNyBAQAogCWZhdGFsKCJTQVNMIGZhaWxlZCBpbml0aWFsaXppbmc6IHNh
c2xfc2VydmVyX25ldygpIixFQ19URU1QRkFJTCk7IAogCiAgICAgLyogd2lsbCBhbHdheXMgcmV0
dXJuIHNvbWV0aGluZyB2YWxpZCAqLwotICAgIHNlY3Byb3BzID0gbXlzYXNsX3NlY3Byb3BzKFNB
U0xfU0VDX05PUExBSU5URVhUKTsKKyAgICBzZWNwcm9wcyA9IG15c2FzbF9zZWNwcm9wcyhTQVNM
X1NFQ19OT0FOT05ZTU9VUyk7CiAgICAgc2FzbF9zZXRwcm9wKHN5bmNfc2FzbGNvbm4sIFNBU0xf
U0VDX1BST1BTLCBzZWNwcm9wcyk7CiAgICAgc2FzbF9zZXRwcm9wKHN5bmNfc2FzbGNvbm4sIFNB
U0xfU1NGX0VYVEVSTkFMLCAmZXh0cHJvcHNfc3NmKTsKICAgICAKQEAgLTUzOSw3ICs1MzksNyBA
QAogICAgICAgIHJldCA9IHNhc2xfc2V0cHJvcCgqY29ubiwgU0FTTF9JUExPQ0FMUE9SVCwKICAg
ICAgICAgICAgICAgICAgICAgICAgICAgc2FzbHByb3BzLmlwbG9jYWxwb3J0KTsKICAgICBpZihy
ZXQgIT0gU0FTTF9PSykgcmV0dXJuIHJldDsKLSAgICBzZWNwcm9wcyA9IG15c2FzbF9zZWNwcm9w
cyhTQVNMX1NFQ19OT1BMQUlOVEVYVCk7CisgICAgc2VjcHJvcHMgPSBteXNhc2xfc2VjcHJvcHMo
U0FTTF9TRUNfTk9BTk9OWU1PVVMpOwogICAgIHJldCA9IHNhc2xfc2V0cHJvcCgqY29ubiwgU0FT
TF9TRUNfUFJPUFMsIHNlY3Byb3BzKTsKICAgICBpZihyZXQgIT0gU0FTTF9PSykgcmV0dXJuIHJl
dDsKICAgICAvKiBlbmQgb2Ygc2VydmljZV9tYWluIGluaXRpYWxpemF0aW9uIGV4Y2VwdGluZyBT
U0YgKi8K
</data>        

          </attachment>
      

    </bug>

</bugzilla>