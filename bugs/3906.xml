<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3906</bug_id>
          
          <creation_ts>2015-10-07 05:06 EDT</creation_ts>
          <short_desc>auxprop SQL plugin creates auth.debug log messages despite log_level set to 0</short_desc>
          <delta_ts>2015-10-11 13:24:10 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus SASL</product>
          <component>SASL</component>
          <version>2.1.x</version>
          <rep_platform>PC</rep_platform>
          <op_sys>Linux</op_sys>
          <bug_status>NEW</bug_status>
          
          
          
          
          
          <priority>P3</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Patrick Wagner">patrick.wagner@rga-net.de</reporter>
          <assigned_to name="Alexey Melnikov">Alexey.Melnikov@isode.com</assigned_to>
          
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Patrick Wagner">patrick.wagner@rga-net.de</who>
            <bug_when>2015-10-07 05:06:13 EDT</bug_when>
            <thetext>Created an attachment (id=1556)
Proposed patch by Viktor Dukhovni

On migrating an existing postfix + cyrus-sasl (auxprop SQL) infrastructure from Ubuntu 12.04 to CentOS 7.1 I noticed syslog messages logged with facility auth and severity debug, generated by cyrus-sasl (or rather its SQL component).

Here&apos;s an example for a single mail:

Oct 05 11:55:01 mail postfix/smtpd[5883]: sql auxprop plugin using mysql engine
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin Parse the username sasl-user
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin try and connect to a host
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin trying to open db &apos;postfix&apos; on host &apos;127.0.0.1:3306&apos;
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin create statement from userPassword sasl-user mail.domain
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin doing query SELECT passwd FROM saslout WHERE uname=&apos;sasl-user&apos; AND aktiv=&apos;Y&apos;;
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin Parse the username sasl-user
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin try and connect to a host
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin trying to open db &apos;postfix&apos; on host &apos;127.0.0.1:3306&apos;
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin Parse the username sasl-user
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin try and connect to a host
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin trying to open db &apos;postfix&apos; on host &apos;127.0.0.1:3306&apos;
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin create statement from userPassword sasl-user mail.domain
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin doing query SELECT passwd FROM saslout WHERE uname=&apos;sasl-user&apos; AND aktiv=&apos;Y&apos;;
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin create statement from cmusaslsecretPLAIN sasl-user mail.domain
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin doing query SELECT passwd FROM saslout WHERE uname=&apos;sasl-user&apos; AND aktiv=&apos;Y&apos;;
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin Parse the username sasl-user
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin try and connect to a host
Oct 05 11:55:01 mail postfix/smtpd[5883]: sql plugin trying to open db &apos;postfix&apos; on host &apos;127.0.0.1:3306&apos;


There seems to be no way to prevent these log messages from being generated - the &quot;log_level&quot; setting has no effect.

When I first brought this up on the postfix-users mailing list to find out whether this was caused by cyrus-sasl or postfix, Viktor Dukhovni found that, at least in the SQL module, the log() function is called with NULL as first parameter, but should use utils-&gt;conn (connection handle).

See his findings at:

http://marc.info/?l=postfix-users&amp;m=144408276316379&amp;w=2

and here:
http://marc.info/?l=postfix-users&amp;m=144408506116930&amp;w=2

I&apos;ve attached his proposed patch (for the SQL module only, other modules not checked) here.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Patrick Wagner">patrick.wagner@rga-net.de</who>
            <bug_when>2015-10-07 06:42:40 EDT</bug_when>
            <thetext>To reproduce:

- configure &quot;auxprop_plugin: sql&quot; and necessary settings for the SQL plugin
- if your init system is NOT systemd: configure your syslog daemon to log auth.debug messages somewhere
- configure postfix to authenticate against cyrus-sasl
- try SMTP AUTH (doesn&apos;t matter if your credentials are valid or invalid)
-&gt; you should see SQL debug messages appearing in the systemd journal or your designated auth.debug log file

- try setting cyrus-sasl &quot;log_level: 0&quot;, restart services, observe no changes in SQL debug message volume

I&apos;ve tested this on Ubuntu 12.04 (version 2.1.25.dfsg1-3ubuntu0.1) and CentOS 7.1 (2.1.26-17).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Patrick Wagner">patrick.wagner@rga-net.de</who>
            <bug_when>2015-10-11 13:24:10 EDT</bug_when>
            <thetext>Viktor Dukhovni also brought up another point here:
http://marc.info/?l=postfix-users&amp;m=144422279820888&amp;w=2

Quote:

&gt; It may be sensible to also ask the Cyrus developers to
&gt; enforce the log_level limits *before* calling the application
&gt; callback, so that the boiler-plate code provided by Alexey in his
&gt; post would not need to be cargo-culted by every application that
&gt; uses logging callbacks, and any sensitive password materiel is
&gt; better protected from accidental logging.</thetext>
          </long_desc>
      
          <attachment
              isobsolete="0"
              ispatch="1"
              isprivate="0"
          >
            <attachid>1556</attachid>
            <date>2015-10-07 05:06 EDT</date>
            <desc>Proposed patch by Viktor Dukhovni</desc>
            <filename>cyrus-sasl-sql-dukhovni.patch</filename>
            <type>text/plain</type>
            <size>11978</size>
            <attacher>patrick.wagner@rga-net.de</attacher>
            
              <data encoding="base64">ZGlmZiAtLWdpdCBhL3BsdWdpbnMvc3FsLmMgYi9wbHVnaW5zL3NxbC5jCmluZGV4IDNiODkzODMu
Ljc5OTJiMDUgMTAwNjQ0Ci0tLSBhL3BsdWdpbnMvc3FsLmMKKysrIGIvcGx1Z2lucy9zcWwuYwpA
QCAtNzMsMyArNzMsMyBAQCBzdGF0aWMgdm9pZCAqX215c3FsX29wZW4oY2hhciAqaG9zdCwgY2hh
ciAqcG9ydCwgaW50IHVzZXNzbCwKICAgICBpZiAoIShteXNxbCA9IG15c3FsX2luaXQoTlVMTCkp
KSB7Ci0JdXRpbHMtPmxvZyhOVUxMLCBTQVNMX0xPR19FUlIsCisJdXRpbHMtPmxvZyh1dGlscy0+
Y29ubiwgU0FTTF9MT0dfRVJSLAogCQkgICAic3FsIHBsdWdpbjogY291bGQgbm90IGV4ZWN1dGUg
bXlzcWxfaW5pdCgpIik7CkBAIC0xMTAsMyArMTEwLDMgQEAgc3RhdGljIGludCBfbXlzcWxfZXhl
Yyh2b2lkICpjb25uLCBjb25zdCBjaGFyICpjbWQsIGNoYXIgKnZhbHVlLCBzaXplX3Qgc2l6ZSwK
ICAgICBpZihteXNxbF9lcnJubyhjb25uKSkgewotICAgICAgICB1dGlscy0+bG9nKE5VTEwsIFNB
U0xfTE9HX0VSUiwgInNxbCBxdWVyeSBmYWlsZWQ6ICVzIiwKKyAgICAgICAgdXRpbHMtPmxvZyh1
dGlscy0+Y29ubiwgU0FTTF9MT0dfRVJSLCAic3FsIHF1ZXJ5IGZhaWxlZDogJXMiLAogCQkgICBt
eXNxbF9lcnJvcihjb25uKSk7CkBAIC0xMjUsMyArMTI1LDMgQEAgc3RhdGljIGludCBfbXlzcWxf
ZXhlYyh2b2lkICpjb25uLCBjb25zdCBjaGFyICpjbWQsIGNoYXIgKnZhbHVlLCBzaXplX3Qgc2l6
ZSwKIAkvKiB1bW0gbm90aGluZyBmb3VuZCAqLwotCXV0aWxzLT5sb2coTlVMTCwgU0FTTF9MT0df
Tk9URSwgInNxbCBwbHVnaW46IG5vIHJlc3VsdCBmb3VuZCIpOworCXV0aWxzLT5sb2codXRpbHMt
PmNvbm4sIFNBU0xfTE9HX05PVEUsICJzcWwgcGx1Z2luOiBubyByZXN1bHQgZm91bmQiKTsKIAly
ZXR1cm4gLTE7CkBAIC0xMzQsMyArMTM0LDMgQEAgc3RhdGljIGludCBfbXlzcWxfZXhlYyh2b2lk
ICpjb25uLCBjb25zdCBjaGFyICpjbWQsIGNoYXIgKnZhbHVlLCBzaXplX3Qgc2l6ZSwKIAlteXNx
bF9mcmVlX3Jlc3VsdChyZXN1bHQpOwotCXV0aWxzLT5sb2coTlVMTCwgU0FTTF9MT0dfTk9URSwg
InNxbCBwbHVnaW46IG5vIHJlc3VsdCBmb3VuZCIpOworCXV0aWxzLT5sb2codXRpbHMtPmNvbm4s
IFNBU0xfTE9HX05PVEUsICJzcWwgcGx1Z2luOiBubyByZXN1bHQgZm91bmQiKTsKIAlyZXR1cm4g
LTE7CkBAIC0xMzgsMyArMTM4LDMgQEAgc3RhdGljIGludCBfbXlzcWxfZXhlYyh2b2lkICpjb25u
LCBjb25zdCBjaGFyICpjbWQsIGNoYXIgKnZhbHVlLCBzaXplX3Qgc2l6ZSwKICAgICBpZiAocm93
X2NvdW50ID4gMSkgewotCXV0aWxzLT5sb2coTlVMTCwgU0FTTF9MT0dfV0FSTiwKKwl1dGlscy0+
bG9nKHV0aWxzLT5jb25uLCBTQVNMX0xPR19XQVJOLAogCQkgICAic3FsIHBsdWdpbjogZm91bmQg
ZHVwbGljYXRlIHJvdyBmb3IgcXVlcnkgJXMiLCBjbWQpOwpAQCAtMTQ3LDMgKzE0NywzIEBAIHN0
YXRpYyBpbnQgX215c3FsX2V4ZWModm9pZCAqY29ubiwgY29uc3QgY2hhciAqY21kLCBjaGFyICp2
YWx1ZSwgc2l6ZV90IHNpemUsCiAJLyogdW1tIG5vdGhpbmcgZm91bmQgKi8KLQl1dGlscy0+bG9n
KE5VTEwsIFNBU0xfTE9HX05PVEUsICJzcWwgcGx1Z2luOiBubyByZXN1bHQgZm91bmQiKTsKKwl1
dGlscy0+bG9nKHV0aWxzLT5jb25uLCBTQVNMX0xPR19OT1RFLCAic3FsIHBsdWdpbjogbm8gcmVz
dWx0IGZvdW5kIik7CiAJbXlzcWxfZnJlZV9yZXN1bHQocmVzdWx0KTsKQEAgLTI1OSwzICsyNTks
NCBAQCBzdGF0aWMgdm9pZCAqX3Bnc3FsX29wZW4oY2hhciAqaG9zdCwgY2hhciAqcG9ydCwgaW50
IHVzZXNzbCwKICAgICBpZiAoKFBRc3RhdHVzKGNvbm4pICE9IENPTk5FQ1RJT05fT0spKSB7Ci0J
dXRpbHMtPmxvZyhOVUxMLCBTQVNMX0xPR19FUlIsICJzcWwgcGx1Z2luOiAlcyIsIFBRZXJyb3JN
ZXNzYWdlKGNvbm4pKTsKKwl1dGlscy0+bG9nKHV0aWxzLT5jb25uLCBTQVNMX0xPR19FUlIsICJz
cWwgcGx1Z2luOiAlcyIsCisJCSAgIFBRZXJyb3JNZXNzYWdlKGNvbm4pKTsKIAlyZXR1cm4gTlVM
TDsKQEAgLTI5MCwzICsyOTEsMyBAQCBzdGF0aWMgaW50IF9wZ3NxbF9leGVjKHZvaWQgKmNvbm4s
IGNvbnN0IGNoYXIgKmNtZCwgY2hhciAqdmFsdWUsIHNpemVfdCBzaXplLAogCS8qIGVycm9yICov
Ci0JdXRpbHMtPmxvZyhOVUxMLCBTQVNMX0xPR19ERUJVRywgInNxbCBwbHVnaW46ICVzICIsCisJ
dXRpbHMtPmxvZyh1dGlscy0+Y29ubiwgU0FTTF9MT0dfREVCVUcsICJzcWwgcGx1Z2luOiAlcyAi
LAogCQkgICBQUXJlc1N0YXR1cyhzdGF0dXMpKTsKQEAgLTMwMCwzICszMDEsMyBAQCBzdGF0aWMg
aW50IF9wZ3NxbF9leGVjKHZvaWQgKmNvbm4sIGNvbnN0IGNoYXIgKmNtZCwgY2hhciAqdmFsdWUs
IHNpemVfdCBzaXplLAogCS8qIHVtbSBub3RoaW5nIGZvdW5kICovCi0JdXRpbHMtPmxvZyhOVUxM
LCBTQVNMX0xPR19OT1RFLCAic3FsIHBsdWdpbjogbm8gcmVzdWx0IGZvdW5kIik7CisJdXRpbHMt
PmxvZyh1dGlscy0+Y29ubiwgU0FTTF9MT0dfTk9URSwgInNxbCBwbHVnaW46IG5vIHJlc3VsdCBm
b3VuZCIpOwogCVBRY2xlYXIocmVzdWx0KTsKQEAgLTMwNSwzICszMDYsMyBAQCBzdGF0aWMgaW50
IF9wZ3NxbF9leGVjKHZvaWQgKmNvbm4sIGNvbnN0IGNoYXIgKmNtZCwgY2hhciAqdmFsdWUsIHNp
emVfdCBzaXplLAogICAgIGlmIChyb3dfY291bnQgPiAxKSB7Ci0JdXRpbHMtPmxvZyhOVUxMLCBT
QVNMX0xPR19XQVJOLAorCXV0aWxzLT5sb2codXRpbHMtPmNvbm4sIFNBU0xfTE9HX1dBUk4sCiAJ
CSAgICJzcWwgcGx1Z2luOiBmb3VuZCBkdXBsaWNhdGUgcm93IGZvciBxdWVyeSAlcyIsIGNtZCk7
CkBAIC0zNTksMyArMzYwLDMgQEAgc3RhdGljIHZvaWQgKl9zcWxpdGVfb3BlbihjaGFyICpob3N0
IF9fYXR0cmlidXRlX18oKHVudXNlZCkpLAogICAgIGlmIChkYiA9PSBOVUxMKSB7Ci0JdXRpbHMt
PmxvZyhOVUxMLCBTQVNMX0xPR19FUlIsICJzcWwgcGx1Z2luOiAlcyIsIHpFcnJNc2cpOworCXV0
aWxzLT5sb2codXRpbHMtPmNvbm4sIFNBU0xfTE9HX0VSUiwgInNxbCBwbHVnaW46ICVzIiwgekVy
ck1zZyk7CiAJc3FsaXRlX2ZyZWVtZW0gKHpFcnJNc2cpOwpAQCAtMzY2LDMgKzM2NywzIEBAIHN0
YXRpYyB2b2lkICpfc3FsaXRlX29wZW4oY2hhciAqaG9zdCBfX2F0dHJpYnV0ZV9fKCh1bnVzZWQp
KSwKICAgICBpZiAocmMgIT0gU1FMSVRFX09LKSB7Ci0JdXRpbHMtPmxvZyhOVUxMLCBTQVNMX0xP
R19FUlIsICJzcWwgcGx1Z2luOiAlcyIsIHpFcnJNc2cpOworCXV0aWxzLT5sb2codXRpbHMtPmNv
bm4sIFNBU0xfTE9HX0VSUiwgInNxbCBwbHVnaW46ICVzIiwgekVyck1zZyk7CiAJc3FsaXRlX2Zy
ZWVtZW0gKHpFcnJNc2cpOwpAQCAtNDE2LDMgKzQxNywzIEBAIHN0YXRpYyBpbnQgX3NxbGl0ZV9l
eGVjKHZvaWQgKmRiLCBjb25zdCBjaGFyICpjbWQsIGNoYXIgKnZhbHVlLCBzaXplX3Qgc2l6ZSwK
ICAgICBpZiAocmMgIT0gU1FMSVRFX09LICYmIHJjICE9IFNRTElURV9BQk9SVCkgewotCXV0aWxz
LT5sb2coTlVMTCwgU0FTTF9MT0dfREVCVUcsICJzcWwgcGx1Z2luOiAlcyAiLCB6RXJyTXNnKTsK
Kwl1dGlscy0+bG9nKHV0aWxzLT5jb25uLCBTQVNMX0xPR19ERUJVRywgInNxbCBwbHVnaW46ICVz
ICIsIHpFcnJNc2cpOwogCXNxbGl0ZV9mcmVlbWVtICh6RXJyTXNnKTsKQEAgLTQyOCwzICs0Mjks
MyBAQCBzdGF0aWMgaW50IF9zcWxpdGVfZXhlYyh2b2lkICpkYiwgY29uc3QgY2hhciAqY21kLCBj
aGFyICp2YWx1ZSwgc2l6ZV90IHNpemUsCiAJLyogdW1tIG5vdGhpbmcgZm91bmQgKi8KLQl1dGls
cy0+bG9nKE5VTEwsIFNBU0xfTE9HX05PVEUsICJzcWwgcGx1Z2luOiBubyByZXN1bHQgZm91bmQi
KTsKKwl1dGlscy0+bG9nKHV0aWxzLT5jb25uLCBTQVNMX0xPR19OT1RFLCAic3FsIHBsdWdpbjog
bm8gcmVzdWx0IGZvdW5kIik7CiAJcmV0dXJuIC0xOwpAQCAtNDg3LDUgKzQ4OCw2IEBAIHN0YXRp
YyB2b2lkICpfc3FsaXRlM19vcGVuKGNoYXIgKmhvc3QgX19hdHRyaWJ1dGVfXygodW51c2VkKSks
CiAgICAgCWlmIChkYikKLQkJdXRpbHMtPmxvZyhOVUxMLCBTQVNMX0xPR19FUlIsICJzcWwgcGx1
Z2luOiAlcyIsIHNxbGl0ZTNfZXJybXNnKGRiKSk7CisJCXV0aWxzLT5sb2codXRpbHMtPmNvbm4s
IFNBU0xfTE9HX0VSUiwgInNxbCBwbHVnaW46ICVzIiwKKwkJCSAgIHNxbGl0ZTNfZXJybXNnKGRi
KSk7CiAJZWxzZQotCQl1dGlscy0+bG9nKE5VTEwsIFNBU0xfTE9HX0VSUiwgInNxbCBwbHVnaW46
ICVkIiwgcmMpOworCQl1dGlscy0+bG9nKHV0aWxzLT5jb25uLCBTQVNMX0xPR19FUlIsICJzcWwg
cGx1Z2luOiAlZCIsIHJjKTsKIAlzcWxpdGUzX2Nsb3NlKGRiKTsKQEAgLTQ5Nyw2ICs0OTksNyBA
QCBzdGF0aWMgdm9pZCAqX3NxbGl0ZTNfb3BlbihjaGFyICpob3N0IF9fYXR0cmlidXRlX18oKHVu
dXNlZCkpLAogICAgIAlpZiAoekVyck1zZykgewotCQl1dGlscy0+bG9nKE5VTEwsIFNBU0xfTE9H
X0VSUiwgInNxbCBwbHVnaW46ICVzIiwgekVyck1zZyk7CisJCXV0aWxzLT5sb2codXRpbHMtPmNv
bm4sIFNBU0xfTE9HX0VSUiwgInNxbCBwbHVnaW46ICVzIiwKKwkJCSAgIHpFcnJNc2cpOwogCQlz
cWxpdGUzX2ZyZWUoekVyck1zZyk7CiAJfSBlbHNlCi0JCXV0aWxzLT5sb2coTlVMTCwgU0FTTF9M
T0dfREVCVUcsICJzcWwgcGx1Z2luOiAlZCIsIHJjKTsKKwkJdXRpbHMtPmxvZyh1dGlscy0+Y29u
biwgU0FTTF9MT0dfREVCVUcsICJzcWwgcGx1Z2luOiAlZCIsIHJjKTsKIAlzcWxpdGUzX2Nsb3Nl
KGRiKTsKQEAgLTU1NCw2ICs1NTcsNiBAQCBzdGF0aWMgaW50IF9zcWxpdGUzX2V4ZWModm9pZCAq
ZGIsCiAgICAgCWlmICh6RXJyTXNnKSB7Ci0JICAgIHV0aWxzLT5sb2coTlVMTCwgU0FTTF9MT0df
REVCVUcsICJzcWwgcGx1Z2luOiAlcyIsIHpFcnJNc2cpOworCSAgICB1dGlscy0+bG9nKHV0aWxz
LT5jb25uLCBTQVNMX0xPR19ERUJVRywgInNxbCBwbHVnaW46ICVzIiwgekVyck1zZyk7CiAJICAg
IHNxbGl0ZTNfZnJlZSh6RXJyTXNnKTsKIAl9IGVsc2UgewotCSAgICB1dGlscy0+bG9nKE5VTEws
IFNBU0xfTE9HX0RFQlVHLCAic3FsIHBsdWdpbjogJWQiLCByYyk7CisJICAgIHV0aWxzLT5sb2co
dXRpbHMtPmNvbm4sIFNBU0xfTE9HX0RFQlVHLCAic3FsIHBsdWdpbjogJWQiLCByYyk7CiAJfQpA
QCAtNTY5LDMgKzU3MiwzIEBAIHN0YXRpYyBpbnQgX3NxbGl0ZTNfZXhlYyh2b2lkICpkYiwKIAkv
KiB1bW0gbm90aGluZyBmb3VuZCAqLwotCXV0aWxzLT5sb2coTlVMTCwgU0FTTF9MT0dfTk9URSwg
InNxbCBwbHVnaW46IG5vIHJlc3VsdCBmb3VuZCIpOworCXV0aWxzLT5sb2codXRpbHMtPmNvbm4s
IFNBU0xfTE9HX05PVEUsICJzcWwgcGx1Z2luOiBubyByZXN1bHQgZm91bmQiKTsKIAlyZXR1cm4g
LTE7CkBAIC03MjEsMyArNzI0LDMgQEAgc3RhdGljIGNoYXIgKnNxbF9jcmVhdGVfc3RhdGVtZW50
KGNvbnN0IGNoYXIgKnN0YXRlbWVudCwgY29uc3QgY2hhciAqcHJvcCwKIAkgICAgZWxzZSB7Ci0J
CXV0aWxzLT5sb2coTlVMTCwgU0FTTF9MT0dfRVJSLAorCQl1dGlscy0+bG9nKHV0aWxzLT5jb25u
LCBTQVNMX0xPR19FUlIsCiAJCQkgICAiJyUldicgc2hvdWxkbid0IGJlIGluIGEgU0VMRUNUIG9y
IERFTEVURSIpOwpAQCAtNzcxLDMgKzc3NCwzIEBAIHN0YXRpYyB2b2lkIHNxbF9nZXRfc2V0dGlu
Z3MoY29uc3Qgc2FzbF91dGlsc190ICp1dGlscywgdm9pZCAqZ2xvYl9jb250ZXh0KQogICAgIGlm
ICghZS0+bmFtZSkgewotCXV0aWxzLT5sb2coTlVMTCwgU0FTTF9MT0dfRVJSLCAiU1FMIGVuZ2lu
ZSAnJXMnIG5vdCBzdXBwb3J0ZWQiLAorCXV0aWxzLT5sb2codXRpbHMtPmNvbm4sIFNBU0xfTE9H
X0VSUiwgIlNRTCBlbmdpbmUgJyVzJyBub3Qgc3VwcG9ydGVkIiwKIAkJICAgZW5naW5lX25hbWUp
OwpAQCAtODQ3LDMgKzg1MCwzIEBAIHN0YXRpYyB2b2lkICpzcWxfY29ubmVjdChzcWxfc2V0dGlu
Z3NfdCAqc2V0dGluZ3MsIGNvbnN0IHNhc2xfdXRpbHNfdCAqdXRpbHMpCiAgICAgICovCi0gICAg
dXRpbHMtPmxvZyhOVUxMLCBTQVNMX0xPR19ERUJVRywKKyAgICB1dGlscy0+bG9nKHV0aWxzLT5j
b25uLCBTQVNMX0xPR19ERUJVRywKIAkgICAgICAgInNxbCBwbHVnaW4gdHJ5IGFuZCBjb25uZWN0
IHRvIGEgaG9zdFxuIik7CkBAIC04NjMsMyArODY2LDMgQEAgc3RhdGljIHZvaWQgKnNxbF9jb25u
ZWN0KHNxbF9zZXR0aW5nc190ICpzZXR0aW5ncywgY29uc3Qgc2FzbF91dGlsc190ICp1dGlscykK
IAkKLQl1dGlscy0+bG9nKE5VTEwsIFNBU0xfTE9HX0RFQlVHLAorCXV0aWxzLT5sb2codXRpbHMt
PmNvbm4sIFNBU0xfTE9HX0RFQlVHLAogCQkgICAic3FsIHBsdWdpbiB0cnlpbmcgdG8gb3BlbiBk
YiAnJXMnIG9uIGhvc3QgJyVzJyVzXG4iLApAQCAtODc5LDMgKzg4MiwzIEBAIHN0YXRpYyB2b2lk
ICpzcWxfY29ubmVjdChzcWxfc2V0dGluZ3NfdCAqc2V0dGluZ3MsIGNvbnN0IHNhc2xfdXRpbHNf
dCAqdXRpbHMpCiAJCi0JdXRpbHMtPmxvZyhOVUxMLCBTQVNMX0xPR19FUlIsCisJdXRpbHMtPmxv
Zyh1dGlscy0+Y29ubiwgU0FTTF9MT0dfRVJSLAogCQkgICAic3FsIHBsdWdpbiBjb3VsZCBub3Qg
Y29ubmVjdCB0byBob3N0ICVzIiwgY3VyX2hvc3QpOwpAQCAtOTE5LDMgKzkyMiwzIEBAIHN0YXRp
YyBpbnQgc3FsX2F1eHByb3BfbG9va3VwKHZvaWQgKmdsb2JfY29udGV4dCwKICAgICAKLSAgICBz
cGFyYW1zLT51dGlscy0+bG9nKE5VTEwsIFNBU0xfTE9HX0RFQlVHLAorICAgIHNwYXJhbXMtPnV0
aWxzLT5sb2coc3BhcmFtcy0+dXRpbHMtPmNvbm4sIFNBU0xfTE9HX0RFQlVHLAogCQkJInNxbCBw
bHVnaW4gUGFyc2UgdGhlIHVzZXJuYW1lICVzXG4iLCB1c2VyKTsKQEAgLTk2OCwzICs5NzEsMyBA
QCBzdGF0aWMgaW50IHNxbF9hdXhwcm9wX2xvb2t1cCh2b2lkICpnbG9iX2NvbnRleHQsCiAgICAg
aWYgKCFjb25uKSB7Ci0Jc3BhcmFtcy0+dXRpbHMtPmxvZyhOVUxMLCBTQVNMX0xPR19FUlIsCisJ
c3BhcmFtcy0+dXRpbHMtPmxvZyhzcGFyYW1zLT51dGlscy0+Y29ubiwgU0FTTF9MT0dfRVJSLAog
CQkJICAgICJzcWwgcGx1Z2luIGNvdWxkbid0IGNvbm5lY3QgdG8gYW55IGhvc3RcbiIpOwpAQCAt
MTAxNiw1ICsxMDE5LDYgQEAgc3RhdGljIGludCBzcWxfYXV4cHJvcF9sb29rdXAodm9pZCAqZ2xv
Yl9jb250ZXh0LAogCSAgICBkb190eG4gPSAxOwotCSAgICBzcGFyYW1zLT51dGlscy0+bG9nKE5V
TEwsIFNBU0xfTE9HX0RFQlVHLCAiYmVnaW4gdHJhbnNhY3Rpb24iKTsKKwkgICAgc3BhcmFtcy0+
dXRpbHMtPmxvZyhzcGFyYW1zLT51dGlscy0+Y29ubiwgU0FTTF9MT0dfREVCVUcsCisJCQkJImJl
Z2luIHRyYW5zYWN0aW9uIik7CiAJICAgIGlmIChzZXR0aW5ncy0+c3FsX2VuZ2luZS0+c3FsX2Jl
Z2luX3R4bihjb25uLCBzcGFyYW1zLT51dGlscykpIHsKLQkJc3BhcmFtcy0+dXRpbHMtPmxvZyhO
VUxMLCBTQVNMX0xPR19FUlIsIAorCQlzcGFyYW1zLT51dGlscy0+bG9nKHNwYXJhbXMtPnV0aWxz
LT5jb25uLCBTQVNMX0xPR19FUlIsCiAJCQkJICAgICJVbmFibGUgdG8gYmVnaW4gdHJhbnNhY3Rp
b25cbiIpOwpAQCAtMTAyMywzICsxMDI3LDMgQEAgc3RhdGljIGludCBzcWxfYXV4cHJvcF9sb29r
dXAodm9pZCAqZ2xvYl9jb250ZXh0LAogICAgIAotCXNwYXJhbXMtPnV0aWxzLT5sb2coTlVMTCwg
U0FTTF9MT0dfREVCVUcsCisJc3BhcmFtcy0+dXRpbHMtPmxvZyhzcGFyYW1zLT51dGlscy0+Y29u
biwgU0FTTF9MT0dfREVCVUcsCiAJCQkgICAgInNxbCBwbHVnaW4gY3JlYXRlIHN0YXRlbWVudCBm
cm9tICVzICVzICVzXG4iLApAQCAtMTAzNywzICsxMDQxLDMgQEAgc3RhdGljIGludCBzcWxfYXV4
cHJvcF9sb29rdXAodm9pZCAqZ2xvYl9jb250ZXh0LAogCQotCXNwYXJhbXMtPnV0aWxzLT5sb2co
TlVMTCwgU0FTTF9MT0dfREVCVUcsCisJc3BhcmFtcy0+dXRpbHMtPmxvZyhzcGFyYW1zLT51dGls
cy0+Y29ubiwgU0FTTF9MT0dfREVCVUcsCiAJCQkgICAgInNxbCBwbHVnaW4gZG9pbmcgcXVlcnkg
JXNcbiIsIHF1ZXJ5KTsKQEAgLTEwNjcsNSArMTA3MSw2IEBAIHN0YXRpYyBpbnQgc3FsX2F1eHBy
b3BfbG9va3VwKHZvaWQgKmdsb2JfY29udGV4dCwKIAkJZG9fdHhuID0gMTsKLQkJc3BhcmFtcy0+
dXRpbHMtPmxvZyhOVUxMLCBTQVNMX0xPR19ERUJVRywgImJlZ2luIHRyYW5zYWN0aW9uIik7CisJ
CXNwYXJhbXMtPnV0aWxzLT5sb2coc3BhcmFtcy0+dXRpbHMtPmNvbm4sIFNBU0xfTE9HX0RFQlVH
LAorCQkJCSAgICAiYmVnaW4gdHJhbnNhY3Rpb24iKTsKIAkJaWYgKHNldHRpbmdzLT5zcWxfZW5n
aW5lLT5zcWxfYmVnaW5fdHhuKGNvbm4sIHNwYXJhbXMtPnV0aWxzKSkgewotCQkgICAgc3BhcmFt
cy0+dXRpbHMtPmxvZyhOVUxMLCBTQVNMX0xPR19FUlIsIAorCQkgICAgc3BhcmFtcy0+dXRpbHMt
PmxvZyhzcGFyYW1zLT51dGlscy0+Y29ubiwgU0FTTF9MT0dfRVJSLCAKIAkJCQkJIlVuYWJsZSB0
byBiZWdpbiB0cmFuc2FjdGlvblxuIik7CkBAIC0xMDc0LDMgKzEwNzksMyBAQCBzdGF0aWMgaW50
IHNxbF9hdXhwcm9wX2xvb2t1cCh2b2lkICpnbG9iX2NvbnRleHQsCiAKLQkgICAgc3BhcmFtcy0+
dXRpbHMtPmxvZyhOVUxMLCBTQVNMX0xPR19ERUJVRywKKwkgICAgc3BhcmFtcy0+dXRpbHMtPmxv
ZyhzcGFyYW1zLT51dGlscy0+Y29ubiwgU0FTTF9MT0dfREVCVUcsCiAJCQkJInNxbCBwbHVnaW4g
Y3JlYXRlIHN0YXRlbWVudCBmcm9tICVzICVzICVzXG4iLApAQCAtMTA5MCwzICsxMDk1LDMgQEAg
c3RhdGljIGludCBzcWxfYXV4cHJvcF9sb29rdXAodm9pZCAqZ2xvYl9jb250ZXh0LAogCSAgICB9
IGVsc2UgewotCQlzcGFyYW1zLT51dGlscy0+bG9nKE5VTEwsIFNBU0xfTE9HX0RFQlVHLAorCQlz
cGFyYW1zLT51dGlscy0+bG9nKHNwYXJhbXMtPnV0aWxzLT5jb25uLCBTQVNMX0xPR19ERUJVRywK
IAkJCQkgICAgInNxbCBwbHVnaW4gZG9pbmcgcXVlcnkgJXNcbiIsIHF1ZXJ5KTsKQEAgLTExMTIs
NSArMTExNyw2IEBAIHN0YXRpYyBpbnQgc3FsX2F1eHByb3BfbG9va3VwKHZvaWQgKmdsb2JfY29u
dGV4dCwKICAgICBpZiAoZG9fdHhuKSB7Ci0Jc3BhcmFtcy0+dXRpbHMtPmxvZyhOVUxMLCBTQVNM
X0xPR19ERUJVRywgImNvbW1pdCB0cmFuc2FjdGlvbiIpOworCXNwYXJhbXMtPnV0aWxzLT5sb2co
c3BhcmFtcy0+dXRpbHMtPmNvbm4sIFNBU0xfTE9HX0RFQlVHLAorCQkJICAgICJjb21taXQgdHJh
bnNhY3Rpb24iKTsKIAlpZiAoc2V0dGluZ3MtPnNxbF9lbmdpbmUtPnNxbF9jb21taXRfdHhuKGNv
bm4sIHNwYXJhbXMtPnV0aWxzKSkgewotCSAgICBzcGFyYW1zLT51dGlscy0+bG9nKE5VTEwsIFNB
U0xfTE9HX0VSUiwgCisJICAgIHNwYXJhbXMtPnV0aWxzLT5sb2coc3BhcmFtcy0+dXRpbHMtPmNv
bm4sIFNBU0xfTE9HX0VSUiwKIAkJCQkiVW5hYmxlIHRvIGNvbW1pdCB0cmFuc2FjdGlvblxuIik7
CkBAIC0xMTYyLDMgKzExNjgsMyBAQCBzdGF0aWMgaW50IHNxbF9hdXhwcm9wX3N0b3JlKHZvaWQg
Kmdsb2JfY29udGV4dCwKICAgICAKLSAgICBzcGFyYW1zLT51dGlscy0+bG9nKE5VTEwsIFNBU0xf
TE9HX0RFQlVHLAorICAgIHNwYXJhbXMtPnV0aWxzLT5sb2coc3BhcmFtcy0+dXRpbHMtPmNvbm4s
IFNBU0xfTE9HX0RFQlVHLAogCQkJInNxbCBwbHVnaW4gUGFyc2UgdGhlIHVzZXJuYW1lICVzXG4i
LCB1c2VyKTsKQEAgLTEyMDUsMyArMTIxMSwzIEBAIHN0YXRpYyBpbnQgc3FsX2F1eHByb3Bfc3Rv
cmUodm9pZCAqZ2xvYl9jb250ZXh0LAogICAgIGlmICghY29ubikgewotCXNwYXJhbXMtPnV0aWxz
LT5sb2coTlVMTCwgU0FTTF9MT0dfRVJSLAorCXNwYXJhbXMtPnV0aWxzLT5sb2coc3BhcmFtcy0+
dXRpbHMtPmNvbm4sIFNBU0xfTE9HX0VSUiwKIAkJCSAgICAic3FsIHBsdWdpbiBjb3VsZG4ndCBj
b25uZWN0IHRvIGFueSBob3N0XG4iKTsKQEAgLTEyMTQsMyArMTIyMCwzIEBAIHN0YXRpYyBpbnQg
c3FsX2F1eHByb3Bfc3RvcmUodm9pZCAqZ2xvYl9jb250ZXh0LAogICAgIGlmIChzZXR0aW5ncy0+
c3FsX2VuZ2luZS0+c3FsX2JlZ2luX3R4bihjb25uLCBzcGFyYW1zLT51dGlscykpIHsKLQlzcGFy
YW1zLT51dGlscy0+bG9nKE5VTEwsIFNBU0xfTE9HX0VSUiwgCisJc3BhcmFtcy0+dXRpbHMtPmxv
ZyhzcGFyYW1zLT51dGlscy0+Y29ubiwgU0FTTF9MT0dfRVJSLCAKIAkJCSAgICAiVW5hYmxlIHRv
IGJlZ2luIHRyYW5zYWN0aW9uXG4iKTsKQEAgLTEyNTQsMyArMTI2MCwzIEBAIHN0YXRpYyBpbnQg
c3FsX2F1eHByb3Bfc3RvcmUodm9pZCAqZ2xvYl9jb250ZXh0LAogCQkJCSAgICAgc3BhcmFtcy0+
dXRpbHMpOwotCSAgICBzcGFyYW1zLT51dGlscy0+bG9nKE5VTEwsIFNBU0xfTE9HX0RFQlVHLAor
CSAgICBzcGFyYW1zLT51dGlscy0+bG9nKHNwYXJhbXMtPnV0aWxzLT5jb25uLCBTQVNMX0xPR19E
RUJVRywKIAkJCQkic3FsIHBsdWdpbiBkb2luZyBzdGF0ZW1lbnQgJXNcbiIsCkBAIC0xMjY5LDYg
KzEyNzUsNiBAQCBzdGF0aWMgaW50IHNxbF9hdXhwcm9wX3N0b3JlKHZvaWQgKmdsb2JfY29udGV4
dCwKICAgICBpZiAocmV0ICE9IFNBU0xfT0spIHsKLQlzcGFyYW1zLT51dGlscy0+bG9nKE5VTEws
IFNBU0xfTE9HX0VSUiwKKwlzcGFyYW1zLT51dGlscy0+bG9nKHNwYXJhbXMtPnV0aWxzLT5jb25u
LCBTQVNMX0xPR19FUlIsCiAJCQkgICAgIkZhaWxlZCB0byBzdG9yZSBhdXhwcm9wOyBhYm9ydGlu
ZyB0cmFuc2FjdGlvblxuIik7CiAJaWYgKHNldHRpbmdzLT5zcWxfZW5naW5lLT5zcWxfcm9sbGJh
Y2tfdHhuKGNvbm4sIHNwYXJhbXMtPnV0aWxzKSkgewotCSAgICBzcGFyYW1zLT51dGlscy0+bG9n
KE5VTEwsIFNBU0xfTE9HX0VSUiwgCisJICAgIHNwYXJhbXMtPnV0aWxzLT5sb2coc3BhcmFtcy0+
dXRpbHMtPmNvbm4sIFNBU0xfTE9HX0VSUiwKIAkJCQkiVW5hYmxlIHRvIHJvbGxiYWNrIHRyYW5z
YWN0aW9uXG4iKTsKQEAgLTEyNzcsMyArMTI4MywzIEBAIHN0YXRpYyBpbnQgc3FsX2F1eHByb3Bf
c3RvcmUodm9pZCAqZ2xvYl9jb250ZXh0LAogICAgIGVsc2UgaWYgKHNldHRpbmdzLT5zcWxfZW5n
aW5lLT5zcWxfY29tbWl0X3R4bihjb25uLCBzcGFyYW1zLT51dGlscykpIHsKLQlzcGFyYW1zLT51
dGlscy0+bG9nKE5VTEwsIFNBU0xfTE9HX0VSUiwgCisJc3BhcmFtcy0+dXRpbHMtPmxvZyhzcGFy
YW1zLT51dGlscy0+Y29ubiwgU0FTTF9MT0dfRVJSLAogCQkJICAgICJVbmFibGUgdG8gY29tbWl0
IHRyYW5zYWN0aW9uXG4iKTsKQEAgLTEzMDMsMyArMTMwOSwzIEBAIHN0YXRpYyB2b2lkIHNxbF9h
dXhwcm9wX2ZyZWUodm9pZCAqZ2xvYl9jb250ZXh0LCBjb25zdCBzYXNsX3V0aWxzX3QgKnV0aWxz
KQogICAgIAotICAgIHV0aWxzLT5sb2coTlVMTCwgU0FTTF9MT0dfREVCVUcsICJzcWwgZnJlZWlu
ZyBtZW1vcnlcbiIpOworICAgIHV0aWxzLT5sb2codXRpbHMtPmNvbm4sIFNBU0xfTE9HX0RFQlVH
LCAic3FsIGZyZWVpbmcgbWVtb3J5XG4iKTsKICAgICAKQEAgLTEzNDYsMyArMTM1MiwzIEBAIGlu
dCBzcWxfYXV4cHJvcF9wbHVnX2luaXQoY29uc3Qgc2FzbF91dGlsc190ICp1dGlscywKICAgICBp
ZiAoIXNxbF9leGlzdHMoc2V0dGluZ3MtPnNxbF9zZWxlY3QpKSB7Ci0JdXRpbHMtPmxvZyhOVUxM
LCBTQVNMX0xPR19FUlIsICJzcWxfc2VsZWN0IG9wdGlvbiBtaXNzaW5nIik7CisJdXRpbHMtPmxv
Zyh1dGlscy0+Y29ubiwgU0FTTF9MT0dfRVJSLCAic3FsX3NlbGVjdCBvcHRpb24gbWlzc2luZyIp
OwogCXV0aWxzLT5mcmVlKHNldHRpbmdzKTsJCkBAIC0xMzUxLDMgKzEzNTcsMyBAQCBpbnQgc3Fs
X2F1eHByb3BfcGx1Z19pbml0KGNvbnN0IHNhc2xfdXRpbHNfdCAqdXRpbHMsCiAKLSAgICB1dGls
cy0+bG9nKE5VTEwsIFNBU0xfTE9HX0RFQlVHLAorICAgIHV0aWxzLT5sb2codXRpbHMtPmNvbm4s
IFNBU0xfTE9HX0RFQlVHLAogCSAgICAgICAic3FsIGF1eHByb3AgcGx1Z2luIHVzaW5nICVzIGVu
Z2luZVxuIiw=
</data>        

          </attachment>
      

    </bug>

</bugzilla>