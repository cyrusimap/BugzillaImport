<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>1180</bug_id>
          
          <creation_ts>2002-02-25 00:25 EDT</creation_ts>
          <short_desc>mailbox operations are slow under load with skiplist</short_desc>
          <delta_ts>2012-01-06 16:05:09 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>Murder</component>
          <version>2.1.x</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>DEFERRED</resolution>
          
          
          
          
          <priority>P2</priority>
          <bug_severity>enhancement</bug_severity>
          <target_milestone>2.5-next</target_milestone>
          
          <blocked>1169</blocked>
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Rob Siemborski">rjs3@andrew.cmu.edu</reporter>
          <assigned_to name="Ken Murchison">murch@andrew.cmu.edu</assigned_to>
          <cc>vanmeeuwen@kolabsys.com</cc>
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-02-25 00:25:52 EDT</bug_when>
            <thetext>folder creates/deletes/setacl/etc are *much* slower now that we are pushing
updates to the mupdate server.

sadly, it doesn&apos;t seem to be noticeable on mail 2/3.

potential idea: cache an mupdate connection for the duration of the imapd
connection.  (in the immediate term, we don&apos;t want to make them persistant
because this would crush the mupdate server).

Or, make them persistant and have the mupdate server use worker threads instead
of thread-per-connection (probably the better way to go).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-02-25 00:41:42 EDT</bug_when>
            <thetext>actually unclear if this is murder-related.

it could also be being caused by file locking.

interesting side note: goes *much* faster when mail1&apos;s load avg is low.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-02-25 10:24:14 EDT</bug_when>
            <thetext>definately not a murder problem.  (the fcntl(F_SETLKW) blocks forever on the
mailboxes database)
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-02-25 10:24:54 EDT</bug_when>
            <thetext>updated summary</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2002-02-25 18:20:34 EDT</bug_when>
            <thetext>changing target milestone to 2.1.3
better than a tracking bug
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2002-02-28 14:59:11 EDT</bug_when>
            <thetext>pushing back to 2.1.5; this isn&apos;t critical enough to stop the next release, nor
is it really affecting our production system now.
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-03-06 23:41:50 EDT</bug_when>
            <thetext>except it is affecting our production system (and I&apos;m pretty sure this is
tracable to the mulberrys that randomly can&apos;t open an inbox, because they time
out waiting for the server).</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Larry Greenfield">leg+cyrus@andrew.cmu.edu</who>
            <bug_when>2002-04-12 17:49:31 EDT</bug_when>
            <thetext>this problem seems to have been mitigated quite a bit since the change in
locking in the cyrusdb_skiplist foreach().

the O_SYNC fd work may also help but hasn&apos;t been committed
</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2002-05-25 00:49:20 EDT</bug_when>
            <thetext>removing from having a target version.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Rob Siemborski">rjs3@andrew.cmu.edu</who>
            <bug_when>2003-06-25 16:48:40 EDT</bug_when>
            <thetext>&gt; Or, make them persistant and have the mupdate server use worker threads instead
&gt; of thread-per-connection (probably the better way to go).

Unclear, this would quickly eat up a ton of file descriptors on the mupdate
server.  And experience has also shown that file descriptors are pretty precious
on the mupdate server.</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Jeroen van Meeuwen (Kolab Systems)">vanmeeuwen@kolabsys.com</who>
            <bug_when>2012-01-06 16:05:09 EDT</bug_when>
            <thetext>I believe mupdate server connections are persistent nowadays, and with bug #1177 resolved, processes awaiting locks should log messages should they take too long. Also, the master branch has i/o statistic logging capabilities.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>