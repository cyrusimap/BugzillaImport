<?xml version="1.0" standalone="yes" ?>
<!DOCTYPE bugzilla SYSTEM "https://bugzilla.cyrusimap.org/bugzilla.dtd">

<bugzilla version="3.2.5.1-2"
          urlbase="https://bugzilla.cyrusimap.org/"
          maintainer="Dave McMurtrie &lt;dave64@andrew.cmu.edu&gt;"
>

    <bug>
          <bug_id>3545</bug_id>
          
          <creation_ts>2011-08-29 03:00 EDT</creation_ts>
          <short_desc>CID 242: SIGN_EXTENSION in squat_decode_64</short_desc>
          <delta_ts>2011-10-04 19:51:45 EDT</delta_ts>
          <reporter_accessible>1</reporter_accessible>
          <cclist_accessible>1</cclist_accessible>
          <classification_id>1</classification_id>
          <classification>Unclassified</classification>
          <product>Cyrus IMAP</product>
          <component>IMAP</component>
          <version>2.4.x (next)</version>
          <rep_platform>All</rep_platform>
          <op_sys>All</op_sys>
          <bug_status>CLOSED</bug_status>
          <resolution>FIXED</resolution>
          
          
          
          
          <priority>P3</priority>
          <bug_severity>bug</bug_severity>
          <target_milestone>Future</target_milestone>
          
          
          
          <everconfirmed>1</everconfirmed>
          <reporter name="Greg Banks">gnb@fastmail.fm</reporter>
          <assigned_to name="Greg Banks">gnb@fastmail.fm</assigned_to>
          
          <qa_contact name="The Cyrus Bugzilla List">cyrus-bugzilla@lists.andrew.cmu.edu</qa_contact>

      

      

      
          <long_desc isprivate="0">
            <who name="Greg Banks">gnb@fastmail.fm</who>
            <bug_when>2011-08-29 03:00:21 EDT</bug_when>
            <thetext>Found by Coverity.  squat_decode_64() doesn&apos;t correctly decode 64b numbers if bit 31 of the result would be set.  Verified with a cunit testcase.

75   	SquatInt64 squat_decode_64(char const* s) {
76   	  unsigned char* v = (unsigned char*)s;
Event sign_extension: Suspicious implicit sign extension: &quot;v[4]&quot; with type &quot;unsigned char&quot; (8 bits, unsigned) is promoted in &quot;((SquatInt32)v[4] &lt;&lt; 24) | ((SquatInt32)v[5] &lt;&lt; 16) | ((SquatInt32)v[6] &lt;&lt; 8) | (SquatInt32)v[7]&quot; to type &quot;int&quot; (32 bits, signed), then sign-extended to type &quot;long long&quot; (64 bits, signed).  If &quot;((SquatInt32)v[4] &lt;&lt; 24) | ((SquatInt32)v[5] &lt;&lt; 16) | ((SquatInt32)v[6] &lt;&lt; 8) | (SquatInt32)v[7]&quot; is greater than 0x7FFFFFFF, the upper bits of the result will all be 1.
77   	  return ((SquatInt64)v[0] &lt;&lt; 56) | ((SquatInt64)v[1] &lt;&lt; 48)
78   	       | ((SquatInt64)v[2] &lt;&lt; 40) | ((SquatInt64)v[3] &lt;&lt; 32)
79   	       | (((SquatInt32)v[4] &lt;&lt; 24) | ((SquatInt32)v[5] &lt;&lt; 16)
80   	       | ((SquatInt32)v[6] &lt;&lt; 8) | (SquatInt32)v[7]);
81   	}</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Greg Banks">gnb@fastmail.fm</who>
            <bug_when>2011-10-03 23:27:33 EDT</bug_when>
            <thetext>Fixed in cmu master branch:

653c8d0 unit: add unit tests for squat_{en,de}code_{32,64}
88f7e33 Bug #3545: fix sign extension in squat_decode_64
87f73b5 Fix indentation in squat_internal.c</thetext>
          </long_desc>
          <long_desc isprivate="0">
            <who name="Greg Banks">gnb@fastmail.fm</who>
            <bug_when>2011-10-04 19:51:45 EDT</bug_when>
            <thetext>Released in 2.4.12.</thetext>
          </long_desc>
      
      

    </bug>

</bugzilla>